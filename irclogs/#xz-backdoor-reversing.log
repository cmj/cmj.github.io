--- Log opened Sun Mar 31 00:35:05 2024
00:35             ---|<<-- vezhlys [~vezhlys@213.159.57.238] has quit (Remote host closed the connection)
00:46             ---|---> NilacTheGrim [~calin@82.76.226.160] has joined #xz-backdoor-reversing
01:19             ---|---> pmk [6afe4476a1@2a03:6000:1812:100::26d] has joined #xz-backdoor-reversing
01:21             ---|---> svenquakesson[m] [~discord54@2001:470:1af1:101::1:4c70] has joined #xz-backdoor-reversing
01:27             ---|<<-- NilacTheGrim [~calin@82.76.226.160] has quit (Quit: This computer has gone to sleep)
01:30             ---|---> NilacTheGrim [~calin@82.76.226.160] has joined #xz-backdoor-reversing
01:30             ---|<<-- NilacTheGrim [~calin@82.76.226.160] has quit ()
02:15             ---|---> dkasak[m] [~dkasakter@2001:470:1af1:101::1:4c71] has joined #xz-backdoor-reversing
02:28             ---|---> Guest4470 [~trick@ip-193-53-104-44.changeis.iunxi.net] has joined #xz-backdoor-reversing
02:30             ---|<<-- bauen1 [~bauen1|@ppp-212-114-180-66.dynamic.mnet-online.de] has quit (Ping timeout: 480 seconds)
02:52             ---|<<-- Guest4470 [~trick@ip-193-53-104-44.changeis.iunxi.net] has quit (Quit: Leaving)
02:52             ---|---> lucca [~lucca@ip-193-53-104-44.changeis.iunxi.net] has joined #xz-backdoor-reversing
03:02             ---|<<-- Riastradh [~riastradh@00021fbb.user.oftc.net] has quit (Remote host closed the connection)
03:32             ---|---> Gamray[m] [~gamraymat@2001:470:1af1:101::1:4c78] has joined #xz-backdoor-reversing
03:33             ---|---> _discord_1134759629084168253[m [~discor_40@2001:470:1af1:101::1:4c79] has joined #xz-backdoor-reversing
03:35             ---|<--- Gamray[m] [~gamraymat@2001:470:1af1:101::1:4c78] has left #xz-backdoor-reversing ()
03:38             ---|---> boklm [~b@00010ad7.user.oftc.net] has joined #xz-backdoor-reversing
03:47             ---|User: *** lucca is now known as lukka
03:49             ---|<<-- jiatan_ [~er@44-174-190-90.dyn.estpak.ee] has quit ()
03:51             ---|---> er [~er@44-174-190-90.dyn.estpak.ee] has joined #xz-backdoor-reversing
03:51             ---|---> utf-4096 [~utf-4096@2a01cb008bc5b400daf8d16b70e6516b.ipv6.abo.wanadoo.fr] has joined #xz-backdoor-reversing
04:00             ---|---> tdb[m] [~tdbtdbfi@2001:470:1af1:101::1:4c7a] has joined #xz-backdoor-reversing
04:05             ---|<<-- lukka [~lucca@ip-193-53-104-44.changeis.iunxi.net] has quit (Ping timeout: 480 seconds)
04:10             ---|<<-- Ganymed [~daniel@nh.xcx.cc] has quit (Quit: leaving)
04:18             ---|---> philb [~phil@grimoire.org.uk] has joined #xz-backdoor-reversing
04:24             ---|<<-- Celelibi [celelibi@00012037.user.oftc.net] has quit (Quit: Quitte)
04:27             ---|---> mx099[m] [~mx099matr@2001:470:1af1:101::1:4c7b] has joined #xz-backdoor-reversing
04:31             ---|---> Celelibi [celelibi@82-64-105-152.subs.proxad.net] has joined #xz-backdoor-reversing
04:41             ---|<--- stefanha [~stefanha@00019c89.user.oftc.net] has left #xz-backdoor-reversing ()
04:42             ---|---> Bl3nd3r [~Bl3nd3r@8VQAAGMMQ.tor-irc.dnsbl.oftc.net] has joined #xz-backdoor-reversing
04:49             ---|<<-- linkfanel [linkfanel@82-64-25-168.subs.proxad.net] has quit (Read error: Connection reset by peer)
04:49             ---|<<-- Celelibi [celelibi@00012037.user.oftc.net] has quit (Ping timeout: 480 seconds)
04:53             ---|---> _discord_644856977566203905[m] [~discord64@2001:470:1af1:101::1:4c7c] has joined #xz-backdoor-reversing
04:57             ---|---> Celelibi [celelibi@82-64-105-152.subs.proxad.net] has joined #xz-backdoor-reversing
05:06             ---|---> lskovlun [~lars@0x3ec6a996.ose.customer.dk.telia.net] has joined #xz-backdoor-reversing
05:19             ---|---> hiItsMe [~hiItsMe@2a0e:1c80:14:0:45:15:18:72] has joined #xz-backdoor-reversing
05:23             ---|---> Penguinpee [penguinpee@got.my.bouncer.from.bnc4free.com] has joined #xz-backdoor-reversing
05:23             ---|<<-- zhli [~lzh@DN200oula.stanford.edu] has quit (Ping timeout: 480 seconds)
05:40             ---|---> cpach [sid296028@id-296028.helmsley.irccloud.com] has joined #xz-backdoor-reversing
05:56             ---|---> _discord_846831849807544380[m] [~discord84@2001:470:1af1:101::1:4c7d] has joined #xz-backdoor-reversing
06:02             ---|<<-- filipe [~ffernand@0002ef60.user.oftc.net] has quit (Ping timeout: 480 seconds)
06:08             ---|---> MajorBiscuit[m] [~majorbisc@2001:470:1af1:101::aa4e] has joined #xz-backdoor-reversing
06:15             ---|---> Riastradh [~riastradh@jupiter.mumble.net] has joined #xz-backdoor-reversing
06:28             ---|<<-- tolto [~tolto@5402D3E4.dsl.pool.telekom.hu] has quit (Quit: Leaving)
06:38             ---|---> paisley[m] [~paisleytc@2001:470:1af1:101::1:4c80] has joined #xz-backdoor-reversing
06:55             ---|---> jomo[m] [~jomocccac@2001:470:1af1:101::86bd] has joined #xz-backdoor-reversing
07:04             ---|<<-- dutch [~dutchingr@00028048.user.oftc.net] has quit (Quit: WeeChat 4.2.1)
07:15             ---|<<-- Riastradh [~riastradh@jupiter.mumble.net] has quit (Ping timeout: 480 seconds)
07:15             ---|<<-- lskovlun [~lars@0x3ec6a996.ose.customer.dk.telia.net] has quit (Quit: Leaving)
07:27             ---|User: *** NexAdn is now known as NexAdn_
07:28             ---|---> siberiss[m] [~siberissm@2001:470:1af1:101::1:4c81] has joined #xz-backdoor-reversing
07:28             ---|---> dutch [~dutchingr@00028048.user.oftc.net] has joined #xz-backdoor-reversing
07:29             ---|---> nex [~nex@2001:638:904:ffe9:ec5a:89ff:fe57:76b0] has joined #xz-backdoor-reversing
07:29             ---|User: *** nex is now known as NexAdn
07:30             ---|---> lzh [~lzh@DN200oula.stanford.edu] has joined #xz-backdoor-reversing
07:30             ---|User: *** lzh is now known as zhli
07:31             ---|---> lzh [~lzh@DN200ougq.stanford.edu] has joined #xz-backdoor-reversing
07:31             ---|<<-- NexAdn [~nex@2001:638:904:ffe9:ec5a:89ff:fe57:76b0] has quit ()
07:33             ---|---> crawler [~crawler@109.245.201.129] has joined #xz-backdoor-reversing
07:35             ---|---> NexAdn [~nex@n107.fem.tu-ilmenau.de] has joined #xz-backdoor-reversing
07:35             ---|---> NilacTheGrim [~calin@82.76.226.160] has joined #xz-backdoor-reversing
07:38             ---|<<-- zhli [~lzh@DN200oula.stanford.edu] has quit (Ping timeout: 480 seconds)
07:41             ---|---> pobrn [~pb@81.16.206.163.nat.pool.zt.hu] has joined #xz-backdoor-reversing
07:43             ---|---> guenivre[m] [~M0001-mat@2001:470:1af1:101::1:4c85] has joined #xz-backdoor-reversing
07:44             ---|---> Teddy [~teddy@legolas.recompile.se] has joined #xz-backdoor-reversing
07:51             ---|---> nex [~NexAdn@p200300f78f1f5900ef6dbe6256272833.dip0.t-ipconnect.de] has joined #xz-backdoor-reversing
07:57             ---|<<-- NexAdn_ [~NexAdn@p200300f78f05570081a8ce61bf30ffc5.dip0.t-ipconnect.de] has quit (Ping timeout: 480 seconds)
08:01             ---|User: *** _discord_1130154192707792996[m is now known as openbsd80[m]
08:20             ---|---> Mooncairn [~mooncairn@0002c5b1.user.oftc.net] has joined #xz-backdoor-reversing
08:27             ---|<<-- Teddy [~teddy@legolas.recompile.se] has quit (Quit: leaving)
08:35             ---|---> katoda [~oftc-webi@user-5-173-12-104.play-internet.pl] has joined #xz-backdoor-reversing
08:35             ---|---> the-power-of-dreams[m] [~the-power@2001:470:1af1:101::9492] has joined #xz-backdoor-reversing
08:36             ---|---> offtopic [sid636544@id-636544.helmsley.irccloud.com] has joined #xz-backdoor-reversing
08:38             ---|<<-- katoda [~oftc-webi@user-5-173-12-104.play-internet.pl] has quit (Remote host closed the connection)
08:39             ---|<<-- nex [~NexAdn@p200300f78f1f5900ef6dbe6256272833.dip0.t-ipconnect.de] has quit (Quit: Leaving)
08:42             ---|---> r2rien [~me@abordeaux-653-1-47-108.w90-11.abo.wanadoo.fr] has joined #xz-backdoor-reversing
08:42             ---|---> Apachez [~Apachez@hatersgonnahate.apachez.net] has joined #xz-backdoor-reversing
08:42             ---|---> abby [~classabby@abby.user.oftc.net] has joined #xz-backdoor-reversing
08:44             ---|---> ItzSwirlz [~ItzSwirlz@pool-108-35-8-77.nwrknj.fios.verizon.net] has joined #xz-backdoor-reversing
08:45             ---|---> Etabeta1 [~Etabeta1@176.207.241.56] has joined #xz-backdoor-reversing
08:45      ItzSwirlz | o/ i just opened the obj in ghidra and I wnat to share, since I just got confirmation that `get_literal_price` is a real function in liblzma, probably not some function this guy put in for crypto
08:46    eriktews[m] | ItzSwirlz: There is a function with the same name in lzma, or the function in the backdoor is equivalent to the one in lzma?
08:46  cl0pinette[m] | most of the symbols if not all are fake, and the functions in the binary actually do other things
08:46      ItzSwirlz | Don't know if it's equivalent or not.
08:47             ---|---> andreyv [~andrey@0001bc7d.user.oftc.net] has joined #xz-backdoor-reversing
08:47             ---|<<-- Bl3nd3r [~Bl3nd3r@8VQAAGMMQ.tor-irc.dnsbl.oftc.net] has quit (Remote host closed the connection)
08:48   willem314[m] | yes, the symbolnames in the binary are very distracting, I started by renaming everything to sub_XXXX  then it is much easier to make sense of things.
08:48             ---|<<-- Naranek [~jalahtir@85-76-83-126-nat.elisa-mobile.fi] has quit (Read error: Connection reset by peer)
08:48             ---|---> Bl3nd3r [~Bl3nd3r@0BGAAFAMT.tor-irc.dnsbl.oftc.net] has joined #xz-backdoor-reversing
08:49      ItzSwirlz | is there any area of the binary I should investigate/look at that'd be useful?
08:49      ItzSwirlz | as in, areas that you'd like someone to check
08:49             ---|---> odrling [~odrling@0002b919.user.oftc.net] has joined #xz-backdoor-reversing
08:50             ---|---> linuxdaemon [linuxdemon@00022375.user.oftc.net] has joined #xz-backdoor-reversing
08:51             ---|---> hir0pro [~tom@hir0pro.user.oftc.net] has joined #xz-backdoor-reversing
08:53             ---|---> Bl3nd3rl_ [~Bl3nd3r@4G4AAHBIC.tor-irc.dnsbl.oftc.net] has joined #xz-backdoor-reversing
08:54             ---|---> Naranek [~jalahtir@85-76-83-126-nat.elisa-mobile.fi] has joined #xz-backdoor-reversing
08:55             ---|---> Bl3nd3rl__ [~Bl3nd3r@8VQAAGMQT.tor-irc.dnsbl.oftc.net] has joined #xz-backdoor-reversing
08:56             ---|User: *** f_[xmpp] is now known as f_
08:58             ---|User: *** f_ is now known as f_[xmpp]
08:59             ---|---> wb9688 [~wb9688@0002a96f.user.oftc.net] has joined #xz-backdoor-reversing
08:59             ---|<<-- Bl3nd3r [~Bl3nd3r@0BGAAFAMT.tor-irc.dnsbl.oftc.net] has quit (Ping timeout: 480 seconds)
09:02             ---|<<-- Bl3nd3rl_ [~Bl3nd3r@4G4AAHBIC.tor-irc.dnsbl.oftc.net] has quit (Ping timeout: 480 seconds)
09:03             ---|---> kyub [~kyub@193.32.248.178] has joined #xz-backdoor-reversing
09:06             ---|---> NilacTheGrim_ [~calin@109.166.135.138] has joined #xz-backdoor-reversing
09:08             ---|<<-- lzh [~lzh@DN200ougq.stanford.edu] has quit (Ping timeout: 480 seconds)
09:09             ---|<<-- NilacTheGrim [~calin@82.76.226.160] has quit (Ping timeout: 480 seconds)
09:10  _discord_3329 | you can take a look at the binary shared in the mailing, that only has exploit code
09:11      ItzSwirlz | crc64_fast_o.... .bin?
09:11  _discord_3329 | liblzma_la-crc64-fast.o
09:11  _discord_3329 | the underscores/dashes distinction is important
09:12      ItzSwirlz | Yep, got it, just any specific sections that havent been looked at yet?
09:16             ---|<<-- NilacTheGrim_ [~calin@109.166.135.138] has quit (Ping timeout: 480 seconds)
09:19             ---|<<-- kyub [~kyub@193.32.248.178] has quit (Remote host closed the connection)
09:19             ---|---> ampelbein [~ampelbein@00016c06.user.oftc.net] has joined #xz-backdoor-reversing
09:19             ---|---> NilacTheGrim_ [~calin@82.76.226.32] has joined #xz-backdoor-reversing
09:24  chrispy_bongo | the two questions i'm curious about are (1) what are the requirements around triggering the backdoor e.g. ssh connection key properties and (2) how are the payloads represented (preliminary analysis seems to suggest that "run system() with arg from part of the key" might be one of a couple options)
09:25  u4315u4312u43 | chrispy_bongo[m]: This belongs to the chat channel, not reversing
09:27             ---|---> kawys [~kawys@public-gprs652329.centertel.pl] has joined #xz-backdoor-reversing
09:27  chrispy_bongo | i should clarify, those are the two questions i'm pursuing (mostly the latter) in my reversing (i'm doing static analysis with ghidra on the mailing list binary).  intended as a suggestion to ItzSwirlz who is asking for direction on what to reverse
09:27             ---|<<-- crawler [~crawler@109.245.201.129] has quit (Ping timeout: 480 seconds)
09:28             ---|---> midou [~midou@sl.projectsegfau.lt] has joined #xz-backdoor-reversing
09:32             ---|---> thematdev[m] [~thematdev@2001:470:1af1:101::1:4c8c] has joined #xz-backdoor-reversing
09:33      ItzSwirlz | I see at the function, offset 0x00102530, there is a comparison for a value against 383 (a prime number)
09:34      ItzSwirlz | Oh, and same variable checked against 269.
09:37      ItzSwirlz | chrispy_bongo[m], https://gist.github.com/smx-smx/a6112d54777845d389bd7126d6e9f504 actually contains some info on unknowns
09:39             ---|---> acidsys [~acidsys@0002bec4.user.oftc.net] has joined #xz-backdoor-reversing
09:40             ---|---> marius_zulu7 [uid644159@id-644159.hampstead.irccloud.com] has joined #xz-backdoor-reversing
09:41             ---|<<-- NilacTheGrim_ [~calin@82.76.226.32] has quit (Quit: This computer has gone to sleep)
09:58             ---|---> mocatta [~oftc-webi@193.221.134.162] has joined #xz-backdoor-reversing
10:00             ---|---> kyub [~kyub@193.32.248.178] has joined #xz-backdoor-reversing
10:10             ---|---> tobbez [tobbez@h-46-59-68-5.A785.priv.bahnhof.se] has joined #xz-backdoor-reversing
10:19             ---|---> karpet[m] [~karpetmat@2001:470:1af1:101::1:4c8f] has joined #xz-backdoor-reversing
10:22             ---|---> crawler [~crawler@109.245.201.129] has joined #xz-backdoor-reversing
10:25             ---|---> _discord_770659603452133426[m] [~discor_40@2001:470:1af1:101::1:4c90] has joined #xz-backdoor-reversing
10:35             ---|---> _discord_519762651815870464[m] [~discor_40@2001:470:1af1:101::1:4c91] has joined #xz-backdoor-reversing
10:45             ---|---> _discord_303560384747667459[m] [~discor_40@2001:470:1af1:101::1:4c92] has joined #xz-backdoor-reversing
10:47             ---|---> ky43 [~oftc-webi@2607:fea8:4f20:c300:d89d:f56a:42f9:5eeb] has joined #xz-backdoor-reversing
10:53             ---|<<-- hiItsMe [~hiItsMe@2a0e:1c80:14:0:45:15:18:72] has quit (Quit: gone)
10:57             ---|---> steckie [~oftc-webi@p200300f75f00f900b1e412526a0c8f3b.dip0.t-ipconnect.de] has joined #xz-backdoor-reversing
11:01             ---|<<-- ky43 [~oftc-webi@2607:fea8:4f20:c300:d89d:f56a:42f9:5eeb] has quit (Remote host closed the connection)
11:05             ---|---> monitor456 [~monitor45@4JHAAAMQN.tor-irc.dnsbl.oftc.net] has joined #xz-backdoor-reversing
11:07             ---|<<-- hir0pro [~tom@hir0pro.user.oftc.net] has quit (Ping timeout: 480 seconds)
11:10             ---|---> lskovlun [~lars@0x3ec6a996.ose.customer.dk.telia.net] has joined #xz-backdoor-reversing
11:12       lskovlun | Jia Tan's March 9 commit claims to revert a specific commit hash, but it doesn't appear to exist. It is fake.
11:15         negril | lskovlun: are you sure about this?
11:15       lskovlun | well, the point of a revert is that the original commit should not be permanently gone...
11:15           abby | it could be a commit that was rebased, breaking the hash
11:15         negril | The commit is still there
11:16         negril | and exists
11:16         negril | adaacafde6661496ca2814b1e94a3ba5186428cb
11:16       lskovlun | sure is. I don't know why git didn't show it the first time.
11:17     clinche[m] | https://git.tukaani.org/?p=xz.git;a=commit;h=adaacafde6661496ca2814b1e94a3ba5186428cb
11:17       lskovlun | ah... I grepped for it the first time
11:17       lskovlun | there's still something fishy here, hold on
11:18       lskovlun | the dot. my fault. nvm.
11:30             ---|---> Riastradh [~riastradh@jupiter.mumble.net] has joined #xz-backdoor-reversing
11:32             ---|---> zhli [~zhli@DN200ouvs.stanford.edu] has joined #xz-backdoor-reversing
11:36             ---|---> Th3_l5D [~oftc-webi@37.166.213.162] has joined #xz-backdoor-reversing
11:36             ---|<<-- Th3_l5D [~oftc-webi@37.166.213.162] has quit ()
11:45  grandpacanary | Asking GitLab to look around if they see Jia's key.   Please upvote.   https://gitlab.com/gitlab-org/gitlab/-/issues/452603
11:47  cl0pinette[m] | march 26 2024*
11:47  grandpacanary | ty cl0pinette (@_discord_602140566821666878:t2bot.io) edited
11:47      ItzSwirlz | For the record, launchpad's keyserver doesn't have it, and I'm trying to check MIT's (becase you never know) and I'm getting timed out
11:48  grandpacanary | Is there a way to check Savannah
11:49      ItzSwirlz | I checked coreutils and m4 for git logs mentioning Jia but I couldn't find anything
11:52      ItzSwirlz | Wait, I remember on GitHub you can do a thing where if you add something to the user url it'll give you their pubkey
11:53          Barto | ItzSwirlz: https://github.com/JiaT75.keys
11:53      ItzSwirlz | ^ yep thx
11:53       lskovlun | They are already using multiple identities though. What's one more?
11:53           abby | ^ it would not be unreasonable for a malicious actor to have many sets of names, emails, and keys
11:54             ---|<<-- r2rien [~me@abordeaux-653-1-47-108.w90-11.abo.wanadoo.fr] has quit (Ping timeout: 480 seconds)
11:54          Barto | ItzSwirlz: https://api.github.com/users/JiaT75/gpg_keys is empty though
11:54  grandpacanary | abby: yes but let's home he was dumb/lazy/drunk for part of the time over the last 2.5 years he was working on this
11:54  grandpacanary | s/home/hope/
11:54          Barto | ItzSwirlz: the alt accounts could be a good idea to look into
11:55      ItzSwirlz | there was only one github account afaik?
11:58          Barto | ItzSwirlz: there's not evidence either way
11:58  cl0pinette[m] | can we get the ssh keys of a user on gitlab as well ?
11:58  svenquakesson | Oh my bad, username is required besides the key \U0001f609
11:59      ItzSwirlz | https://docs.gitlab.com/ee/api/keys.html
11:59          Barto | did someone look into https://api.github.com/users/jaredallard/gpg_keys ?
11:59      ItzSwirlz | It seems getting SSH key by user is only available to admins
11:59          Barto | nvm, disregard what i said
12:00  grandpacanary | cl0pinette[m]: i dont think you could w/o knowing the username.   corp gitlab can grep the whole userbase in a minute, hence the open issue.   whether they will publish the accounts that hit and the repos they are on, i hope they would
12:01  grandpacanary | * ~~~i dont, * they would~~~
12:01      ItzSwirlz | hey guys do we want to check out https://github.com/Neustradamus?tab=overview&from=2024-02-01&to=2024-02-29
12:01  grandpacanary | ItzSwirlz: Only available to administrators.
12:03     xor8882[m] | ItzSwirlz: sorry, why?
12:03      ItzSwirlz | Wow - i thought I sent this msg
12:03      ItzSwirlz | sorry mb
12:03      ItzSwirlz | He is the first follower Jia got on gh
12:04     xor8882[m] | ah interesting
12:04      ItzSwirlz | https://github.com/dmeignan also slightly suspicious of this guy, forked that "STest" thing
12:04  grandpacanary | ItzSwirlz: look at the bottom https://github.com/scram-sasl/info/issues/1
12:04  _discord_7706 | ItzSwirlz: this guy follows absolutely everyone.  even me, i think
12:04      ItzSwirlz | oh alr
12:04      ItzSwirlz | xnox from ubuntu follows him
12:05  grandpacanary | yell at me if i should move this to chat.... but what is this   https://github.com/microsoft/vcpkg/issues/37197
12:05      ItzSwirlz | He said in a comment he's not related. He's actually fine
12:06  _discord_3329 | this is pointless, if it's a stockpuppet account so what? if it's not a stockputtet you are just harassing some unfortunate person
12:06  grandpacanary | oh it's like all the other high level binders who made the mistake of updating their binding to lzma because of Jia
12:11             ---|---> hir0pro [~tom@hir0pro.user.oftc.net] has joined #xz-backdoor-reversing
12:12             ---|---> miton [uid542385@id-542385.tinside.irccloud.com] has joined #xz-backdoor-reversing
12:16             ---|<<-- hir0pro [~tom@hir0pro.user.oftc.net] has quit ()
12:16             ---|---> hir0pro [~tom@hir0pro.user.oftc.net] has joined #xz-backdoor-reversing
12:22             ---|<--- dewyatt[m] [~dewyattgn@2001:470:1af1:101::1:4c65] has left #xz-backdoor-reversing ()
12:26             ---|User: *** Bl3nd3rl__ is now known as Bl3nd3r
12:28        Bl3nd3r | does anyone have the RSA key and Ed448 key 
12:28             ---|<<-- monitor456 [~monitor45@4JHAAAMQN.tor-irc.dnsbl.oftc.net] has quit (Quit: monitor456)
12:29  loganaden5095 | "jia" and his team have the key \U0001f642
12:30             ---|---> dewyatt2104[m] [~dewyatt21@2001:470:1af1:101::1:4c98] has joined #xz-backdoor-reversing
12:35        Bl3nd3r | loganaden5095[m] I don't mean the private the public 
12:35  loganaden5095 | I'm joking
12:35        Bl3nd3r | hihi
12:39             ---|---> mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has joined #xz-backdoor-reversing
12:40             ---|---> Smx2460[m] [~discord31@2001:470:1af1:101::1:4c9a] has joined #xz-backdoor-reversing
12:40     Smx2460[m] | hi!
12:40     Smx2460[m] | i wasn't aware about this group, or i would have joined earlier \U0001f642
12:41            upb | #xz-backdoor-chat
12:43     Smx2460[m] | <ItzSwirlz> "chrispy_bongo, https://gist...." <- yeah i've been staring at that for (way too) long
12:43     Smx2460[m] | * yeah i've been staring at this sample for (way too) long
12:44     Smx2460[m] | how are you guys stepping through the RSA verification function?
12:44     Smx2460[m] | i tried several things including Frida
12:44     Smx2460[m] | but the only reliable way so far was gdb
12:44     Smx2460[m] | s//`/, s//` with hardware breakpoints/
12:45     Smx2460[m] | trying to modify the breakpoint detection/x64 dasm checks results in the code not being called
12:47             ---|<<-- andreyv [~andrey@0001bc7d.user.oftc.net] has quit (Ping timeout: 480 seconds)
12:48  _discord_3035 | Smx2460[m]: Just a quick thought, but could there be a another function validating the detection-function
12:48       lskovlun | Didn't someone mention a checksum? It would have to be calculated and checked at runtime.
12:49             ---|<<-- Guest4431 [~steve@2604:3d09:a982:5d00:9b99:788:4d9d:dea5] has quit (Ping timeout: 480 seconds)
12:50             ---|---> steve [~steve@S0106b85e7158b3bb.wp.shawcable.net] has joined #xz-backdoor-reversing
12:51       lskovlun | https://gist.github.com/smx-smx/a6112d54777845d389bd7126d6e9f504
12:51       lskovlun | maybe check if any of that is relevant
12:51             ---|User: *** steve is now known as Guest4509
12:52  _discord_7706 | lskovlun: I think smx2460 (@_discord_310158180728700929:t2bot.io) wrote that :)
12:57             ---|---> klotzi111[m] [~discord25@2001:470:1af1:101::1:4c9c] has joined #xz-backdoor-reversing
12:57   klotzi111[m] | <Smx2460[m]> "trying to modify the breakpoint..." <- Hard to tell what kind of anti debugging mechanism they used. Maybe you can run it in an VM and use an vm debugger from the host. This of course makes things more difficult because you also step through all kernel code
12:59  cl0pinette[m] | they are verifying that the enbr64 instruction are not overwritten by breakpoint opcode, so if you break, lets say at (function_addr + 5), it could work
12:59  cl0pinette[m] | endbr64*
13:00             ---|---> Supermariofan67 [~tim@206.217.205.48] has joined #xz-backdoor-reversing
13:00   klotzi111[m] | Smx already knows this. He wrote it in his gist. There must be more methods to detect debugging
13:02     Smx2460[m] | <_discord_770659603452133426[m]> "I think smx2460 (@_discord_31015..." <- yep, it's me \U0001f642
13:03     Smx2460[m] | <klotzi111[m]> "Hard to tell what kind of anti..." <- i am already using a VM to run this with NAT, but yeah kernel debugging is a PITA
13:03     Smx2460[m] | so i would rather not use this
13:04     Smx2460[m] | the next idea was to step until return, see where i land, and look around for possible integrity checks that would avoid calling the GOT hook in case of modifications
13:04     Smx2460[m] | but i've been juggling on and off due to Easter
13:05  cl0pinette[m] | or you can use qemu but I wasn't able to trace the sshd process that catches the ssh connection
13:05     Smx2460[m] | it's tricky because it forks off for each child
13:05  cl0pinette[m] | yep
13:05             ---|<<-- Bl3nd3r [~Bl3nd3r@8VQAAGMQT.tor-irc.dnsbl.oftc.net] has quit (Quit: Bl3nd3r)
13:07     Smx2460[m] | also doing the same exact thing with software breakpoints instead of hardware didn't work, so they are really checking the instructions
13:07   klotzi111[m] | Are you aware of this?
13:07   klotzi111[m] | https://github.com/daw1012345/liblzma_backdoor_dyn_analysis
13:07   klotzi111[m] | Then you do not need sshd
13:07     Smx2460[m] | Frida, which also rewrites the prologue, triggers the failure
13:08     Smx2460[m] | iirc it checks for argv[0] being sshd somewhere
13:08     Smx2460[m] | and it also walks the list of loaded libraries
13:08     Smx2460[m] | * loaded libraries, expecting a few
13:08  _discord_3329 | klotzi111[m]: probably could improve that by calling some of the function is hooks
13:08  _discord_3329 | I'm not sure if there is a full list yet
13:08     Smx2460[m] | so i decided it would be better to just use the real thing
13:08     Smx2460[m] | to avoid causing "false positives" caused by the hook program
13:08  cl0pinette[m] | in 5.6.0 from what I heard and the differences I saw in the different binaries, the crash occured because on stack misalignment depending on many factors that i don't know
13:08     Smx2460[m] | ^ thisd
13:08     Smx2460[m] | * ^ this
13:09     Smx2460[m] | it's already quite finnicky on its own
13:10     Smx2460[m] | <klotzi111[m]> "Hard to tell what kind of anti..." <- there are probably at least two that i could identify... one which is the one i documented and the other which disassembles x64 code
13:11             ---|---> monitor456 [~monitor45@5PUAAANBC.tor-irc.dnsbl.oftc.net] has joined #xz-backdoor-reversing
13:11  _discord_3329 | and saves that to +0x10 in that struct used for initial bootstrap
13:11     Smx2460[m] | it looks like each function has its own context kind of struct where working data is kept
13:12     Smx2460[m] | and these structures are passed around
13:12     Smx2460[m] | this conveniently hides all calls by making them indirect
13:12     Smx2460[m] | * them indirect (via function pointers)
13:12     Smx2460[m] | and also contributes to making it all look like a mess of pointers dereference
13:13     Smx2460[m] | i called the initial one `global_context`, because it's reused in some places
13:13  _discord_3329 | that is setup in some indirect way too
13:13     Smx2460[m] | yes it's set up by overwriting `cpuid` with the init function
13:13     Smx2460[m] | calling it
13:13     Smx2460[m] | then restoring it immediately after
13:13     Smx2460[m] | just for the sake of making it not happen directly
13:13     Smx2460[m] | and throw off xrefs
13:14     Smx2460[m] | the same thing they did with lzma_allocator, which is quite... something
13:14     Smx2460[m] | using `lzma_alloc` as the import resolution function.... this looks like multiple people's ideas implemented in one project
13:15             ---|<<-- lskovlun [~lars@0x3ec6a996.ose.customer.dk.telia.net] has quit (Quit: Leaving)
13:15   klotzi111[m] | smx2460 (@_discord_310158180728700929:t2bot.io)
13:15   klotzi111[m] | > disassembles x64 code
13:15   klotzi111[m] | But what can it detect by checking its code? What changes are you making to the code? Are you not using hardware breakpoints?
13:15  _discord_3329 | I under how the structures were defined in C/C++, they seem to reuse fields a lot
13:15  _discord_3329 | maybe unions?
13:15     Smx2460[m] | i wanted to move off gdb to ease the analysis
13:16  _discord_3329 | or was this all just untyped
13:16      genazt[m] | it could detect futher injections
13:16     Smx2460[m] | but if i modify the prologues, it immediately throws it off
13:16     Smx2460[m] | so i wanted to check if someone had figured out a way to fool the check
13:16     Smx2460[m] | this is also work that doesn't go in the direction of understanding the RSA key, so i held off thta
13:16     Smx2460[m] | s/thta/that/
13:17     Smx2460[m] | _discord_332968312373903360[m]: i think they reference each other
13:17  *   Smx2460[m] sent a c code block: https://matrix.org/_matrix/media/v3/download/matrix.org/fbcfngGXlXCCxEAuAaqtvRJk
13:18     Smx2460[m] | i wrote code that works in this way for the payload i wrote for ezinject
13:18     Smx2460[m] | s//my `/, s//` project/
13:18     Smx2460[m] | where only indirect pointers are used
13:18     Smx2460[m] | but there i did this to avoid generating relocations or accesses to global data (and make the resulting code position indepentent)
13:18     Smx2460[m] | here they did it to hide the CFG
13:19     Smx2460[m] | if you think about each structure as "storage for the functions locals", it's not too hard to work with
13:19     Smx2460[m] | but sure requires you to start from the beginning laying code down in that particular way
13:20     Smx2460[m] | setting up rules like:... (full message at <https://matrix.org/_matrix/media/v3/download/matrix.org/aOvvlnngCBIzoVILEELxRHLY>)
13:21             ---|---> NilacTheGrim_ [~calin@82.76.226.32] has joined #xz-backdoor-reversing
13:22         negril | Smx2460[m]: are you using 5.6.0 or 5.6.1?
13:22     Smx2460[m] | 5.6.1
13:22     Smx2460[m] | xz (XZ Utils) 5.4.5
13:22     Smx2460[m] | liblzma 5.6.1
13:22         negril | 5.6.0 is probably easier?
13:22     Smx2460[m] | is it?
13:22     Smx2460[m] | but i'm way too deep in this one now to switch
13:23     Smx2460[m] | https://gist.github.com/smx-smx/a6112d54777845d389bd7126d6e9f504?permalink_comment_id=5007410#gistcomment-5007410
13:23     Smx2460[m] | this is interesting
13:24     Smx2460[m] | should i put the link to this Discord server in the gist btw?
13:24     Smx2460[m] | it adds to the information available (i was told in DMs and wasn't aware of it)
13:24      genazt[m] | sure, it shouldn't hurt
13:25      genazt[m] | more brains lead to more information
13:26  cl0pinette[m] | from what I see they changed code_dasm function between 5.6.0 and 5.6.1
13:26         sjw[m] | Is it worth to just look which areas in the binaries changed from 5.6.0 to 5.6.1?
13:28  cl0pinette[m] | forget what I said, I didn't read the address properly
13:30   klotzi111[m] | <Smx2460[m]> "i wanted to move off gdb to ease..." <- Reading the .text section (a page with Execute Flag) is untypical for a normal program. So how about using mprotect and changing the flags of all .text memory pages to EXECUTE only. Then let it run and wait for the exception to occur. Then you have the address of the code that checks its own code
13:30             ---|<<-- hir0pro [~tom@hir0pro.user.oftc.net] has quit (Quit: Konversation terminated!)
13:32   klotzi111[m] | This might help:
13:32   klotzi111[m] | https://stackoverflow.com/questions/70158915/can-you-change-the-page-permissions-of-a-running-process
13:33             ---|<<-- utf-4096 [~utf-4096@2a01cb008bc5b400daf8d16b70e6516b.ipv6.abo.wanadoo.fr] has quit (Quit: WeeChat 4.2.1)
13:35     Smx2460[m] | klotzi111[m]: that could work
13:36  cl0pinette[m] | most of the changes are really here to fix stack alignment, only something like 50 lines of assembly were added/removed
13:36     Smx2460[m] | it's surely fine tuned, no doubt
13:37     Smx2460[m] | they get the address of variables from .data and increment of fixed amounts to neuter the offset that is introducee by the GOT
13:37     Smx2460[m] | s/introducee/introduced/
13:37     Smx2460[m] | * they get the address of variables from .data and increment the pointers of fixed amounts to neuter the offset that is introduced by the GOT
13:37     Smx2460[m] | stuff that could change easily if you add or remove code or variables
13:37     Smx2460[m] | based on what the compiler did
13:37     Smx2460[m] | for example the way they get the address of the LZMA allocator
13:46 @           js | has anybody found yet how it checks if it's in sshd? That might be an interesting location to check if it also does something in other processes
13:47      genazt[m] | argv[0] check for sure is present
13:52             ---|---> tolto [~quassel@5402D3E4.dsl.pool.telekom.hu] has joined #xz-backdoor-reversing
13:54  cl0pinette[m] | here : 0x12dda in liblzma.so.5.6.1
13:55  cl0pinette[m] | it checks if the hash of the string aka argv[0] is equal to 0x108 which corresponds to sshd from the extracted strings
14:00             ---|<<-- Riastradh [~riastradh@jupiter.mumble.net] has quit (Ping timeout: 480 seconds)
14:03             ---|<<-- NilacTheGrim_ [~calin@82.76.226.32] has quit (Quit: This computer has gone to sleep)
14:03             ---|<<-- steckie [~oftc-webi@p200300f75f00f900b1e412526a0c8f3b.dip0.t-ipconnect.de] has quit (Remote host closed the connection)
14:05  _discord_3035 | <cl0pinette[m]> "it checks if the hash of the..." <- Seems like if it recognizes it runs as sshd, it also checks the command line parameters (Llzma_encoder_init)
14:05             ---|---> filipe [~ffernand@2607:fea8:a9df:af21:de10:6675:8deb:5a8b] has joined #xz-backdoor-reversing
14:08             ---|---> _discord_1121266414205030480[m [~discor_41@2001:470:1af1:101::1:4ca2] has joined #xz-backdoor-reversing
14:08  cl0pinette[m] | yup, you're right
14:09             ---|<<-- filipe [~ffernand@0002ef60.user.oftc.net] has quit ()
14:11     Smx2460[m] | i updated the gdbinit script to account for library load address
14:11     Smx2460[m] | now i can get the breakpoint more reliably , and for some reason now i can detach without it crashing
14:11     Smx2460[m] | so i can replace the entry with "jmp ." and get out
14:12             ---|---> bauen1 [~bauen1|@ppp-212-114-180-66.dynamic.mnet-online.de] has joined #xz-backdoor-reversing
14:24  _discord_3035 | <cl0pinette[m]> "yup, you're right" <- The first part of that function looks for 'd' in the command line, so it seemingly doesn't want to run if sshd is running in debug-mode
14:28             ---|---> Foobar9222[m] [~discor_41@2001:470:1af1:101::1:4ca3] has joined #xz-backdoor-reversing
14:28  cl0pinette[m] | the & 0xdf00 basically checks if the char is a space or nullbyte
14:29             ---|---> esclear[m] [~discord66@2001:470:1af1:101::1:4ca4] has joined #xz-backdoor-reversing
14:31  _discord_3035 | No, it checks lowercase-'d' as in the debug-flag and if that's the case it returns the string (something)
14:32  _discord_3035 | The parent function then checks if something was returned and exits the check with false
14:33  cl0pinette[m] | yeah that's what I meant
14:34  cl0pinette[m] | I just realised i wrote daemon instead of debug, definitely not having enough sleep....
14:34  _discord_3035 | Well, happens to the best of us ^^
14:35             ---|---> _wggy__77896[m] [~discor_41@2001:470:1af1:101::1:4ca5] has joined #xz-backdoor-reversing
14:37             ---|<<-- dutch [~dutchingr@00028048.user.oftc.net] has quit (Quit: WeeChat 4.2.1)
14:40  _discord_3035 | Well, the rest of the function is that if it finds a space, \t or '=', it bails early with result 0. No idea what thats supposed to be, unless I'm misreading something
14:40  cl0pinette[m] | space should be filter in argv, so it should nnever enter in that case
14:44   klotzi111[m] | cl0pinette[m]: *should* meaning that one could have a path with a space. But that is very rare especially for sshd
14:45  cl0pinette[m] | yeah, but it is only checking options
14:45             ---|---> gamray[m]1 [~discor_41@2001:470:1af1:101::1:4ca6] has joined #xz-backdoor-reversing
14:45  cl0pinette[m] | because it checks if *argv[x] == '-'
14:47  _discord_3035 | Does sshd support long parameters?
14:47  _discord_3035 | * Does sshd support/use any long parameters?
14:47  cl0pinette[m] | i checked the manpage and none seem to be listed
14:48  cl0pinette[m] | however
14:48  _discord_3035 | Are there any other ssh servers out there who might, then that code could be to further limit the scope
14:49  cl0pinette[m] | it specifically checks if the binary is /usr/sbin/sshd so low chance
14:49  cl0pinette[m] | but i'll check
14:49             ---|---> an_freund_89627[m] [~discor_41@2001:470:1af1:101::1:4ca7] has joined #xz-backdoor-reversing
14:49  an_freund_896 | cl0pinette[m]: It doesn't - the code just uses getopt(), not getopt_long()
14:50   klotzi111[m] | _discord_303560384747667459[m]: Maybe they added the check for space, \t or '=' so they have an easy way to exclude their own sshd from being exploitable
14:50             ---|---> tamiko_ [~matthias@tenjin.43-1.org] has joined #xz-backdoor-reversing
14:51  cl0pinette[m] | the thing is that sshd doesn't allow these kind of parameters
14:51      genazt[m] | for that they have a special env i have seen?
14:51  cl0pinette[m] | yeah
14:52   klotzi111[m] | genazt[m]: Whats that env variable name and value?
14:52  _discord_3035 | yolAbejyiejuvnup=Evjtgvsh5okmkAvj
14:52  cl0pinette[m] | yolAbejyiejuvnup=Evjtgvsh5okmkAvj
14:53   klotzi111[m] | cl0pinette[m]: But there are some options where you can specify a file and a file path can contain such characters (like the -f and -h options)
14:53  _discord_3035 | klotzi111[m]: or the `-o`-parameter
14:54             ---|<<-- kawys [~kawys@public-gprs652329.centertel.pl] has quit (Remote host closed the connection)
14:55  cl0pinette[m] | hold on
14:55  cl0pinette[m] | you can disable the backdoor with
14:55  cl0pinette[m] | env -i WAYLAND_DISPLAY= sshd -h
14:56      genazt[m] | TERM= should also work
14:56  cl0pinette[m] | to disable the backdoor they dont check what variable is used, only if it appears on the string
14:56  cl0pinette[m] | yep
14:56  an_freund_896 | _discord_303560384747667459[m]: The whole backdoor disabling with that random string makes no sense, just setting TERM or any of about a dozen other names also does so.
14:56  Foobar9222[m] | Anyone figured out the significance of that string then?
14:56      genazt[m] | it does make sense when you want to secure your own servers against your own backdoor
14:56  cl0pinette[m] | or... (full message at <https://matrix.org/_matrix/media/v3/download/matrix.org/cprehwhQZkYFdAoMIRVNwHaF>)
14:57      genazt[m] | but not affect the way the rest of the environment behaves
14:57  Foobar9222[m] | genazt[m]: Right, but if you are a state sponsoring this, are you really running distros that are gonna have it, and even so not just patch it in other ways
14:58          tolto | there's not much to secure if nobody else has the private key anyway
15:00     esclear[m] | Foobar9222[m]: In a bigger organization / group, it is more likely that you have a variety of OSs, systems, etc. If it was a single individual, they would probably build their xz-utils themselves, without the backdoor, no?
15:00     esclear[m] | * In a bigger organization / group, it is more likely that you have a variety of OSs, systems, etc., which would be harder to support / maintain patches for.
15:00     esclear[m] | If it was a single individual, they would probably build their xz-utils themselves, without the backdoor, no?
15:01             ---|---> dutch [~dutchingr@00028048.user.oftc.net] has joined #xz-backdoor-reversing
15:03  Foobar9222[m] | Trying to hide?
15:03             ---|---> _discord_503014684119662592[m] [~discord50@2001:470:1af1:101::1:4ca8] has joined #xz-backdoor-reversing
15:03  _discord_5030 | To frustrate reverse engineering
15:03   klotzi111[m] | Probably to reduce chance of getting detected. If one od there vars are set then the system is probably a PC ot at least a system that has some sort of display and therefor a using actively using it
15:04   klotzi111[m] | s/od/of/, s/there/these/
15:04     esclear[m] | Yes, that's kinda my point. Since the backdoor "only" targets sshd, as far as we know right now, if they just configured their sshds to use that "killstring", they would be safe, even with a backdoored xz-utils installed, or am I missing something?
15:04   klotzi111[m] | * Probably to reduce chance of getting detected. If one of these vars are set then the system is probably a PC ot at least a system that has some sort of display and therefor a user is actively using it
15:04  cl0pinette[m] | the thing is, sshd is rarely run on PC devices, and mostly on servers, so I would have done the opposite
15:04  _discord_5030 | If you can make it look like a heisenbug, it can help it slip passed quite a bit.
15:05  cl0pinette[m] | at least at first to be sure it's shipped
15:05  _discord_1121 | cl0pinette[m]: I have OpenSSH on my Windows 11. \U0001f642 It is out of the box part of the Windows OS.
15:06  _discord_1121 | * Windows OS. So sshd works just fine with some quirks.
15:06   klotzi111[m] | but that opsenssh is not linked against liblzma
15:06   klotzi111[m] | you should be fine
15:06  _discord_5030 | I think the random string variable is a back up plan in case their private key is compromised.
15:06  _discord_1121 | klotzi111[m]: That is what they say, yeah
15:08  _discord_1121 | By openssh repo by microsoft is super modified
15:08  _discord_1121 | s/By/But/
15:08   klotzi111[m] | _discord_1121266414205030480[m: If you want to be sure you can scan all your PE files for the magic string. If you find it you need to do something about it
15:08   klotzi111[m] | <cl0pinette[m]> "yolAbejyiejuvnup=Evjtgvsh5okmkA..." <- This one
15:09       miyon[m] | if you install the latest beta of openssh on windows via https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v9.5.0.0p1-Beta the sshd server (service) is enabled and started by default
15:10  _discord_1121 | Oogh, it was so buggy https://github.com/PowerShell/Win32-OpenSSH/issues/898
15:10        tty6[m] | klotzi111[m]: It\u2019s encoded though, no?
15:11             ---|---> arraybolt3 [~arraybolt@2607:fb91:11d0:cf53:64c5:5006:5f95:41bd] has joined #xz-backdoor-reversing
15:11             ---|---> Nils[m] [~ravagexen@2001:470:1af1:101::1:4ca9] has joined #xz-backdoor-reversing
15:15         tdb[m] | <cl0pinette[m]> "the thing is, sshd is rarely run..." <- I have sshd on all of my Linux workstations, SBCs and even my phone (which runs Sailfish).  But of course it's normally started by the system init scripts so it wouldn't have any user session related environment variables.
15:16      genazt[m] | also tons of iot devices run sshd, i'm pretty sure that nearly every lightbulb has a sshd on it
15:16      genazt[m] | on the other side they never get updated, so no harm here \U0001f604
15:17  cl0pinette[m] | yeah, but what I meant is that barely noone on a computer will start sshd by hand \U0001f604
15:17  Foobar9222[m] | Regarding the landlock disable in XZ, seems completely irellevant to sshd rce correct?
15:18         tdb[m] | Yeah, starting it by hand would most likely happen if you're trying to debug it or investigate a backdoor installed into it
15:18             ---|---> _discord_518944568302108712[m] [~discord51@2001:470:1af1:101::1:4cab] has joined #xz-backdoor-reversing
15:18        Stealth | I also think it applied only to cmake build, which is experimental, not autotools
15:19         negril | cmake would also fail with -DENABLE_SANDBOX=landlock
15:23  _discord_1121 | <cl0pinette[m]> "yolAbejyiejuvnup=Evjtgvsh5okmkA..." <- this  looks like RSA / whatever new thing Base64 + encryption on top/ encrypted string.
15:23 @           js | Reminder that this channel is about reversing, not about Windows or whatever \U0001f642. THere's #xz-backdoor-chat for everything that's not reversing.
15:23             ---|---> _discord_659897428417445909[m] [~discord65@2001:470:1af1:101::1:4cad] has joined #xz-backdoor-reversing
15:24             ---|---> safinaskar [~quassel@212.73.77.104] has joined #xz-backdoor-reversing
15:25  u4315u4312u43 | js: Is there anything more to reverse?
15:25  u4315u4312u43 | That gist link sums up most of the .o file
15:26   klotzi111[m] | There is much missing. What exactly is possible with this backdoor? Is it RCE or just auth bypass? If it is RCE how can it be done. What needs to payload to be like
15:26  cl0pinette[m] | this function is the one with a lot of thing to reverse 0x22a90 in liblzma.so.5.6.1
15:26  _discord_6448 | ofcourse there is, like what are the exact public keys used, what is the embedded disassembler used for
15:26  u4315u4312u43 | _discord_644856977566203905[m]: Is there disassembler?
15:27 @           js | u4315u4312u4321u4310u4304[m]: What gives you the idea that everything has already been reversed? It's an 88 KB binary, heavily obfuscated, parts encrypted, etc.
15:28  u4315u4312u43 | js: Hmm, rough idea was that the Gist I mentioned had roughly the same number of functions listed as the .o (I might be totally wrong, tried to estimate the sizes in head) and also because no much discussion about actual reversing has happened on this channel
15:28  u4315u4312u43 | But it seems that I'm totally wrong, thanks for correcting
15:30      Zborro[m] | cl0pinette: is there any unique opcode or operand for that 0x22a90? I'm looking at the assembly in Ghidra (filename: liblzma_la_crc64_fast.o, 5.6.1), but 0x22a90 seems to be offset from different translation unit (is it term correct?)
15:30  _discord_3035 | cl0pinette (@_discord_602140566821666878:t2bot.io) klotzi111 (@_discord_258574193032036363:t2bot.io) I think we might've mixed up some things here (probably because its quite late), I just looked through the option-parsing again: if it encounters space, \t or '=', it just ignores the rest of the parameter and doesn't abort the check early. So those chars actually won't prevent the backdoor from launching.
15:31  _discord_3035 | But the fact about -d still stands, if sshd if running the debug-mode, its being ignored
15:31  cl0pinette[m] | Zborro[m]: i am looking at the .so, not the .o, I just got the library from debian
15:31             ---|<<-- midou [~midou@sl.projectsegfau.lt] has quit (Ping timeout: 480 seconds)
15:31 @           js | u4315u4312u4321u4310u4304[m]: Which gist exactly are you referring to? We've had a few here
15:31  _discord_3035 | s/if/is/, s/the/in/
15:31  cl0pinette[m] | the one of smx I think
15:31      Zborro[m] | can you please give me some unique operand? E.g. that 0x108 did the trick
15:32  u4315u4312u43 | cl0pinette[m]: Correct
15:32  cl0pinette[m] | 0x5830 in the .o
15:32  _discord_1121 | <js> "What gives you the idea that..." <- What a mess
15:32             ---|---> _discord_896728944479461467[m] [~discor_42@2001:470:1af1:101::1:4caf] has joined #xz-backdoor-reversing
15:34             ---|<<-- safinaskar [~quassel@212.73.77.104] has quit (Read error: No route to host)
15:35   klotzi111[m] | <_discord_303560384747667459[m]> "cl0pinette (@_discord_6021405668..." <- But then that is still odd. Why would they then add such a check? If the are only interested in finding the `-d` option. It is either left from earlier versions of their backdoor (and did not remove it) or they had something planed for the future?
15:36             ---|---> safinaskar [~quassel@87.241.147.219] has joined #xz-backdoor-reversing
15:38      Zborro[m] | doesn't it do other checks then?
15:38      Zborro[m] | isn't there `-o sth=sth` variant of `-d`?
15:38             ---|---> midou [~midou@sl.projectsegfau.lt] has joined #xz-backdoor-reversing
15:39   klotzi111[m] | I am not familiar with that option. But the backdoor code just continues to check the next argument (argv) when it encounters one of these 3 chars. Meaning such options ('-o sth=sth') would be ignored by the backdoor
15:41      Zborro[m] | makes sense. I just looked in man sshd_config and the only option related to debugging seems to be log level
15:44   klotzi111[m] | What exact versions of xz are you guys reversing? I do not mean 5.6.0 vs 5.6.1. But from what distro? Or self compiled (upstream tarball)?
15:45  cl0pinette[m] | this one https://ftp.debian.org/debian/pool/main/x/xz-utils/xzdec_5.6.1-1_amd64.deb
15:45  cl0pinette[m] | at least for me
15:46   klotzi111[m] | xz or lzma?
15:46     esclear[m] | klotzi111[m]: liblzma is part of the uz-utils software package.
15:46  cl0pinette[m] | wait, I sent the wrong link...
15:47  _discord_3035 | klotzi111[m]: I'm using the ones from the oss-security mailing list: https://www.openwall.com/lists/oss-security/2024/03/30/4
15:47   klotzi111[m] | esclear[m]: sure. I just want to get the exact same version so we can share offsets in the binary
15:47  cl0pinette[m] | https://ftp.debian.org/debian/pool/main/x/xz-utils/liblzma5_5.6.1-1_amd64.deb
15:47  cl0pinette[m] | this one
15:47     esclear[m] | Hmm, I'm playing around with `liblzma_la-crc64-fast.o`, extracted from the release tarball.
15:48             ---|---> mlkj2141[m] [~discord33@2001:470:1af1:101::1:4cb1] has joined #xz-backdoor-reversing
15:48    mlkj2141[m] | I built debian xz-utils from source
15:48    mlkj2141[m] | Importing names from the .o at least makes it easy to compare with people who use the .o
15:54     esclear[m] | Are there differences in the liblzma_la-crc64-fast.o file between 5.6.0 and 5.6.1?
15:54  cl0pinette[m] | yes
15:54  cl0pinette[m] | mostly stack alignment though
16:02     Smx2460[m] | i got a "jmp ." to stick, so in theory it should be possible to hook the openssl functions later on
16:02     Smx2460[m] | we'll see
16:04             ---|---> safinaskar_ [~quassel@213.87.135.218] has joined #xz-backdoor-reversing
16:05  _discord_3035 | Yeah, literally, meaning that e.g. the env-variable has to exactly be 'TERM=', right? Not TERM=xyz or event unset, exactly 'TERM='
16:06  _discord_3035 | Or does that lookup exit event if it found a partial match?
16:06  cl0pinette[m] | yes, that's what I think
16:06  _discord_3035 | s/event/even/
16:06             ---|<<-- safinaskar [~quassel@87.241.147.219] has quit (Ping timeout: 480 seconds)
16:06  _discord_1121 | Oh. Okay https://codegolf.stackexchange.com/questions/126244/simple-encryption-for-people-on-a-byte-budget
16:07  cl0pinette[m] | it could be because in the extracted string there is no null byte at the end of those env var
16:09  _discord_3035 | yolAbejyiejuvnup...
16:10  cl0pinette[m] | oh. the huge env var yeah
16:10  _discord_3035 | s/.../=.../
16:10  cl0pinette[m] | this one needs to match exactly
16:17             ---|---> lukka [~lucca@ip-193-53-104-44.changeis.iunxi.net] has joined #xz-backdoor-reversing
16:24             ---|---> itzswirlz0[m] [~discor_42@2001:470:1af1:101::1:4cb3] has joined #xz-backdoor-reversing
16:24             ---|---> _discord_101423443387379712[m] [~discor_42@2001:470:1af1:101::1:4cb4] has joined #xz-backdoor-reversing
16:24  _discord_1014 | <klotzi111[m]> "Reading the .text section (a..." <- is execute-only memory on x86 even a thing yet? (on commodity hardware)
16:24             ---|---> _discord_872248967688224768[m] [~discord87@2001:470:1af1:101::1:4cb5] has joined #xz-backdoor-reversing
16:24  _discord_8722 | No
16:25  _discord_8722 | It exists in the PS5's x86-based CPU made by AMD, but iirc it is meant to keep the kernel from being dumped
16:25  _discord_8722 | And not for general use
16:28  itzswirlz0[m] | Just to update since I've mentioned it in a gist comment but I don't want others to lose it:... (full message at <https://matrix.org/_matrix/media/v3/download/matrix.org/nsLOPcDYPcLbqpUjQgbAaqXd>)
16:33   lindi0533[m] | <_discord_872248967688224768[m]> "And not for general use" <- There was a talk about this from Intel this year: https://www.google.com/url?sa=t&source=web&rct=j&opi=89978449&url=https://lpc.events/event/4/contributions/283/attachments/357/588/Touch_but_dont_look__Running_the_kernel_in_execute_only_memory-presented.pdf
16:36  _discord_8722 | Very interesting
16:36  _discord_8722 | Thanks for sharing
16:38 @           js | <cl0pinette[m]> "this one https://ftp.debian.org..." <- Question: Why reverse the full binary instead of the .o?
16:40  cl0pinette[m] | to find how the _get_cpuid function was wrapped because it is not in the .o
16:40 @           js | ah, yeah, that part was injected into the source in stage2
16:41  cl0pinette[m] | yep
16:41 @           js | but that part already has the source in the stage2, so \U0001f609
16:41             ---|<--- safinaskar_ [~quassel@213.87.135.218] has left #xz-backdoor-reversing ()
16:42  cl0pinette[m] | yeah it got the source but as I was tracing the process with qemu it was easier to understand it with the full lib
16:42             ---|---> r2rien [~me@abordeaux-653-1-47-108.w90-11.abo.wanadoo.fr] has joined #xz-backdoor-reversing
16:43 @           js | ah, sure, for dynamic analysis, that makes sense
16:44        Stealth | js: should the wiki be updated as https://gist.github.com/smx-smx/a6112d54777845d389bd7126d6e9f504 progresses?
16:44 @           js | yes please, feel free to add all findings to the wiki
16:45 @           js | I just started writing down what I found in during the analysis of the shell stuff so I don't forget, hoping others would build on it \U0001f642
16:45 @           js | ideally in the end it's one wiki documenting every single byte of the backdoor \U0001f609
16:45             ---|---> _discord_340134014943887361[m] [~discor_42@2001:470:1af1:101::1:4cb6] has joined #xz-backdoor-reversing
16:45  _discord_3401 | Sorry if this has been asked before, but is anyone using LLM to help deobfuscate or propose function and/or variable names? Unsure about state of the art here..
16:52     Smx2460[m] | involves cooperation between frida and gdb
17:00  itzswirlz0[m] | <js> "I just started writing down what..." <- i dont think i can edit it though
17:01  * itzswirlz0[m uploaded an image: (44KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/483cdb41eda1e2cf94e525269fe0bad99f67aa151774587814160105472/image.png >
17:01  itzswirlz0[m] | ?
17:02             ---|<<-- midou [~midou@sl.projectsegfau.lt] has quit (Remote host closed the connection)
17:03  _discord_5189 | itzswirlz0[m]: That's weird, were they pushed to the repo at the same time?
17:03  itzswirlz0[m] | Force pushing
17:03  itzswirlz0[m] | And modifiyng commits
17:03  _discord_5189 | s/repo/branch/
17:03  _discord_5189 | Yeah
17:03             ---|---> fdrfdr[m] [~discord26@2001:470:1af1:101::1:4cb7] has joined #xz-backdoor-reversing
17:03      fdrfdr[m] | <_discord_340134014943887361[m]> "Sorry if this has been asked..." <- I am not a reverse engineer. Just a Postgres guy kind of? But I have a perplexity pro subscription if someone wants to dump some assembly into it and see what comes out
17:04 @           js | itzswirlz0[m]: Oh, there were force pushes on xz? Uh-oh\u2026
17:04  itzswirlz0[m] | maybe??
17:04  itzswirlz0[m] | Someone spotted commit dates/timestamps being the same with Jia's and Collin's
17:05      fdrfdr[m] | * comes out. It supports toggling several models
17:05             ---|---> midou [~midou@sl.projectsegfau.lt] has joined #xz-backdoor-reversing
17:06  _discord_5189 | Depending on how often stuff was force pushed the graph showing commit times may be biased
17:07  _discord_5189 | Other than that I don't think it reveals much more than what we already know
17:08             ---|<<-- beber_ [~beber_@2a05:d018:c28:1a00:fd:d0ae:0:5222] has quit (Ping timeout: 480 seconds)
17:08  _discord_1014 | use git log --format=fuller to see both author and commit timestamps
17:09             ---|---> _discord_207775211158765569[m] [~discord20@2001:470:1af1:101::1:4cb9] has joined #xz-backdoor-reversing
17:09  _discord_2077 | Anyone has some kind of pseudo code to kickstart newcomers without any mental model?
17:09  _discord_1014 | s//`/, s//`/, s/commit/committer/
17:10             ---|---> _mkow_[m] [~discor_43@2001:470:1af1:101::1:4cbb] has joined #xz-backdoor-reversing
17:10      _mkow_[m] | <_discord_101423443387379712[m]> "is execute-only memory on x86..." <- yes, if your x86 CPU is new enough to support PKEYs (https://www.man7.org/linux/man-pages/man7/pkeys.7.html). Linux even supports it if you mprotect/mmap with X but no R on these CPUs
17:12             ---|---> beber_ [~beber_@2a05:d018:c28:1a00:fd:d0ae:0:5222] has joined #xz-backdoor-reversing
17:13       joeyh[m] | <_discord_518944568302108712[m]> "That's weird, were they pushed..." <- the de5c5 commit has author Jia and committer Lasse. This is not uncommon, to apply a commit and ajust it.
17:13             ---|<<-- midou [~midou@sl.projectsegfau.lt] has quit (Ping timeout: 480 seconds)
17:13  itzswirlz0[m] | oh, thats what it was? aler
17:13  itzswirlz0[m] | s/aler/alr/
17:13  _discord_1121 | joeyh[m]: Or it is normal when the author did not have commiter rights at the time.
17:14  itzswirlz0[m] | The image actually says Feb 12 2024.
17:14  _discord_6598 | yeah i have like 200K commits on gh, i didn't commit one of them myself
17:15       joeyh[m] | _discord_1121266414205030480[m: can happen even with commit rights, depending. The other commit with same timestamp was made by Lasse (per metadata at least) and then commit --adjusted at the same time. 
17:17       joeyh[m] | I do think it's weird all 4 commits have the same second, maybe he was rebasing or something?
17:18  itzswirlz0[m] | Must've been rebase or merge or pull
17:18  itzswirlz0[m] | s/*//, s/stas/stash/
17:19  itzswirlz0[m] | * or pull or stas
17:22       joeyh[m] | hmm, the 2 commits have same author timestamps too.. that seems weird
17:22             ---|<<-- monitor456 [~monitor45@5PUAAANBC.tor-irc.dnsbl.oftc.net] has quit (Quit: monitor456)
17:23             ---|<<-- Mooncairn [~mooncairn@0002c5b1.user.oftc.net] has quit (Quit: Leaving)
17:23  itzswirlz0[m] | joeyh: can you compare that to the lego island decomp repo
17:23  itzswirlz0[m] | because often theres a lot of merging and stuff
17:23  itzswirlz0[m] | github.com/isledecomp/isle
17:23             ---|---> Mooncairn [~mooncairn@0002c5b1.user.oftc.net] has joined #xz-backdoor-reversing
17:25             ---|User: *** _wggy__77896[m] is now known as _wggy[m]
17:27             ---|---> mintsuki[m] [~discor_43@2001:470:1af1:101::1:4cbc] has joined #xz-backdoor-reversing
17:28             ---|---> paulocavalcanti1971[m] [~discor_43@2001:470:1af1:101::1:4cbd] has joined #xz-backdoor-reversing
17:36       joeyh[m] | rebase makes commits have the same committer timestamp, but it preserves author timestamp
17:40             ---|<<-- beber_ [~beber_@2a05:d018:c28:1a00:fd:d0ae:0:5222] has quit (Ping timeout: 480 seconds)
17:40  itzswirlz0[m] | it must've been tampering with the git commits
17:42       joeyh[m] | there's no reason for such tampering to have timestamps like this either, but a whole new lzma decoder with inline assembly and "alternative C versions" seems like a nice place to hide new security holes
17:43  itzswirlz0[m] | at this point may need to review every single commit in the git history
17:44             ---|---> urbanhacker_81768[m] [~discor_43@2001:470:1af1:101::1:4cbe] has joined #xz-backdoor-reversing
17:44       joeyh[m] | I think git am of all 4 patches from email, followed by a rebase is one legit way to get those timestamps. But Lasse would have had to be git aming his own patchs files (which can happen)
17:47             ---|---> midou [~midou@sl.projectsegfau.lt] has joined #xz-backdoor-reversing
18:04             ---|---> _discord_875091663368884284[m] [~discord87@2001:470:1af1:101::1:4cbf] has joined #xz-backdoor-reversing
18:08             ---|<<-- lukka [~lucca@ip-193-53-104-44.changeis.iunxi.net] has quit (Ping timeout: 480 seconds)
18:15             ---|---> Phil9999[m] [~discord13@2001:470:1af1:101::1:4cc1] has joined #xz-backdoor-reversing
18:15    Phil9999[m] | Llzma2_decoder_end_1 -> apply_one_entry_ex must be named wrong, no? seems like its called from all kinds of other code
18:20             ---|---> pr0lefeed [~pr0lefeed@6.47.208.46.dyn.plus.net] has joined #xz-backdoor-reversing
18:22             ---|---> Riastradh [~riastradh@jupiter.mumble.net] has joined #xz-backdoor-reversing
18:24             ---|---> shasharina[m] [~discord75@2001:470:1af1:101::1:4cc3] has joined #xz-backdoor-reversing
18:33             ---|<<-- Riastradh [~riastradh@jupiter.mumble.net] has quit (Remote host closed the connection)
18:33             ---|<<-- pobrn [~pb@81.16.206.163.nat.pool.zt.hu] has quit (Quit: Konversation terminated!)
18:33             ---|<<-- pr0lefeed [~pr0lefeed@6.47.208.46.dyn.plus.net] has quit (Remote host closed the connection)
18:34             ---|---> pr0lefeed [~pr0lefeed@6.47.208.46.dyn.plus.net] has joined #xz-backdoor-reversing
18:34             ---|---> dafrito[m] [~discord57@2001:470:1af1:101::1:4cc5] has joined #xz-backdoor-reversing
18:38             ---|---> Riastradh [~riastradh@jupiter.mumble.net] has joined #xz-backdoor-reversing
18:41             ---|<<-- mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has quit (Ping timeout: 480 seconds)
18:51       joeyh[m] | checked all commit timestamps for similar patterns. first is a series of commits by Jia Tan on Jan 19, then another Jan 22, then Lasse has a series on Feb 9, then a long series that includes the commits mentioned above, then 3 more series by Lasse on Feb 17 and Feb 29. This certainly seems unusual.
18:52             ---|---> mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has joined #xz-backdoor-reversing
18:53       joeyh[m] | but, I do find similar things in git.git history, Junio has a workflow that results in that legitinately
19:01             ---|<<-- mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has quit (Ping timeout: 480 seconds)
19:06  itzswirlz0[m] | Check the Git tag commit history maybe?
19:06             ---|---> dumpx86[m] [~discord50@2001:470:1af1:101::1:4cc9] has joined #xz-backdoor-reversing
19:06     dumpx86[m] | One can only hope for a bug in the crypto validator implementation or a killswitch to trigger an alternate verification path somewhere
19:07  itzswirlz0[m] | It\u2019s not like this back door is really made to be used with anything to my knowledge
19:07     dumpx86[m] | I recall someone mentioning on twitter that there are two paths to system
19:07  itzswirlz0[m] | There are no programs that exist to abuse this back door
19:07     dumpx86[m] | https://x.com/c0ner0ne/status/1774268716051583125
19:07  itzswirlz0[m] | literally it went one day undetected
19:07  _discord_1121 | dumpx86[m]: I hope not. Bug in openssl will be horrible. Another heartbleed
19:07  grandpacanary | im looking at the git branches... in 5.6 that branch took out this autotools script that checks for `sys/capsicum.h`   https://git.rootprojects.org/root/xz/src/branch/v5.4/m4/ax_check_capsicum.m4    it appeared in the `5.2` branch and stayed in `5.4` then in `5.6` and HEAD it left.
19:07     dumpx86[m] | Do we have more info on what the second code path does?
19:07     dumpx86[m] | That could be interesting :thonk:
19:08  itzswirlz0[m] | grandpacanary[m]: https://tenor.com/view/simpsons-homer-simpson-gif-13518564799186478937
19:08  itzswirlz0[m] | that header file:
19:09  grandpacanary | itzswirlz0[m]: just saying.  https://cdaemon.com/posts/capsicum/
19:09  *  Phil9999[m] uploaded an image: (7KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/0b0ec9cfc151e61756a38c26d255f2f494bdc09e1774620047533146112/aM3uCMHvPJ.png >
19:09    Phil9999[m] | I'm looking at the binary in ida right now but I'm not too familiar with linux, can someone explain what this does? I've seen it a bunch now
19:09     dumpx86[m] | dumpx86[m]: cc: smx2460 (@_discord_310158180728700929:t2bot.io)
19:09  itzswirlz0[m] | Phil9999[m]: There\u2019s a table (basically a Map in CS terms if I\u2019m correct) and it just looks up a value (a3)
19:10  itzswirlz0[m] | and then some if condition
19:10  itzswirlz0[m] | then some other bs
19:10             ---|<<-- pr0lefeed [~pr0lefeed@6.47.208.46.dyn.plus.net] has quit (Ping timeout: 480 seconds)
19:12  itzswirlz0[m] | I\u2019m going to sleep now, busy stuff to do tomorrow. Hope to keep digging in
19:13  grandpacanary | The 5.6 branch has commits from 2 months ago, in the time of Jia, and Jia made that branch.   In 5.4 where the Capsicum check is still present, that's also a Jia branch.    Jia tool this out.
19:13  grandpacanary | s/tool/took/
19:15             ---|---> NilacTheGrim_ [~calin@82.76.226.32] has joined #xz-backdoor-reversing
19:18             ---|---> HugsNotDrugs [~HugsNotDr@65.102.48.5] has joined #xz-backdoor-reversing
19:18     Smx2460[m] | i'm pondering on something...
19:18     Smx2460[m] | the process where the breakpoint hits... is under seccomp/sandboxing
19:18     Smx2460[m] | * under seccomp/sandboxing and chroot
19:19     Smx2460[m] | i'm not too familiar about the `sshd` architecture
19:19     Smx2460[m] | but i'm pondering if the trigger/code runs there or not
19:19     Smx2460[m] | i've stepped through the key check and it seems to run in the unpriviledged process
19:20     Smx2460[m] | but i didn't get to the `system()` trigger yet
19:20     Smx2460[m] | the thing is... if it runs under the limited sandbox it's gonna be of limited use
19:20     Smx2460[m] | so i must be missing something
19:22             ---|---> mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has joined #xz-backdoor-reversing
19:24     Smx2460[m] | unless sshd is relaunched, but in any case it loads the same library again
19:27             ---|---> pr0lefeed [~pr0lefeed@6.47.208.46.dyn.plus.net] has joined #xz-backdoor-reversing
19:31             ---|<<-- mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has quit (Ping timeout: 480 seconds)
19:36             ---|<<-- pr0lefeed [~pr0lefeed@6.47.208.46.dyn.plus.net] has quit (Ping timeout: 480 seconds)
19:41             ---|---> _discord_428716613240619008[m] [~discor_43@2001:470:1af1:101::1:4cca] has joined #xz-backdoor-reversing
19:42             ---|---> pr0lefeed [~pr0lefeed@6.47.208.46.dyn.plus.net] has joined #xz-backdoor-reversing
19:42             ---|---> sophrosyne420[m] [~discord13@2001:470:1af1:101::1:4ccb] has joined #xz-backdoor-reversing
19:46  grandpacanary | Im gonna pull a listing from before Jia to see if/where Lasse ever wrote calls to cap_enter().  If Jia took them out, when he did it might narrow down when the .o was written
19:51  grandpacanary | smx2460 (@_discord_310158180728700929:t2bot.io) he took capsicum out of autotools but he put this in???  https://git.rootprojects.org/root/xz/commit/3f53870c249945d657ca3d75e0993e6267d71f75
20:00  _discord_1014 | check latest commit
20:00             ---|---> mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has joined #xz-backdoor-reversing
20:01             ---|---> _discord_621017259153817601[m] [~discor_44@2001:470:1af1:101::1:4ccd] has joined #xz-backdoor-reversing
20:01             ---|User: *** _discord_621017259153817601[m] is now known as prototux[m]
20:07  grandpacanary | I picked commit `865e0a3689a25a7ee8eecae1a34c1775e3aa676e` as a possible pre-Jia point, coming from an author "Ed Maste".    grep shows `cap_enter()` being used for sandboxing in `file_io.c` back then.  Also, that commit features `check/crc32_x86.S` and `check/crc64_x86.S` being touched.     Maybe this is a commit that gave Jia some inspiration.
20:07  grandpacanary | https://git.rootprojects.org/root/xz/commit/865e0a3689a25a7ee8eecae1a34c1775e3aa676e
20:08             ---|<<-- pr0lefeed [~pr0lefeed@6.47.208.46.dyn.plus.net] has quit (Remote host closed the connection)
20:09             ---|<<-- mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has quit (Ping timeout: 480 seconds)
20:11    prototux[m] | grandpacanary[m]: this commit is from feb 2022, first patch sent by Jia is in april, that would be pretty quick to plan the thing, isn't?
20:11  grandpacanary | in HEAD all that cap_enter work is gone after file_io.c was moved and reorganized for CMake.
20:11    prototux[m] | * this commit is from feb 2022, first patch sent by Jia is in april, that would be pretty quick to plan the thing, isn't?
20:11    prototux[m] | that could explain why Jia switched from libarchive to xz, though...
20:20  grandpacanary | well, I have a starting point.  Lasse did a quick insert of `cap_enter` to protect the disk i/o in flight, or someone did.    Then all the sandbox code was isolated in the refactor, conveniently held all in one place under a preprocessor directive.    I'll play the hi/low game and figure out which commit the moving starts.
20:31             ---|<<-- r2rien [~me@abordeaux-653-1-47-108.w90-11.abo.wanadoo.fr] has quit (Ping timeout: 480 seconds)
20:31             ---|---> r2rien [~me@178.132.106.159] has joined #xz-backdoor-reversing
20:31     Smx2460[m] | i just patched sshd to not use seccomp
20:31     Smx2460[m] | and to disable the chroot
20:32  *   Smx2460[m] uploaded an image: (51KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/c760965864b77168babdcb0c7fc39110fc86fb5b1774640877176619008/image.png >
20:32     Smx2460[m] | so now i can trace calls made by the code
20:32     Smx2460[m] | it will help with tracing openssl calls
20:33     Smx2460[m] | i patched the sshd binary by hand
20:33  an_freund_896 | <Smx2460[m]> "i've stepped through the key..." <- I see the certificate load path being called from two different processes, fwiw.
20:33             ---|User: *** an_freund_89627[m] is now known as an_freund[m]
20:33     Smx2460[m] | to not recompile it
20:33     Smx2460[m] | this reduces he changes to the minimum
20:33  *   Smx2460[m] sent a code block: https://matrix.org/_matrix/media/v3/download/matrix.org/fSkzgijmuRhhJTscEZQvyMcK
20:34             ---|---> mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has joined #xz-backdoor-reversing
20:35  * an_freund[m] sent a code block: https://matrix.org/_matrix/media/v3/download/matrix.org/CdGdoCjHugGUiIPYAzIWFMIl
20:37             ---|---> beber_ [~beber_@2a05:d018:c28:1a00:fd:d0ae:0:5222] has joined #xz-backdoor-reversing
20:37     Smx2460[m] | yay
20:37  *   Smx2460[m] uploaded an image: (54KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/8bdb1480087ebb7f2dc9f5a4d03a6082d85cfb871774642150412124160/image.png >
20:37     Smx2460[m] | hijacked the right thread now \U0001f609
20:37     Smx2460[m] | now i need to write some code that prints out what function it is
20:37     Smx2460[m] | * now i need to write some code that prints out which functions are those
20:37   an_freund[m] | <Smx2460[m]> "the thing is... if it runs under..." <- But even without that, the backdoor can make sshkey_verify() return true, which will allow the check in the sandboxed child to succeed. After that the unsandboxed process will continue.
20:39             ---|<<-- r2rien [~me@178.132.106.159] has quit (Ping timeout: 480 seconds)
20:40  *   Smx2460[m] uploaded an image: (43KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/c5c91f69810cda40992a0f123a1b325afc2feb831774642888051785728/image.png >
20:40     Smx2460[m] | an_freund[m]: yeah
20:41     Smx2460[m] | it would communicate to the parent that it's "ok to proceed"
20:42  grandpacanary | `f070722b57ba975a0dff36492d766f03026b1d21` is when the `cap_enter` disappears out of `file_io.c` and he's reorganizing it over into `sandbox.c`   https://git.rootprojects.org/root/xz/commit/f070722b57ba975a0dff36492d766f03026b1d21     this came from the 5.6 branch where he nuked the autotools check for it, too.
20:44             ---|<<-- archer [~oftc-webi@99-119-193-10.lightspeed.sntcca.sbcglobal.net] has quit (Quit: Page closed)
20:44             ---|---> hexed0261[m] [~discord30@2001:470:1af1:101::1:4cce] has joined #xz-backdoor-reversing
20:44             ---|User: *** hexed0261[m] is now known as hexed[m]
20:44             ---|<<-- mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has quit (Ping timeout: 480 seconds)
20:45             ---|---> r2rien [~me@abordeaux-653-1-47-108.w90-11.abo.wanadoo.fr] has joined #xz-backdoor-reversing
20:52  grandpacanary | the nuking of capsicum happens in 2e2cd11535ad77364cf021297e0b3f162fa3a3d0 https://git.rootprojects.org/root/xz/commit/2e2cd11535ad77364cf021297e0b3f162fa3a3d0    6 months ago
20:53             ---|---> mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has joined #xz-backdoor-reversing
20:54  loganaden5095 | This commit makes sense as freebsd 10 was rol.
20:54  loganaden5095 | Eil
20:54    prototux[m] | smx2460 (@_discord_310158180728700929:t2bot.io) an_freund (@_discord_1224107056483663955:t2bot.io) is there any value doing static analysis on the .so file, or is it a waste of time?
20:54  loganaden5095 | Eol*
20:55  _discord_1121 | loganaden5095[m]: It is for linux. And that one is no longer supported after 4.11
20:56   an_freund[m] | prototux[m]: The whole .so? That just seems like a lot of stuff to look at. If just the injected code, sure - smx2460 (@_discord_310158180728700929:t2bot.io) seems to have been doing that for most of the last few days?
20:58  * grandpacanar uploaded an image: (27KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/29843ad3d9b714666b63222a5450200f877c50df1774647384551194624/image.png >
20:58  grandpacanary | _discord_1121266414205030480[m: yeah but for BSD where's the path to put the library on.  he took it out?
20:59    prototux[m] | an_freund[m]: sorry, i meant the evil .o, not the whole liblzma.so \U0001f605
20:59  grandpacanary | ahh yeah he did for Linux so it does match his comments.    linux version of it went unmaintained so he took it out
21:01             ---|<<-- mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has quit (Ping timeout: 480 seconds)
21:02  grandpacanary | i was hoping to find in this whole mess of commits a clue where he's really experimenting with hotloading that `.o` file
21:12             ---|---> mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has joined #xz-backdoor-reversing
21:22             ---|<<-- r2rien [~me@abordeaux-653-1-47-108.w90-11.abo.wanadoo.fr] has quit (Ping timeout: 480 seconds)
21:22             ---|<<-- mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has quit (Ping timeout: 480 seconds)
21:24             ---|<<-- NilacTheGrim_ [~calin@82.76.226.32] has quit (Quit: Leaving)
21:25     Smx2460[m] | building libcrypto without strip
21:25     Smx2460[m] | s/strip/debug symbol stripping/
21:25    prototux[m] | is talking about the bash part here ok, or should it be done on #xz-backdoor-chat ?
21:32             ---|---> mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has joined #xz-backdoor-reversing
21:33     Smx2460[m] | the bash thing is cursed
21:33     Smx2460[m] | the awk one even more
21:33     Smx2460[m] | it does RC4 with AWK
21:33            upb | from reading the posted materials (not an .m4/.sh expert), it seems that part has been throughly analysed already
21:35  _discord_1121 | Smx2460[m]: And is not it bueatiful
21:35    prototux[m] | Smx2460[m]: that was interesting to see, indeed
21:35    prototux[m] | upb: there's some details that are interesting to note, that i didn't see anywhere yet, though \U0001f642
21:36  _discord_1121 | s/bueatiful/beautiful/
21:36  _discord_1121 | Smx2460[m]: Next time: AES woth brainfuxx
21:36  _discord_1121 | s/woth/with/
21:41    prototux[m] | <Smx2460[m]> "it does RC4 with AWK" <- didn't checked yet, but wouldn't be surprised some parts goes through multiple "encryptions" and compressions
21:44             ---|<<-- mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has quit (Ping timeout: 480 seconds)
21:47     Smx2460[m] | cool
21:47     Smx2460[m] | have a more detailed trace of openssl calls now
21:47     Smx2460[m] | but it's 6AM and i need to go to sleep \U0001f605
21:47    prototux[m] | Smx2460[m]: good night \U0001f642
21:49  _discord_6448 | <prototux[m]> "there's some details that are..." <- post away then \U0001f642
21:49  _discord_6448 | also have a nice workday everyone who's been up all night
21:52             ---|<<-- lantern [~lantern@216.164.243.105] has quit (Quit: Lost terminal)
21:55             ---|---> mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has joined #xz-backdoor-reversing
21:58    prototux[m] | <_discord_644856977566203905[m]> "post away then \U0001f642..." <- thanks... (full message at <https://matrix.org/_matrix/media/v3/download/matrix.org/hfXWLHjVGwpUzDfxxWIhSQVV>)
22:03  *  prototux[m] uploaded an image: (39KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/60cc4ac8b67407cd8ea5a592d98478ede5b3f79c1774663892501266432/image.png >
22:03  *  prototux[m] uploaded an image: (40KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/53f29b626b2833ab2eb0d6b198b9acf0397ab69b1774663895244341248/image.png >
22:03  *  prototux[m] uploaded an image: (13KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/e972b7d3f23838198cfa38a23a4692de6f7caddb1774663896884314112/image.png >
22:03    prototux[m] | the makefile patch part vs the conditions in the injection part (and the only condition that isn't in/linked to the makefile patch part)
22:04             ---|<<-- mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has quit (Ping timeout: 480 seconds)
22:06  *  prototux[m] uploaded an image: (119KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/a33cb5b6ca2f57d0155af341bc4c16c7ea40750e1774664488440561664/image.png >
22:06  *  prototux[m] uploaded an image: (84KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/d60dd690625f9d480aba5f3fd0efb8a92dbc81151774664492303515648/image.png >
22:06    prototux[m] | (the whole patching part, after the conditions/checks)
22:06    prototux[m] | * (the whole makefile patching part, after the conditions/checks)
22:13             ---|---> andreyv [~andrey@m90-128-3-144.cust.tele2.lv] has joined #xz-backdoor-reversing
22:14             ---|---> mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has joined #xz-backdoor-reversing
22:25             ---|<<-- mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has quit (Ping timeout: 480 seconds)
22:32  _discord_1121 | Imagine you hack it up wide open and there it is just sending in ssh metadata "April's fools day"
22:34             ---|---> mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has joined #xz-backdoor-reversing
22:37             ---|<<-- Mooncairn [~mooncairn@0002c5b1.user.oftc.net] has quit (Quit: Leaving)
22:42             ---|<<-- mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has quit (Ping timeout: 480 seconds)
22:49  *   Smx2460[m] uploaded an image: (94KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/d666413413a508178b487a76d6aa84a78ed56c441774675417706266624/image.png >
22:49     Smx2460[m] | i lied, i made more progress
22:49     Smx2460[m] | but now i go for real
22:49     Smx2460[m] | libcrypto calls go into the GOT
22:49     Smx2460[m] | so they must be resolved to see where they go
22:50     Smx2460[m] | later i can do the same with libssl
22:51  *  prototux[m] uploaded an image: (267KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/6d44247b88fc4f69fbba93138f7116cd1159d4721774676045882982400/image.png >
22:52     Smx2460[m] | strangely, i don't see the chacha calls i saw when stepping manually in gdb
22:53     Smx2460[m] | ah it's probably because it's passed as an argument to those
22:53     Smx2460[m] | iirc BN_CTX_new_ex
22:53             ---|---> mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has joined #xz-backdoor-reversing
22:56   HugsNotDrugs | Since the original repo has been taken down, has anyone mirrored it?
22:57  _discord_1121 | HugsNotDrugs: https://git.rootprojects.org/root/xz/
22:57  _discord_1121 | https://github.com/sailfishos-mirror/xz/blob/master/po/es.po
22:57     Smx2460[m] | * so they had to be resolved to see where they go
22:59             ---|---> __rand0m__0[m] [~discord55@2001:470:1af1:101::1:4cd0] has joined #xz-backdoor-reversing
22:59  __rand0m__0[m | https://github.com/bminor/xz
22:59     dumpx86[m] | <Smx2460[m]> "ah it's probably because it's..." <- fwiw, chacha key is encrypted
23:01             ---|<<-- mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has quit (Ping timeout: 480 seconds)
23:02     Smx2460[m] | Yes it does AES iirc
23:02     Smx2460[m] | I stepped through it with gdb but it was a PITA
23:03     Smx2460[m] | Next i will dump all the libcrypto function parameters
23:04     dumpx86[m] | Sounds like a plan
23:11             ---|---> mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has joined #xz-backdoor-reversing
23:18             ---|---> steckie [~oftc-webi@p200300f75f00f900b1e412526a0c8f3b.dip0.t-ipconnect.de] has joined #xz-backdoor-reversing
23:19             ---|<<-- mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has quit (Ping timeout: 480 seconds)
23:29             ---|---> _discord_811439166423302165[m] [~discord81@2001:470:1af1:101::1:4cd1] has joined #xz-backdoor-reversing
23:29  _discord_8114 | grep -aErls "#{4}[[:alnum:]]{5}#{4}$" .
23:29  _discord_8114 | how does the grep command:
23:29  _discord_8114 | produce the filename ./tests/files/bad-3-corrupt_lzma2.xz ?
23:30             ---|---> mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has joined #xz-backdoor-reversing
23:32             ---|---> audave[m] [~discord42@2001:470:1af1:101::1:4cd2] has joined #xz-backdoor-reversing
23:32      audave[m] | it returns files with matches
23:32    prototux[m] | _discord_811439166423302165[m]: it asks grep to search the file that match the pattern (the bad-3-corrupt) and only print the file where the match is
23:33    prototux[m] | -a (bin as text), -E (extended regexp) -r (recursive search) -l (only print file name) -s (silent)
23:34  _discord_8114 | I see. thanks
23:35    prototux[m] | (and the .xz file is only slightly corrupted, so the tr part "fixes" the corruption)
23:36  _discord_8114 | actually, isn't it looking for :
23:36  _discord_8114 | ####World####
23:36  _discord_8114 | ?
23:36    prototux[m] | _discord_811439166423302165[m]: ah, possibly, yes
23:37  _discord_8114 | because the hello is not there before tr and xz -d
23:37    prototux[m] | well, both, hello and world both are # 4 times with a 5char str
23:38    prototux[m] | true, it does matches World and not hello
23:38    prototux[m] | (just checked it)
23:38  shasharina[m] | <_discord_811439166423302165[m]> "grep -aErls "#{4}[[:alnum:]]{5}#..." <- me who literally use grep almost daily have no idea how tf that pattern turned into that path (am unfamiliar with grep switches)
23:38  *  prototux[m] uploaded an image: (8KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/acbbd107a312e770b74a2b3b8c0a581a5d72c0321774687781352636416/image.png >
23:38    prototux[m] | shasharina[m]: mostly -l (prints only file name and not the matches)
23:39    prototux[m] | the pattern is a "simple" regexp
23:40    prototux[m] | the tr swap tab, space, dash, underscore to space, tab, underscore, dash
23:42  _discord_8114 | what is the purpose of these tr swaps? Are these just random operation to corrupt, and then later uncorrupt the file ?
23:42             ---|---> _discord_349582201429557269[m] [~discord34@2001:470:1af1:101::1:4cd3] has joined #xz-backdoor-reversing
23:42  _discord_3495 | What is the backdoor payload? anyone knows?
23:43    prototux[m] | _discord_811439166423302165[m]: basically fix/unfuck the xz archive so it decompress correctly
23:44  _discord_8114 | _discord_349582201429557269[m]: the ultimate payload is the liblzma_la-crc64-fast.o file, as described in the original oss -security email: https://www.openwall.com/lists/oss-security/2024/03/29/4
23:44             ---|<<-- mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has quit (Ping timeout: 480 seconds)
23:44    prototux[m] | _discord_811439166423302165[m]: there's also some patching of the crc32 and crc64 source
23:45  *  prototux[m] uploaded an image: (142KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/f1b33858df53ab622a5df02798233fcf0d68e6431774689586400722944/image.png >
23:48  *  prototux[m] uploaded an image: (45KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/5403c1aa83a13a47e9e8adac3f353e7915df04d81774690230343827456/image.png >
23:48    prototux[m] | (the added string is this code)
23:49             ---|---> _discord_593081254962921473[m] [~discord59@2001:470:1af1:101::1:4cd4] has joined #xz-backdoor-reversing
23:49  _discord_5930 | <Smx2460[m]> "Yes it does AES iirc" <- iiuc there's no AES, chacha key / ed448 public key (they are the same one) was decrypted with chacha20
23:50  _discord_5930 | * with chacha20 with key/iv derived by (again) chacha20 decrypt 48 bytes all zero with all zero key and all zero IV
23:51  *  prototux[m] uploaded an image: (128KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/503a989a1f8c13005f5ec663d3d1f1f1cbee60451774690963826933760/image.png >
23:51    prototux[m] | (for context, this is the original function, they have a sed that swap the is_arch_extension_supported() call by _is_arch_extension_supported() (with the underscore at the start)
23:51  _discord_5930 | ... and had anyone annotated the result struct of the mini x86_64 instruction decoder?
23:52    prototux[m] | * (for context, this is the original function, they have a sed that swap the is_arch_extension_supported() call by _is_arch_extension_supported() (with the underscore at the start, it is patched in both crc32 and crc64)
23:52    prototux[m] | * (for context, this is the original function, they have a sed that swap the is_arch_extension_supported() call by _is_arch_extension_supported() (with the underscore at the start, it is patched in both crc32 and crc64 c files)
23:53             ---|---> mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has joined #xz-backdoor-reversing
23:57  _discord_8114 | when have they added the IFUNC mechanism to xz, and what was the reason back then? Can we say now it was in preparation for the backdoor only, or was the IFUNC needed legitimately ?
23:57  _discord_5930 | * iiuc there's no AES, chacha key / ed448 public key (they are the same one) was decrypted with chacha20 with key/iv derived by (again) chacha20 decrypt 48 bytes all zero with all zero key and all zero IV
23:57  _discord_5930 | the encrypted chacha20/ed448 public key was extracted from the backdoor code itself with the disassembler, kind of x86_64 code stego \U0001f926\u200d\u2642\ufe0f
23:57    prototux[m] | _discord_811439166423302165[m]: IIRC there was at least a plausible reason for it, same for the patch that disabled landlock
23:58  _discord_6448 | given the func stuff was authored by the jensen sockpuppet, it was probably prep
23:59  _discord_1121 | _discord_644856977566203905[m]: Also do you see comments about icc? So icc is not a thing anymore, Intel removed tjay compiler and left only icx.
23:59  _discord_1121 | s/tjay/that/
--- Day changed Mon Apr 01 2024
00:03             ---|<<-- mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has quit (Ping timeout: 480 seconds)
00:08             ---|---> nulldata6 [~nulldata@185.153.177.40] has joined #xz-backdoor-reversing
00:11             ---|<<-- nulldata [~nulldata@185.153.177.39] has quit (Ping timeout: 480 seconds)
00:11             ---|User: *** nulldata6 is now known as nulldata
00:14             ---|---> monitor456 [~monitor45@5PUAAANCT.tor-irc.dnsbl.oftc.net] has joined #xz-backdoor-reversing
00:32             ---|---> mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has joined #xz-backdoor-reversing
00:47             ---|<<-- mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has quit (Ping timeout: 480 seconds)
00:55             ---|<<-- steckie [~oftc-webi@p200300f75f00f900b1e412526a0c8f3b.dip0.t-ipconnect.de] has quit (Remote host closed the connection)
01:13             ---|---> mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has joined #xz-backdoor-reversing
01:16             ---|---> steckie [~oftc-webi@p200300f75f00f900b1e412526a0c8f3b.dip0.t-ipconnect.de] has joined #xz-backdoor-reversing
01:19             ---|---> lukka [~lucca@ip-193-53-104-44.changeis.iunxi.net] has joined #xz-backdoor-reversing
01:27             ---|<<-- mikecmpbll [~mikecmpbl@92.40.189.134.threembb.co.uk] has quit (Ping timeout: 480 seconds)
01:44             ---|---> _discord_856093329241538570[m] [~discord85@2001:470:1af1:101::1:4cd9] has joined #xz-backdoor-reversing
01:44  _discord_8560 | Hey all ... anyone played more with the log-related path?
01:44  _discord_8560 | I saw that they are matching on several strings (Accepted password for .... and Disconnect). They extract username and IP/port of the client but I can't figure out what they do next with it (probably need to dynamically check the code)
01:44  _discord_8560 | s/path/part/
01:44  * _discord_856 uploaded an image: (59KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/8afb4e321e1d42ba94c023e98bef53b4730e70031774719588345315328/Screenshot_2024-03-31_142807.png >
01:44  _discord_8560 | Here:
01:59             ---|<<-- monitor456 [~monitor45@5PUAAANCT.tor-irc.dnsbl.oftc.net] has quit (Quit: monitor456)
02:03             ---|<<-- steckie [~oftc-webi@p200300f75f00f900b1e412526a0c8f3b.dip0.t-ipconnect.de] has quit (Quit: Page closed)
02:03             ---|---> steckie [~oftc-webi@p200300f75f00f900b1e412526a0c8f3b.dip0.t-ipconnect.de] has joined #xz-backdoor-reversing
02:07             ---|<<-- Guest4408 [~oftc-webi@81.23.166.13] has quit (Quit: Page closed)
02:07             ---|---> souls1232375[m] [~discord17@2001:470:1af1:101::1:4cdc] has joined #xz-backdoor-reversing
02:11             ---|<<-- tolto [~quassel@5402D3E4.dsl.pool.telekom.hu] has quit (Read error: Connection reset by peer)
02:12             ---|---> tolto [~quassel@5402D3E4.dsl.pool.telekom.hu] has joined #xz-backdoor-reversing
02:21             ---|---> _discord_590560372143030272[m] [~discord59@2001:470:1af1:101::1:4cdf] has joined #xz-backdoor-reversing
02:23             ---|---> rincat[m] [~discor_45@2001:470:1af1:101::1:4ce0] has joined #xz-backdoor-reversing
02:27             ---|---> whichbuffer4909[m] [~discor_45@2001:470:1af1:101::1:4ce1] has joined #xz-backdoor-reversing
02:30             ---|---> sespiros[m] [~sespirosm@2001:470:1af1:101::9825] has joined #xz-backdoor-reversing
02:33  cl0pinette[m] | I think (I have not yet reversed this part) but based on what they extract they could use it to know which ip is allowed to connect with which user
02:35             ---|<<-- Chiitoo [~Chiitoo@0002208f.user.oftc.net] has quit (Quit: Sayonara sandwich!)
02:43      laanwj[m] | right, that could come in useful if they need to fake a log message
02:44  cl0pinette[m] | yeah or to know which ip is whitelisted from the firewall
02:47      laanwj[m] | is there any way that that information could be delivered back to the backdoor user? the rsa key seems to be decidedly one-way
02:53  _discord_8560 | I'm missing the part where they actually do something with that information. So I'm not sure if they change the logs or just collect that information
02:54  * _discord_856 uploaded an image: (22KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/55125fc9e03682966fe8ecc7e5df597826ad52971774737042102550528/image.png >
02:54  _discord_8560 | It's this:
02:54  _discord_8560 | In both cases they call sub_7430
02:54  _discord_8560 | But that's just a call with variable number of arguments
02:54             ---|<<-- tolto [~quassel@5402D3E4.dsl.pool.telekom.hu] has quit (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
02:55  _discord_8560 | (comments are mine)
02:55  cl0pinette[m] | what lib are you reversing ? I don't have the same offsets as you
02:55  _discord_8560 | is there any way that that information
02:58  cl0pinette[m] | ok, found it
03:00  _discord_8560 | The one originally posted
03:01  _discord_5905 | <_discord_856093329241538570[m]> "I'm missing the part where..." <- how can you debug it, I have tried to load to IDA, but it seems to be anti debug
03:01  _discord_8560 | I'm statically reversing it, not debugging
03:02      laanwj[m] | there are some tricks for debugging it mentioned in https://gist.github.com/smx-smx/a6112d54777845d389bd7126d6e9f504
03:02  _discord_5905 | _discord_856093329241538570[m]: you use IDA, don't you
03:04  cl0pinette[m] | format of first_string generated = "?????????????????????"
03:04  cl0pinette[m] | format of second_string generated = "?????????????? ???? ?? ?? [???????]"
03:06  cl0pinette[m] | the second one is really weird because of the []
03:07  _discord_8560 | That can be an IP address
03:07  _discord_8560 | If I remember correctly some SSH services could create a log such as server.name.com [IP address]
03:08             ---|---> hir0pro [~tom@hir0pro.user.oftc.net] has joined #xz-backdoor-reversing
03:08  _discord_8560 | Looks like they have some subtle errors here and there as well in the code ... but still, wonder what they do with that information afterwards heh
03:09      laanwj[m] | there's "Connection closed by authenticating user X 127.0.0.1 port 12345 [preauth]"
03:11  cl0pinette[m] | oh, yeah it could be
03:12  _discord_8560 | Ah yes could be that
03:13  _discord_8560 | And check what I just found in log of one server that's on the Internet
03:13  _discord_8560 | `Mar 31 19:24:50 neuromancer sshd[1529]: Did not receive identification string from [REDACTED]... (full message at <https://matrix.org/_matrix/media/v3/download/matrix.org/sdiccvKsTyiSojChIbBHqrdr>)
03:13  _discord_8560 | I've never seen this in a log file before
03:16             ---|---> _discord_772451504925442079[m] [~discor_45@2001:470:1af1:101::1:4ce4] has joined #xz-backdoor-reversing
03:16  cl0pinette[m] | should be OK https://serverfault.com/questions/483852/sshd-log-full-of-did-not-receive-identification-string-from#505798
03:17  _discord_8560 | The first line is fine - the DH part is something I haven't seen before
03:17  _discord_8560 | But could be something unrelated. Timing is interesting at least lol
03:17  _discord_8560 | IP address is Hong Kong
03:17      laanwj[m] | i do agree it sound suspicious in the context, but i don't think it's related, DH value is different from the RSA key fields, looking on google it's mostly related to clients simply misimplementing the cryptography
03:18  _discord_8560 | Yeah you're right. Maybe scanners started playing with this and are making mistakes \U0001f642
03:18             ---|---> _discord_226693359673147402[m] [~discord22@2001:470:1af1:101::1:4ce5] has joined #xz-backdoor-reversing
03:18  _discord_2266 | <cl0pinette[m]> "format of first_string generated..." <- "?????????????? **???? ?? ??** [???????]" 2024 01 04. date perhaps in the middle there.
03:21             ---|---> sgm [~sgm@00030768.user.oftc.net] has joined #xz-backdoor-reversing
03:21             ---|---> u0pattern[m] [~discord61@2001:470:1af1:101::1:4ce6] has joined #xz-backdoor-reversing
03:21   u0pattern[m] | _discord_856093329241538570[m]: What IP address ?
03:23  _discord_8560 | 165.154.182.182
03:25             ---|---> _discord_1224301579847340064[m [~discor_45@2001:470:1af1:101::1:4ce7] has joined #xz-backdoor-reversing
03:26             ---|---> kaos_iv[m] [~discor_45@2001:470:1af1:101::1:4ce8] has joined #xz-backdoor-reversing
03:27             ---|<<-- steckie [~oftc-webi@p200300f75f00f900b1e412526a0c8f3b.dip0.t-ipconnect.de] has quit (Remote host closed the connection)
03:27  whichbuffer49 | https://www.virustotal.com/gui/ip-address/165.154.182.182/relations how did you decode that IP
03:29  _discord_8560 | Nah that's from the log I pasted above from one of my servers. Not from the library
03:30  whichbuffer49 | oh ok
03:30  _discord_8560 | Sorry for the confusion \U0001f642
03:31  _discord_5189 | http://viz.greynoise.io/ip/165.154.182.182 also i find greynoise for sussing out IPs that poke me on the internet :)
03:42             ---|---> r2rien [~me@37.171.195.186] has joined #xz-backdoor-reversing
03:44             ---|---> Chiitoo [~Chiitoo@0002208f.user.oftc.net] has joined #xz-backdoor-reversing
03:46             ---|<<-- hir0pro [~tom@hir0pro.user.oftc.net] has quit (Ping timeout: 480 seconds)
03:53             ---|<<-- konomi [~konomi@00020287.user.oftc.net] has quit (Quit: konomi)
03:55             ---|---> konomi [~konomi@00020287.user.oftc.net] has joined #xz-backdoor-reversing
04:37             ---|---> gomesjoao[m] [~gomesjoao@2001:470:1af1:101::1:4cec] has joined #xz-backdoor-reversing
04:38             ---|---> monitor456 [~monitor45@4JHAAAMSU.tor-irc.dnsbl.oftc.net] has joined #xz-backdoor-reversing
04:38             ---|<--- gomesjoao[m] [~gomesjoao@2001:470:1af1:101::1:4cec] has left #xz-backdoor-reversing ()
04:41             ---|---> steckie [~oftc-webi@p200300f75f0de800fcb95fdfd68082c7.dip0.t-ipconnect.de] has joined #xz-backdoor-reversing
04:45             ---|---> _discord_494812552539144192[m] [~discord49@2001:470:1af1:101::1:4ced] has joined #xz-backdoor-reversing
05:16             ---|---> morris_twitty[m] [~discor_45@2001:470:1af1:101::1:4cee] has joined #xz-backdoor-reversing
05:20             ---|<<-- jack_12345 [~cJack190@89.221.224.43] has quit (Ping timeout: 480 seconds)
05:24             ---|<<-- dutch [~dutchingr@00028048.user.oftc.net] has quit (Quit: WeeChat 4.2.1)
05:25             ---|---> hir0pro [~tom@hir0pro.user.oftc.net] has joined #xz-backdoor-reversing
05:26             ---|---> dutch [~dutchingr@00028048.user.oftc.net] has joined #xz-backdoor-reversing
05:27             ---|---> _mark_[m] [~discor_46@2001:470:1af1:101::1:4cf0] has joined #xz-backdoor-reversing
05:36             ---|<<-- r2rien [~me@37.171.195.186] has quit (Ping timeout: 480 seconds)
05:36             ---|<<-- hir0pro [~tom@hir0pro.user.oftc.net] has quit (Read error: Connection reset by peer)
05:48             ---|---> pr0lefeed [~pr0lefeed@110.47.208.46.dyn.plus.net] has joined #xz-backdoor-reversing
05:56             ---|---> hir0pro [~tom@hir0pro.user.oftc.net] has joined #xz-backdoor-reversing
05:59             ---|---> chu121su120[m] [~discord36@2001:470:1af1:101::1:4cf5] has joined #xz-backdoor-reversing
06:01             ---|---> r2rien [~me@37.171.195.186] has joined #xz-backdoor-reversing
06:04             ---|---> wmoh [~wmoh@38.32.73.2] has joined #xz-backdoor-reversing
06:08     harald_[m] | anyone who found out about what IFUNC played in this?
06:08     harald_[m] | * about what role IFUNC played
06:09             ---|<<-- pr0lefeed [~pr0lefeed@110.47.208.46.dyn.plus.net] has quit (Ping timeout: 480 seconds)
06:11     harald_[m] | jia introduced it at some point in the source code to actually switch between two optimised implementations of some function
06:11     harald_[m] | but it was also used for the exploit, right?
06:13             ---|<<-- beber_ [~beber_@2a05:d018:c28:1a00:fd:d0ae:0:5222] has quit (Ping timeout: 480 seconds)
06:13    mlkj2141[m] | It lets you run code before RTLD is done resolving everything, so you can overwrite the GOT
06:16      laanwj[m] | yes, ifunc was officially introduced to switch crc implementations based on supported special instructions, but they could have used a function pointer, it was coer for it provides the mechanism through which the backdoor is initialized
06:17      laanwj[m] | s/coer/cover/
06:17             ---|<<-- hir0pro [~tom@hir0pro.user.oftc.net] has quit (Ping timeout: 480 seconds)
06:17             ---|---> hir0pro [~tom@hir0pro.user.oftc.net] has joined #xz-backdoor-reversing
06:18             ---|---> beber_ [~beber_@2a05:d018:c28:1a00:fd:d0ae:0:5222] has joined #xz-backdoor-reversing
06:18   u0pattern[m] | <harald_[m]> "jia introduced it at some..." <- isn't Hans Jansen who introduce it ?
06:21             ---|<<-- hanemile [~root@emile.space] has quit (Quit: Lost terminal)
06:25      laanwj[m] | yes, it was Hans Jansen, who's suspected to belong to the same set of fake identities/sockpuppets (it's also the person effectively creating a debian account to push the compromised version of xz)
06:25  grandpacanary | <u0pattern[m]> "isn't Hans Jansen who introduce..." <- Hans is the Debian committer.   Jia is the Github one.
06:26      laanwj[m] | Hans Jansen also authored some git commits
06:30  _discord_6448 | only thing left for going from 100% attribution to 200%, is to "decode" Hans Jansens name via anagram
06:31             ---|<<-- crawler [~crawler@109.245.201.129] has quit (Quit: Leaving)
06:37  _discord_6448 | * only thing left for going from 100% attribution to 200%, is to "decode" Hans Jansens name via anagram -
06:37  _discord_6448 | `Ann-Jane SSH`
06:38             ---|<<-- zhli [~zhli@DN200ouvs.stanford.edu] has quit (Quit: zhli)
06:38       aciid[m] | <_discord_644856977566203905[m]> "only thing left for going from 1..." <- > <@_discord_644856977566203905:t2bot.io> only thing left for going from 100% attribution to 200%, is to "decode" Hans Jansens name via anagram -... (full message at <https://matrix.org/_matrix/media/v3/download/matrix.org/LxPzmdYaijtdpKmMTdOtPaNy>)
06:38             ---|---> zhli [~zhli@DN200ouvs.stanford.edu] has joined #xz-backdoor-reversing
06:39         negril | :O
06:44             ---|<--- leggo [~katt__@147.28.162.171] has left #xz-backdoor-reversing (Leaving)
06:45   u0pattern[m] | Is the delay caused by the anti- stuff ?
06:50      _mkow_[m] | by the obfuscation
06:51             ---|---> cheesypeenygregorini9016[m] [~discord31@2001:470:1af1:101::1:4cf6] has joined #xz-backdoor-reversing
06:51             ---|User: *** cheesypeenygregorini9016[m] is now known as cheesypeenygregorini[m]
06:52   u0pattern[m] | _mkow_[m]: not just anti-RE techniques
06:52   u0pattern[m] | If the backdoor was so simple I think no one would notice it
06:52      _mkow_[m] | u0pattern[m]: what do you mean? obfuscation == anti-RE
06:53      _mkow_[m] | u0pattern[m]: nah, they could, just investigating random crashes / debugging
06:53      _mkow_[m] | the whole idea of this obfuscation was to make all the backdoor function look like usual lzma code
06:54      _mkow_[m] | so, if someone accidentally looks at them they look unsuspicious
06:56             ---|---> _discord_395533366881026058[m] [~discor_46@2001:470:1af1:101::1:4cf8] has joined #xz-backdoor-reversing
06:57   u0pattern[m] | makes sense
06:58             ---|---> crawler [~crawler@109.245.201.129] has joined #xz-backdoor-reversing
06:59             ---|---> fn0rd[m] [~discord91@2001:470:1af1:101::1:4cf9] has joined #xz-backdoor-reversing
07:01             ---|<<-- zhli [~zhli@DN200ouvs.stanford.edu] has quit (Quit: zhli)
07:02             ---|<<-- lukka [~lucca@ip-193-53-104-44.changeis.iunxi.net] has quit (Ping timeout: 480 seconds)
07:03             ---|---> _discord_249998532591747092[m] [~discord24@2001:470:1af1:101::1:4cfa] has joined #xz-backdoor-reversing
07:03  _discord_2499 | hey \U0001f44b , do we have any shared project for binary ninja? tried to look up the channel and the github page with no luck
07:05             ---|---> _discord_747428452411506819[m] [~discor_46@2001:470:1af1:101::1:4cfb] has joined #xz-backdoor-reversing
07:07  _discord_3955 | I tried executing sshd with the shared object files from the oss mailing list, yet I don't have any performance degradation when running: time env -i LC_LANG=C LD_PRELOAD=/usr/lib/x86_64-linux-gnu/liblzma.so.5.6.1 /usr/sbin/sshd -h. Am I doing something wrong?
07:12  _discord_3955 | * I tried executing `sshd` with the shared object files from the oss mailing list, yet I don't have any performance degradation when running: `time env -i LC_LANG=C LD_PRELOAD=/usr/lib/x86_64-linux-gnu/liblzma.so.5.6.1 /usr/sbin/sshd -h`. Am I doing something wrong?
07:13             ---|---> hiItsMe [~hiItsMe@2a0e:1c80:14:0:45:15:18:72] has joined #xz-backdoor-reversing
07:14             ---|<<-- r2rien [~me@37.171.195.186] has quit (Ping timeout: 480 seconds)
07:14             ---|<<-- hiItsMe [~hiItsMe@2a0e:1c80:14:0:45:15:18:72] has quit ()
07:18             ---|---> hiItsMe [~hiItsMe@2a0e:1c80:14:0:45:15:18:72] has joined #xz-backdoor-reversing
07:20             ---|<<-- hir0pro [~tom@hir0pro.user.oftc.net] has quit (Ping timeout: 480 seconds)
07:24       fn0rd[m] | what is your TERM var?
07:25     Smx2460[m] | hmm this is strange
07:25             ---|---> advern[m] [~advernmat@2001:470:1af1:101::1:4cfc] has joined #xz-backdoor-reversing
07:25     Smx2460[m] | while i'm tracing the payload with Frida, it stops making calls after reading the RSA key
07:25     Smx2460[m] | there's something that is noticing the modification
07:25     Smx2460[m] | s/modification/modifications/
07:26     Smx2460[m] | * maybe there's something that is noticing the modifications
07:27             ---|---> pr0lefeed [~pr0lefeed@110.47.208.46.dyn.plus.net] has joined #xz-backdoor-reversing
07:28  _discord_3955 | fn0rd[m]: it's empty. however, the problem seems to be that `sshd` still uses liblzma 5.0 instead of 5.6.1
07:28  _discord_2499 | try to find the frida hook in memory and try to see if the payload is checking the function against the hook that frida installs
07:28             ---|<<-- pr0lefeed [~pr0lefeed@110.47.208.46.dyn.plus.net] has quit (Remote host closed the connection)
07:29  _discord_2499 | i had frida act strange in the past so could be a bug rather than self defense
07:32  _discord_2499 | do we know what all the shellcode does in the payload? in the gist there is 1 that needs to be patched but i see another 4
07:33         negril | yes
07:33  * _discord_249 sent a code block: https://matrix.org/_matrix/media/v3/download/matrix.org/EUpSChjcOseYwUMxrRpEGNFr
07:34  _discord_2499 | \xf3\x0f\x1e\xfaU\x0fW\xc0\xc8\x01\x00\x00\x1c\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\xf3\x0f\x1e\xfaAW\xb9\xae\xc8\x01\x00\x00\x1b\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\xf3\x0f\x1e\xfaH\x85\xff\x0f\xc8\x01\x00\x00\x1a\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\xf3\x0f\x1e\xfaAWAV\xc4\x01\x00\x00\x19\x00\x00\x00\x04\x00\x00\x00\x01\x00\x00\x00
07:37  _discord_2499 | will try to debug the payload later, unsure what those are \U0001f643
07:37             ---|---> r2rien [~me@37.171.197.204] has joined #xz-backdoor-reversing
07:39             ---|---> zhli [~zhli@DN2lk4370.stanford.edu] has joined #xz-backdoor-reversing
07:40             ---|<<-- Celelibi [celelibi@00012037.user.oftc.net] has quit (Ping timeout: 480 seconds)
07:41             ---|---> Celelibi [celelibi@82-64-105-152.subs.proxad.net] has joined #xz-backdoor-reversing
07:41             ---|---> tonyoy [~me@abordeaux-653-1-47-108.w90-11.abo.wanadoo.fr] has joined #xz-backdoor-reversing
07:45             ---|<<-- r2rien [~me@37.171.197.204] has quit (Ping timeout: 480 seconds)
07:54             ---|---> zhli_ [~zhli@DN2lk43at.stanford.edu] has joined #xz-backdoor-reversing
07:56             ---|<<-- konomi [~konomi@00020287.user.oftc.net] has quit (Quit: konomi)
07:57             ---|---> _discord_346810847831523338[m] [~discor_46@2001:470:1af1:101::1:4cfd] has joined #xz-backdoor-reversing
07:57  _discord_5930 | <_mkow_[m]> "by the obfuscation" <- which obfuscation? i thought it was because of repeated disas but haven't measured
07:58             ---|---> konomi [~konomi@00020287.user.oftc.net] has joined #xz-backdoor-reversing
07:58      _mkow_[m] | _discord_593081254962921473[m]: both disas and the repeated trie lookups, there's really a lot of them
08:00  _discord_8560 | Trie lookups should be really fast
08:00  _discord_8560 | I wouldn't expect those to cause such a delay
08:00  _discord_8560 | And it's not like they have 2 gazillion entries in the tables
08:01  _discord_5930 | nah, it scanned sshd readonly segment for strings for just too many times
08:01  _discord_5930 | and their trie lookup code is pretty stupid too
08:02             ---|<<-- zhli [~zhli@DN2lk4370.stanford.edu] has quit (Ping timeout: 480 seconds)
08:02             ---|User: *** zhli_ is now known as zhli
08:03  _discord_5930 | feel like disas wasn't just for obfuscation tho, the backdoor had legitimate reasons to use it to locate `static` functions in sshd
08:03  cl0pinette[m] | they also scan every line of the output of sshd in case it can find an "Authentication success" string
08:03      _mkow_[m] | _discord_856093329241538570[m]: yeah, but they scan the whole binary many times byte by byte AFAIR
08:05  _discord_5930 | cl0pinette[m]: may I ask where? I might missed it
08:05  _discord_8560 | _mkow_[m]: That's a different function no?
08:05  _discord_8560 | Here
08:05  * _discord_856 uploaded an image: (69KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/b55b02c022d3372efd447a9d99639a3659d4b28d1774815401318809600/image.png >
08:06  _discord_8560 | I made a mistake previously though - they also collect usernames and IP addresses for key authentication as well
08:06  _discord_8560 | And do something with that - not sure what though as I can't follow it further through static reversing
08:06  _discord_8560 | But will post some details about that soon so someone can hopefully follow it further.
08:06  _discord_8560 | One theory is that they might later overwrite an entry with legitimate username <-> IP pair
08:07  _discord_8560 | The function is .Llzma12_mode_map.part.1
08:08  _discord_5930 | oh, you meant in hook_sshlogv
08:10             ---|---> Mooncairn [~mooncairn@0002c5b1.user.oftc.net] has joined #xz-backdoor-reversing
08:12  _discord_8560 | I guess \U0001f642
08:13  _discord_8560 | Do you know what it does with collected information? Usernames, IP addresses ...
08:17      laanwj[m] | does it actually collect the information, or match it against a value and drop the log message if it matched, the latter would make more sense for stealth
08:17             ---|---> JiaTan[m] [~discor_46@2001:470:1af1:101::1:4cff] has joined #xz-backdoor-reversing
08:17      JiaTan[m] | Do you know the purpose why the backdoor makes a new RSA key with e=1, d=1?
08:21  _discord_8560 | Not sure - but when I though about it; they never actually login anyway right? They just exploit the RCE, so there will be no log about their activity anyway?
08:21  _discord_8560 | Or am I missing something?
08:22      laanwj[m] | afaik ssh always logs something for a connection, even if it's just "Connection closed by 127.0.0.1 port 1234 [preauth]"
08:24      laanwj[m] | because of the amount of spam scanning it's not super suspicious if that happens a lot, but this thing seems super overdesigned so who knows
08:25  _discord_8560 | Yeah you're right about excessive logging \U0001f642 However I think those logs would not contain usernames probably? Or would not look like legitimate ones ... who knows
08:27      laanwj[m] | i'm not knowledgable about the details of the ssh protocol, but would expect the username to be sent before the key negotiation, so it's known
08:28  _discord_8560 | I think you might be right there too .. the log would look different though
08:28  _discord_8560 | FWIW, I posted some things at https://isc.sans.edu/diary/30802
08:29  _discord_3035 | Some of the strings found indicate that the backdoor could contain logic to intercept log-writes ("Accepted password for ", "Connection closed by ", etc.)
08:30  _discord_3035 | Another indicator would be that it refuses to run when sshd is running in debug-mode, where I guess details will be written to log before they can be intercepted
08:32  _discord_8560 | Those strings are where it extracts the usernames and IP addresses from
08:32             ---|<<-- steckie [~oftc-webi@p200300f75f0de800fcb95fdfd68082c7.dip0.t-ipconnect.de] has quit (Remote host closed the connection)
08:32  _discord_8560 | Check the link above - I just wrote about that. Not sure what they do with extracted information though
08:35      JiaTan[m] | check this out guys https://twitter.com/amlweems/status/1774819428208689241
08:38  _discord_5930 | pretty nice!
08:38  whichbuffer49 | that was sick
08:38  _discord_5930 | Hoped that it also documented the opcode stego dance used for pulling the hardcoded key out of thin air though
08:39  _discord_5930 | instead it just patched the entire func
08:39  _discord_8560 | Woah
08:42  _discord_3329 | <_discord_856093329241538570[m]> "The function is .Llzma12_mode_ma..." <- what is that a hook for?
08:43  _discord_8560 | _discord_332968312373903360[m]: I think it's called here "hook_sshlogv"
08:43  _discord_3329 | huh this thing? https://github.com/openssh/openssh-portable/blob/43e7c1c07cf6aae7f4394ca8ae91a3efc46514e2/log.c#L464
08:44  cl0pinette[m] | i think that it reads what this function writes to atdout/stderr
08:45  _discord_5930 | nah i was slightly wrong
08:45  _discord_5930 | it should be a log_handler_fn
08:45  _discord_5930 | cl0pinette[m]: it does not tho
08:46             ---|<<-- zhli [~zhli@DN2lk43at.stanford.edu] has quit (Quit: zhli)
08:46  _discord_3329 | this thing? https://github.com/openssh/libopenssh/blob/master/ssh/log.c#L315
08:46  _discord_3329 | you wouldn't need to disam then right?
08:46  _discord_5930 | no?
08:47  _discord_5930 | nm -D /usr/sbin/sshd | grep set_log_handler said that set_log_handler is not exported
08:49  _discord_5930 | so it searched a few strings (`"%.48s:%.48s():%d (pid=%ld)\x00"`, `"Unrecognized internal syslog level code %d\n"`, ...) and disas around to lookup for where log_handler global var is (I imagine, havn't focused on this piece) and also located sshlogdirect
08:49             ---|---> galacticbeat[m] [~discord70@2001:470:1af1:101::1:4d00] has joined #xz-backdoor-reversing
08:49  _discord_3329 | interesting they didn't just hook the functions that calls in turn like fprint or whatever
08:51      laanwj[m] | well i dunno, if ssh has pluggable logging backends, you wouldn't want the message to still go to some other place
08:52  _discord_8560 | <JiaTan[m]> "check this out guys https://..." <- This is crazy ... shame there's no explanation of how he got the key \U0001f626
08:52  _discord_5930 | _discord_856093329241538570[m]: just debug it and dump it?
08:54      JiaTan[m] | it's easy to dump with gdb
08:55             ---|---> _discord_1224378725421027503[m [~discor_47@2001:470:1af1:101::1:4d01] has joined #xz-backdoor-reversing
08:55  _discord_1224 | <JiaTan[m]> "check this out guys https://..." <- So is this correct?
08:56  _discord_8560 | _discord_593081254962921473[m]: Ah yes - probably how he did it as well. The patch overrides the function as far as I can see so he probably dynamically got the key
08:57             ---|---> zhli [~zhli@DN2lk430j.stanford.edu] has joined #xz-backdoor-reversing
08:59  _discord_7724 | He's amazing, hope there will be a detailed analysis
08:59      JiaTan[m] | i think the author worried a lot about dynamic detection which is why they can't make syscalls easily which is why their anti debug sucks
09:00             ---|---> _discord_609041026644049945[m] [~discor_47@2001:470:1af1:101::1:4d02] has joined #xz-backdoor-reversing
09:02  FrankLffler[m | Thinking about the "active" component of the backdoor: do we know if this is actively used? Shouldn't it be possible to patch the backdoor to, simply speaking, include everything but instead of handing the sent code to system(), hand it to some log and through that see if this is being used, with the original key, in the wild?
09:02      JiaTan[m] | there's a honeypot patch on the github repo
09:03      JiaTan[m] | so you don't need to full blown backdoor yourself
09:03  FrankLffler[m | JiaTan[m]: Of course I am not the first with that idea. I did muss that. Thanks!
09:06  _discord_5930 | <_discord_856093329241538570[m]> "Those strings are where it..." <- Well, just finished reading the custom ssh log handler, there's nothing fancy
09:08  _discord_5930 | If several conditions are met (one is the sshd is running as root and backdoor has been used, the other two I haven't annotated in my struct def), it just replace "Accepted password for " / "Accepted publickey for " thing with `"Connection closed by authenticating user %s %s [preauth]"`
09:08  _discord_5930 | %s %s being username and ipaddr/port
09:08  _discord_5930 | s///+/
09:09             ---|---> _discord_263766738443829249[m] [~discor_47@2001:470:1af1:101::1:4d03] has joined #xz-backdoor-reversing
09:09     Smx2460[m] | <JiaTan[m]> "check this out guys https://..." <- wow... nice job
09:10  *   Smx2460[m] sent a code block: https://matrix.org/_matrix/media/v3/download/matrix.org/XCpgXVBHaRPZsnSLuFrIWfJZ
09:13             ---|---> steckie [~oftc-webi@p200300f75f0de800fcb95fdfd68082c7.dip0.t-ipconnect.de] has joined #xz-backdoor-reversing
09:14      JiaTan[m] | but there are still more commands
09:24  _discord_8560 | riatre (@_discord_593081254962921473:t2bot.io) So it will rewrite the log?
09:25       aciid[m] | <JiaTan[m]> "but there are still more..." <- Can you refrain not using that nickname, if people paste logs to research it will messup SEO
09:25       aciid[m] | s/not/from/
09:25             ---|---> pobrn [~pb@81.16.206.163.nat.pool.zt.hu] has joined #xz-backdoor-reversing
09:26  itzswirlz0[m] | yeah there are now two 'jia tan's in the discord server
09:26       aciid[m] | Funny meme!!!
09:27  _discord_7474 | https://github.com/amlweems/xzbot/blob/main/main.go#L81 only 5 bytes form the command are signed and the encryption key is hardcoded then the backdoor can be used without the private key by replaying
09:27     dumpx86[m] | https://x.com/bl4sty/status/1774833765128327386
09:27     dumpx86[m] | I\u2019m running a bit behind on the backdoor struct. So, whats not covered by ed448 signature. Can anyone tell?
09:28      JiaTan[m] | _discord_747428452411506819[m]: only against the same server
09:28  _discord_8560 | _discord_747428452411506819[m]: Replaying yes - but we yet need to catch some packets I guess too \U0001f642
09:28             ---|---> filipe [~ffernand@0002ef60.user.oftc.net] has joined #xz-backdoor-reversing
09:28     dumpx86[m] | _discord_747428452411506819[m]: I heard that there was a replay protection.
09:28  _discord_7474 | Yes, only against a server with the same pub key
09:29      JiaTan[m] | dumpx86[m]: The signature is an RFC-8032 ED448 signature computed over the following values:... (full message at <https://matrix.org/_matrix/media/v3/download/matrix.org/uprQQOHsTCgQowdAqftIIgEm>)
09:30     dumpx86[m] | Do we know what are the list of commands you can invoke through backdoor?
09:30      JiaTan[m] | there are 4 command 0-3
09:30      JiaTan[m] | command 2 is system() on the payload
09:31      JiaTan[m] | https://twitter.com/bl4sty/status/1774835291733250434
09:31      JiaTan[m] | there are some other weird commands but it's not fully reversed or published
09:31     dumpx86[m] | So are we missing info on 0 and 2?
09:32     dumpx86[m] | do you think it could be even more than total of 4 commands?
09:32     dumpx86[m] | s/2/1/
09:32  _discord_7474 | and the commands are handled only after verifying the signature?
09:33      JiaTan[m] | dumpx86[m]: maybe there are some sub-commands but these are the main entry points
09:33      JiaTan[m] | _discord_747428452411506819[m]: yes but they differ in what's covered by the signature. it always includes the server's public key though. but how much of payload is covered differs
09:34      laanwj[m] | invoking an arbitrary payload through system() covers a lot of ground, but yeah it'd be interesting to know what the built-in functionality is
09:34      JiaTan[m] | also i think for the system() command there's a flag you can set to cover more of the payload with the signature
09:34      JiaTan[m] | there's a second signature check call
09:34  _discord_7474 | why only 5 bytes if they knew how to use a hash function ...
09:35     dumpx86[m] | command byte derivation happens prior to the signature verification and decryption. Maybe timing attack?
09:35     dumpx86[m] | s/?/ for oob scanningv/
09:35     dumpx86[m] | * timing attack for oob scanning?
09:35     dumpx86[m] | * timing attack for oob scanning IoC?
09:35      JiaTan[m] | timing is probably the only way to detect it, if you can do it tight enough
09:35 @           js | <prototux[m]> "thanks..." <- > <@_discord_621017259153817601:t2bot.io> thanks... (full message at <https://matrix.org/_matrix/media/v3/download/matrix.org/OzWrMJcwPPKzDvZYmEssHxmd>)
09:36     dumpx86[m] | For now I can only think of timing attack. I\u2019d be keen to see if there happens to be some subcommands which invokes killswitch or alternate way to defuse / gain access.
09:37      JiaTan[m] | that would also be behind the signature check though unless we're severely misunderstanding some functionality
09:39      JiaTan[m] | about defuse, one interesting thing is if you send it a properly formed RSA key and then fail the ed448 sig check, it will set the angry flag and won't try the backdoor again
09:39      JiaTan[m] | but it happens inside the forked process so i think that's actually useless
09:39      laanwj[m] | from a government actor point of view it would make sense for there to be seperate keys/signature for the host and for the command to be executed, one would have to be requested based on who is targeted, the other comes with use of the tool
09:40     dumpx86[m] | I\u2019m no crypto expert - but no way we can do some collision / bf since 5 bytes are being signed?
09:40      laanwj[m] | this is typically how the bureaucracy works
09:40      JiaTan[m] | it's not 5 bytes being signed
09:40      JiaTan[m] | it's 4+5+32
09:42             ---|<<-- zhli [~zhli@DN2lk430j.stanford.edu] has quit (Quit: zhli)
09:43     dumpx86[m] | \U0001f613
09:43      JiaTan[m] | and it's using openssl primitives so nah even if it was 1 byte you'd be fucked
09:44      laanwj[m] | yea the amount of data covered doesn't help figure out the expected signature
09:44     dumpx86[m] | https://x.com/maciekkotowicz/status/1774834699292070037
09:45             ---|---> _discord_838601842086248469[m] [~discord83@2001:470:1af1:101::1:4d06] has joined #xz-backdoor-reversing
09:45             ---|---> todd_33582[m] [~discor_47@2001:470:1af1:101::1:4d07] has joined #xz-backdoor-reversing
09:45             ---|---> scatterflower[m] [~discord87@2001:470:1af1:101::1:4d08] has joined #xz-backdoor-reversing
09:45  scatterflower | ed448 is such a weird curve to use, i wonder why it was chosen
09:45             ---|---> flapjack8100[m] [~discor_47@2001:470:1af1:101::1:4d09] has joined #xz-backdoor-reversing
09:45      laanwj[m] | they really like their fancy ciphers
09:46     dumpx86[m] | https://x.com/julianor/status/1774835249425350846
09:46     dumpx86[m] | julianor (@_discord_747428452411506819:t2bot.io) lack of replay protection is confirmed, right?
09:46     dumpx86[m] | assuming targetting same host
09:46      JiaTan[m] | i think that's not fully true
09:46      JiaTan[m] | there's some flag they can set and it calls another sig check function
09:46      JiaTan[m] | in addition to the initial one
09:47  *    JiaTan[m] uploaded an image: (33KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/8840e9dc8716aa82b26e8cb3a23196cc5746b8361774841035638177792/image.png >
09:47      JiaTan[m] | first
09:47  *    JiaTan[m] uploaded an image: (44KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/5d9a7a3044310b9bbb67b4b14f37474c3740e0fa1774841085059661824/image.png >
09:47      JiaTan[m] | second
09:48             ---|---> lukflug[m] [~discor_47@2001:470:1af1:101::1:4d0a] has joined #xz-backdoor-reversing
09:49      JiaTan[m] | but it's kinda hard to tell how many bytes it's shoving into the second sig check
09:50     dumpx86[m] | I have a big brain idea. Do ya\u2019ll remember that env variable which disabled the backdoor. What if that is tied to a command? \U0001f914 
09:50     dumpx86[m] | There has to be a way where it is invoked by the backdoor payload.
09:51  jripley8619[m | Wondered about that \u2014 the "random" env variable is 192 bits of base64
09:51  _discord_7474 | we can confirm if there is replay protection or not by changing the public key, right?
09:51     dumpx86[m] | Because at some point attacker would have to end up patching the entrypoint so that it couldnMt be reused to attack the system in case their keys are compromised
09:52     dumpx86[m] | s/couldnMt/couldn\u2019t/
09:52  Foobar9222[m] | Could be a 192bit symm key?
09:52     dumpx86[m] | jripley8619[m]: Yeah, that env var has a larger role to play which I believe we haven\u2019t fully explored yet
09:53  _discord_3035 | The only problem with that theory is that the string is never directly referenced by its index (0x0b00) in the lib
09:53      JiaTan[m] | _discord_747428452411506819[m]: different command/flags have different degree of replay protection
09:53  Foobar9222[m] | I agree its not merely a killswitch seeing as about a dozen other vars act as a killswitch
09:53      JiaTan[m] | but it's 100% tied to server pubkey at the very least
09:53  jripley8619[m | The only way to have anti-replay is either involve some factor from the multi-way handshake, or persist a token/counter on the host.
09:54             ---|---> _cra2yman_0[m] [~discor_47@2001:470:1af1:101::1:4d0b] has joined #xz-backdoor-reversing
09:54  _cra2yman_0[m | dumpx86[m]: Anyway, where was this suspicious env called? I tried to search, but I didn't find it. It may be the problem I searched.
09:56  jripley8619[m | Another "anti-replay" mechanism would be whatever you put in the command itself \u2014 make it only usable on a single machine, e.g embed into the command script a check for IP address, date etc.
09:56             ---|---> zhli [~zhli@DN2lk4339.stanford.edu] has joined #xz-backdoor-reversing
09:57             ---|---> eak[m] [~eakdigita@2001:470:1af1:101::9f8f] has joined #xz-backdoor-reversing
09:58  _discord_5030 | <scatterflower[m]> "ed448 is such a weird curve to..." <- doesnt ed448 have really small keys?
09:58  _discord_7474 | true, the command can write a counter to a file or check time
09:59      laanwj[m] | that's what the signature over the host key is for, i don't think the backdoor protects against replaying on the same host
09:59     esclear[m] | _discord_503014684119662592[m]: You have to fit in the command/payload + signature into the RSA key, I think that's why.
09:59  scatterflower | _discord_503014684119662592[m]: true its like 60 ish bytes
09:59  _discord_7474 | the command can be also used to start a second stage that negotiates a secure channel with perfect forward secrecy  and that is why they use a fixed symmetric key
10:00     dumpx86[m] | ok but how easy it is to capture a message signed for a single host?
10:00     dumpx86[m] | The public key part is encrypted, even if a victim monitors that - How would they be able to decrypt in the first place without having the hardcoded ed448
10:00             ---|---> harmathy [~harmathy@00027b72.user.oftc.net] has joined #xz-backdoor-reversing
10:00      JiaTan[m] | the question is why they didn't use ed25519 which is even smaller
10:00     dumpx86[m] | Like whats the use case for this finding
10:00             ---|---> trn_0[m] [~discord75@2001:470:1af1:101::b1bb] has joined #xz-backdoor-reversing
10:01     esclear[m] | _discord_747428452411506819[m]: Is it known yet, what the three commands available do?
10:01     esclear[m] | * three commands that are available do?
10:01      laanwj[m] | Jia Tan yes, using a 448 bit elliptic curve is absolutely overdesigned and very future proof \U0001f604
10:02      laanwj[m] | maybe they intended this to stick arond for a long time
10:02     dumpx86[m] | But you still need to know ed448 key as a victim, no?
10:02      JiaTan[m] | the key that we can dump out of the backdoor yes
10:03  _discord_3329 | <dumpx86[m]> "https://x.com/julianor/status/17..." <- probably not a flaw but intentional?
10:03      JiaTan[m] | you can kinda tell by the magic bytes
10:03     dumpx86[m] | Correct. But if a victim dumps it out from the backdoor - then they already know that they are compromised. 
10:03     dumpx86[m] | I\u2019m wondering more about the usability perspective of the \u201clack of replay protection on the same host\u201d finding.
10:03  _discord_3329 | means you can give someone a pre-signed key to access a server
10:03      JiaTan[m] | <https://github.com/amlweems/xzbot/blob/9ee132479caadf1446d98f46ec49d7d25c937994/openssh.patch#L37-L38>
10:03     dumpx86[m] | JiaTan[m]: But if you monitor the public key - the number consists of encrypted values
10:04  _discord_3329 | another indicator this was a commercial or nation state operation
10:04  _discord_7474 | is it possible to MiTM their protocol or the SSH layer protects them? I mean, with ssh you do TOFU for the server pub key. So they want to hack theirvictim dot com  and you are a powerful entity that can MiTM and you want to hack yourvictim dot com instead. When they connect theirvictim you provide yourvictim pub key
10:04  jripley8619[m | I don't think it _lacks_ replay protection. You just have to be sure the executed command is only usable on one target or once. Why complicate the already complex payload when you can punt it to the RCE code instead?
10:04      _mark_[m] | _discord_332968312373903360[m]: Give or sell
10:05  _discord_3329 | selling is just giving it in exchange for something isn't it
10:05      JiaTan[m] | dumpx86 (@_discord_506884187169619968:t2bot.io) i maybe don't fully understand your scenario
10:05  _cra2yman_0[m | In fact, what I feel suspicious about is why the attacker used system.
10:05      _mark_[m] | As opposed to fork / exec?
10:06  _cra2yman_0[m | In order to adapt to various devices, or other commands that may feel directly executed do not seem to be a very wise choice.
10:06  jripley8619[m | system() is trivial to invoke and they probably just didn't want to make the payload any bigger than it already is. It already sticks out as being larger than the usual liblzma.
10:06  _cra2yman_0[m | He can even consider loading some shellcode plug-ins or something.
10:06  _discord_3035 | _cra2yman_0[m]: Maybe they just pipe in a bash-script, `curl ... | bash` is shorter than `/bin/bash -c 'curl ... | bash'`
10:06  _discord_3035 | s/bash/sh/
10:07             ---|---> mikecmpbll [~mikecmpbl@92.40.189.136.threembb.co.uk] has joined #xz-backdoor-reversing
10:07  _discord_3329 | got a foreign intelligence service, they want to break into a bad guys servers, but you don't trust they won't turn around and break into IBM/alibaba/NSO servers if you give them the full exploit so you give be a pre-signed certificate for the server they want to get into and a tool to generate a valid payload using that
10:07  _discord_3329 | can't get any other server
10:07  _discord_3329 | you don't need to know what exactly they are planning to do with the access either
10:07  _discord_3329 | win-win
10:08      _mark_[m] | True, you're backdooring your countries servers along with the target
10:08  _discord_3035 | _discord_332968312373903360[m]: Could also explain why only the first 5 bytes of the payload-command are signed
10:09  _discord_7474 | My hypothesis for Ed448: attackers considered breaking all sign algorithms inside SSHD to bypass pub key auth entirely by providing a valid Ed448 signature for their key instead of the signature for the user's key in an otherwise normal ssh protocol packet. A less commonly used pub key auth signature algorithm may have been necessary for that rootkit approach (reentrancy to functions, infinite loop \U0001f642 ).
10:09  _discord_7474 | But then they decided on a simple system() because cleaning logs was risky.
10:09  herzeleid02[m | _discord_332968312373903360[m]: so the attack was very targeted?
10:10             ---|---> NathanHaines[m] [~nhainesub@2001:470:1af1:101::1:4d0c] has joined #xz-backdoor-reversing
10:10  _discord_3035 | herzeleid02[m]: No, but the initial attack could sell (if we talk commercially) access-keys to specific infected servers
10:10  _discord_3035 | s/attack/attacker/
10:10  _cra2yman_0[m | _discord_747428452411506819[m]: However, in another way, considering that full-flow devices may detect possible further activities of related system.
10:10      laanwj[m] | _discord_332968312373903360[m]: yes, it makes sense for delegation with limited trust
10:10  _cra2yman_0[m | Of course, if he only uses curl.
10:11      laanwj[m] | which is exactly how intelligene agencies would reason, it's easy to get burned if it's a single key that everyone with the tool would have
10:11  _discord_3035 | _cra2yman_0[m]: Can't be much else, only about 120 bytes for the actual payment to execute
10:11  _discord_3035 | s/payment/payload/
10:11  *   Smx2460[m] sent a code block: https://matrix.org/_matrix/media/v3/download/matrix.org/LVHXRUGcpvVDQwIhUMoSsOWU
10:12     Smx2460[m] | this is the backtrace of system with xzboit
10:12     Smx2460[m] | s//`/, s//`/, s/xzboit/`xzbot`/
10:12     Smx2460[m] | (gdb) info sharedlib /lib/x86_64-linux-gnu/liblzma.so.5
10:12     Smx2460[m] | From                To                  Syms Read   Shared Object Library
10:12     Smx2460[m] | 0x00007fc26ee9d5b0  0x00007fc26eec5808  Yes (*)     /lib/x86_64-linux-gnu/liblzma.so.5
10:12  _discord_3329 | maybe 448 is easier to implement or has a lower footprint or something?
10:12  scatterflower | by what mechanism is the signature bound to the host? is it not the same sig requires for every host?
10:13  jripley8619[m | ed448 is just the max strength NIST recommended curve at the moment, probably nothing more complicated than that in the choice.
10:13      JiaTan[m] | for signature check it calls to openssl functions so ed448 vs others shouldn't matter there
10:13  _discord_3329 | scatterflower[m]: hash of the host ssh key I believe
10:13      JiaTan[m] | maybe nsa expects to break ed25519 in a few years
10:13  _cra2yman_0[m | _discord_303560384747667459[m]: Okay, I understand. Maybe that's why he chose to use system to execute commands.
10:13  *   Smx2460[m] sent a code block: https://matrix.org/_matrix/media/v3/download/matrix.org/FXDoKlWhJFPxDlSqrGtXYJef
10:13  _cra2yman_0[m | Because the number of bytes allowed is actually small.
10:13  _discord_3329 | I'm curious how would you get the host ssh pub key actually
10:13  _discord_3329 | do you need to just make a login attempt for that
10:14  scatterflower | _discord_332968312373903360[m]: its presented when attempted to connect
10:14      _mark_[m] | Yes
10:14  _discord_3329 | or can you get it without having ssh logging anything
10:14  scatterflower | s/attempted/attempting/
10:14      _mark_[m] | ssh scans are so common, it would not be noticed
10:14     kaos_iv[m] | shall i make the proposition to keep this chanel chat-free, and have it only for findings and move this discussion to #xz-backdoor-chat  ?
10:14     kaos_iv[m] | s/chanel/channel/
10:15  jripley8619[m | _mark_[m]: Worse maybe: you can login to a server you already _legitimately_ have access to, and it has a logless side-effect of running a command as root too.
10:15      laanwj[m] | typically they'd check what kind of system it is, then download some rootkit implant, no need for a long command
10:15     dumpx86[m] | I think we need another channel - one for only discussion osint on jiat and another for discussion backdoor while this can be one just for backdoor findings
10:16  _cra2yman_0[m | And you can also let the administrator create a channel to summarize the current conclusions.
10:17     dumpx86[m] | * I think we need another channel - one for only discussion osint on jiat and another for discussion backdoor while this can be one just for backdoor findings... (full message at <https://matrix.org/_matrix/media/v3/download/matrix.org/jxYvWHchLUKqzwhUoXXduUkR>)
10:17  _discord_3329 | midar3 (@_discord_774066653708681226:t2bot.io)
10:17     dumpx86[m] | * I think we need another channel - one for only discussion osint on jiat and another for discussion backdoor while this can be one just for backdoor findings... (full message at <https://matrix.org/_matrix/media/v3/download/matrix.org/cpjpxBEERgcZZtsclSrvmauQ>)
10:19      midar3[m] | dumpx86[m]: I'll create an osinit
10:19      midar3[m] | s/osinit/osint/
10:19      midar3[m] | _cra2yman_0[m]: That's what the wiki is supposed to be for, but nobody uses it \U0001f626
10:20             ---|---> _discord_161548333582778368[m] [~discor_47@2001:470:1af1:101::1:4d0d] has joined #xz-backdoor-reversing
10:21  _cra2yman_0[m | Maybe you can pin it
10:21  _cra2yman_0[m | Explaining it in one place may be a good guide for new members.
10:24             ---|User: *** _discord_161548333582778368[m] is now known as kiveris[m]
10:24        tty6[m] | <Smx2460[m]> "(gdb) bt..." <- that stack is a mess
10:25        tty6[m] | <Smx2460[m]> "(gdb) x/10i 0x00007fc26eeb0878..." <- what's that doing?
10:25             ---|User: *** _discord_838601842086248469[m] is now known as no023456789[m]
10:27             ---|User: *** _discord_659897428417445909[m] is now known as rlrevell[m]
10:28             ---|---> foxboron[m]1 [~discord10@2001:470:1af1:101::1:4d0e] has joined #xz-backdoor-reversing
10:29      kam821[m] | tty6[m]: it's bunch of bullshit, has been patched to jmp somewhere else
10:29             ---|User: *** _cra2yman_0[m] is now known as _cra2yman_[m]
10:30             ---|---> shenanigansd[m] [~discor_48@2001:470:1af1:101::1:4d0f] has joined #xz-backdoor-reversing
10:30             ---|<--- IlliaOstapyshyn[m] [~mdr-h2qma@2001:470:1af1:101::1:4c12] has left #xz-backdoor-reversing ()
10:31             ---|User: *** _discord_332968312373903360[m] is now known as num0005[m]
10:32      laanwj[m] | patched? i dunno, it's dumping the code after return from the system(), apparently it jumps after that, maybe to the end of a an if() or switch statement after the command is completed
10:36      JiaTan[m] | after calling system() it should overwrite the incoming RSA public key with e=1, n=big value, and then call exit
10:36  *    JiaTan[m] uploaded an image: (39KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/b38d0ef6c7fe95c959bcbc5f128a1453309460261774853432323080192/image.png >
10:37             ---|<<-- pobrn [~pb@81.16.206.163.nat.pool.zt.hu] has quit (Remote host closed the connection)
10:37             ---|---> BradleyReynolds[m] [~shenaniga@2001:470:1af1:101::1:4d10] has joined #xz-backdoor-reversing
10:39     num0005[m] | JiaTan[m]: it set the angry flag after a system call too?
10:40      JiaTan[m] | but it shouldn't matter since it calls exit anyway
10:40     num0005[m] | right, does ssh relaunch the process after an exit or not?
10:41             ---|---> _discord_316260632133369856[m] [~discord31@2001:470:1af1:101::1:4d11] has joined #xz-backdoor-reversing
10:41             ---|User: *** _discord_316260632133369856[m] is now known as _bluss[m]
10:42             ---|---> phishing_pharao [~phishing_@ip-037-201-116-138.um10.pools.vodafone-ip.de] has joined #xz-backdoor-reversing
10:43     num0005[m] | oh right this targets the privileged forked login process
10:46             ---|Channel: mode/#xz-backdoor-reversing [+o wrc] by ChanServ
10:47             ---|---> _discord_623361891174973440[m] [~discord62@2001:470:1af1:101::1:4d13] has joined #xz-backdoor-reversing
10:49             ---|---> _discord_133348672976060416[m] [~discord13@2001:470:1af1:101::1:4d14] has joined #xz-backdoor-reversing
10:53             ---|---> alecmocatta[m] [~discord47@2001:470:1af1:101::1:4d15] has joined #xz-backdoor-reversing
10:54     brlintw[m] | That's what the wiki is supposed to be
10:55     Smx2460[m] | <tty6[m]> "what's that doing?" <- Call site of system()
10:55 @           js | <_cra2yman_[m]> "Maybe you can pin it..." <- > <@_discord_789470554558038017:t2bot.io> Maybe you can pin it
10:55 @           js | > Explaining it in one place may be a good guide for new members.
10:55 @           js | Hm, I thought the message is pinned? Is there something else in Discord called pinning?
10:56  *    _mark_[m] uploaded an image: (54KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/8723c3eee21d41577969178f529cc690ca08c5b11774858471284408320/image.png >
10:58  *   brlintw[m] uploaded an image: (103KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/2795b7e935a2ef7d788aab1698147af72c7f8ac41774858905482952704/image.png >
10:59     brlintw[m] | * Though to be honest I only recognize it after Mark demonstrate the feature actually exists...
10:59             ---|User: *** _discord_303560384747667459[m] is now known as oachkatzloarsch[m]
11:01  _cra2yman_[m] | <js> "> <@_discord_789470554558038017..." <- okay i found it.it works well now
11:01             ---|---> arraybolt3_ [~arraybolt@2607:fb91:1126:8371:c6ad:209b:f64:79dc] has joined #xz-backdoor-reversing
11:04             ---|User: *** itzswirlz0[m] is now known as itzswirlz[m]
11:06             ---|<<-- tonyoy [~me@abordeaux-653-1-47-108.w90-11.abo.wanadoo.fr] has quit (Ping timeout: 480 seconds)
11:07             ---|<<-- arraybolt3 [~arraybolt@2607:fb91:11d0:cf53:64c5:5006:5f95:41bd] has quit (Ping timeout: 480 seconds)
11:14             ---|---> pobrn [~pb@81.16.206.163.nat.pool.zt.hu] has joined #xz-backdoor-reversing
11:14             ---|---> _discord_686253025970356309[m] [~discord68@2001:470:1af1:101::1:4d17] has joined #xz-backdoor-reversing
11:20             ---|---> _discord_660066004059029524[m] [~discord66@2001:470:1af1:101::1:4d19] has joined #xz-backdoor-reversing
11:23             ---|---> brondolongwood_12215[m] [~discor_48@2001:470:1af1:101::1:4d1a] has joined #xz-backdoor-reversing
11:23  brondolongwoo | Is anyone able to coment on whether or not MacOS is vulnerable to this attack chain in either 5.6 or 5.6.1? My understanding is that the profiler code will only inject the secondary backdoor on the x86-64 arch and linux-gnu operating systems.
11:23  brondolongwoo | Seeing a lot of FUD about MacOS being vulnerable via brew, etc
11:25      laanwj[m] | no, this does not affect macos, it's explicitly limited to linux
11:26       aciid[m] | New found https://github.com/orgs/Homebrew/discussions/5243
11:26       aciid[m] | They tried getting it updated to homebrew
11:26  grandpacanary | <dumpx86[m]> "ok but how easy it is to capture..." <- The host's own key is all attacker can use to bake a valid cert, aka the host cert itself. Yeah?    So typical scenario is someone walkes up to Jia wanting a key for IBM, he asks where's the public host, some XMR is traded, he send back valid payloads.
11:30  oachkatzloars | grandpacanary[m]: Here's a detailed explaination on how the signature works: https://github.com/amlweems/xzbot/tree/main?tab=readme-ov-file#backdoor-format
11:33             ---|<--- Nils[m] [~ravagexen@2001:470:1af1:101::1:4ca9] has left #xz-backdoor-reversing ()
11:34             ---|User: *** _discord_747428452411506819[m] is now known as julianor[m]
11:34  *  julianor[m] uploaded an image: (78KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/d2eaf1e5deac1b7c5eb17363ae28cdfdeb0ee5df1774867999744851968/image.png >
11:34    julianor[m] | uint8 + uint32 = five bytes, the actual system() command is not signed (from amlweems/xzbot/blob/main/main.go#L81)
11:44             ---|<<-- steckie [~oftc-webi@p200300f75f0de800fcb95fdfd68082c7.dip0.t-ipconnect.de] has quit (Remote host closed the connection)
11:46             ---|---> orfeo5862[m] [~discor_48@2001:470:1af1:101::1:4d1b] has joined #xz-backdoor-reversing
11:46             ---|User: *** sophrosyne420[m] is now known as sophrosyne42[m]
11:47             ---|<<-- hiItsMe [~hiItsMe@2a0e:1c80:14:0:45:15:18:72] has quit (Quit: gone)
11:48      JiaTan[m] | <julianor[m]> "uint8 + uint32 = five bytes, the..." <- ohh good catch
11:50      genazt[m] | makes it easier to sell the exploit
12:00             ---|User: *** _discord_519762651815870464[m] is now known as thejakeschmidt[m]
12:07             ---|---> _discord_265096437937864705[m] [~discord26@2001:470:1af1:101::1:4d1d] has joined #xz-backdoor-reversing
12:07  _discord_2650 | <JiaTan[m]> "image.png" <- Jia Tan (@_discord_462063727655649290:t2bot.io) are you making this file public?
12:08  Foobar9222[m] | _discord_265096437937864705[m]: Its probably a ghidra or ida decomp
12:08             ---|User: *** Foobar9222[m] is now known as foosec[m]
12:09  cl0pinette[m] | looks like ida
12:09       gmod9[m] | ida
12:10             ---|<<-- andreyv [~andrey@0001bc7d.user.oftc.net] has quit (Ping timeout: 480 seconds)
12:11  _discord_2650 | foosec[m]: Don't you still need to name the various functions and variables?
12:11      foosec[m] | _discord_265096437937864705[m]: Yes
12:12  vlad_ivanov_n | _discord_265096437937864705[m]: Also create types. Those ida / ghidra databases can be very useful \U0001f642
12:12  vlad_ivanov_n | And annotate regions
12:16             ---|<<-- zhli [~zhli@DN2lk4339.stanford.edu] has quit (Quit: zhli)
12:21             ---|---> n0v0cane[m] [~discord52@2001:470:1af1:101::1:4d1e] has joined #xz-backdoor-reversing
12:30             ---|---> Teeed7744[m] [~discor_49@2001:470:1af1:101::1:4d1f] has joined #xz-backdoor-reversing
12:30             ---|---> _discord_464686705056940032[m] [~discord46@2001:470:1af1:101::1:4d20] has joined #xz-backdoor-reversing
12:33             ---|---> zhli [~zhli@DN2lk434q.stanford.edu] has joined #xz-backdoor-reversing
12:37             ---|<<-- arraybolt3_ [~arraybolt@2607:fb91:1126:8371:c6ad:209b:f64:79dc] has quit (Quit: Konversation terminated!)
12:37             ---|---> arraybolt3_ [~arraybolt@2607:fb91:1126:8371:c6ad:209b:f64:79dc] has joined #xz-backdoor-reversing
12:38             ---|<<-- arraybolt3_ [~arraybolt@2607:fb91:1126:8371:c6ad:209b:f64:79dc] has quit ()
12:38             ---|---> arraybolt3_ [~arraybolt@172.59.224.104] has joined #xz-backdoor-reversing
12:42             ---|---> salusasecondus[m] [~discord43@2001:470:1af1:101::1:4d22] has joined #xz-backdoor-reversing
12:49             ---|---> lukka [~lucca@ip-193-53-104-44.changeis.iunxi.net] has joined #xz-backdoor-reversing
12:56             ---|<<-- phishing_pharao [~phishing_@ip-037-201-116-138.um10.pools.vodafone-ip.de] has quit (Remote host closed the connection)
12:56             ---|---> Powermachine1688[m] [~discor_49@2001:470:1af1:101::1:4d23] has joined #xz-backdoor-reversing
13:03             ---|---> somemisopaste[m] [~discord60@2001:470:1af1:101::1:4d24] has joined #xz-backdoor-reversing
13:05             ---|---> phishing_pharao [~phishing_@ip-037-201-116-138.um10.pools.vodafone-ip.de] has joined #xz-backdoor-reversing
13:23             ---|---> ech1965[m] [~discord51@2001:470:1af1:101::1:4d26] has joined #xz-backdoor-reversing
13:28             ---|User: *** _discord_428716613240619008[m] is now known as upsetdoggo[m]
13:29             ---|<<-- zhli [~zhli@DN2lk434q.stanford.edu] has quit (Quit: zhli)
13:37             ---|---> _discord_165540221100752897[m] [~discord16@2001:470:1af1:101::1:4d27] has joined #xz-backdoor-reversing
13:37  _discord_1655 | yeah, and it's easy enough to host a ghidra server for RE
13:39             ---|---> obafgkm[m] [~discord21@2001:470:1af1:101::1:4d28] has joined #xz-backdoor-reversing
13:39             ---|User: *** _discord_503014684119662592[m] is now known as nuxi7[m]
13:41             ---|---> pr0lefeed [~pr0lefeed@110.47.208.46.dyn.plus.net] has joined #xz-backdoor-reversing
13:46             ---|---> _discord_764221445601099846[m] [~discor_50@2001:470:1af1:101::1:4d2a] has joined #xz-backdoor-reversing
13:48             ---|<<-- Riastradh [~riastradh@jupiter.mumble.net] has quit (Remote host closed the connection)
13:49             ---|<<-- pr0lefeed [~pr0lefeed@110.47.208.46.dyn.plus.net] has quit (Ping timeout: 480 seconds)
13:54  grandpacanary | <aciid[m]> "New found https://github.com/..." <- On the homebrew attempt, I can't do it from where I at but given how the .o process is done for Debian with only the dist git holding the m4 and does the Makfile rewrite and it's looking for a deb/rpm folder, how was the homebrew version done?    Or was that just a contributor wanting fresh deplibs because newest=better like so many of the projects doing bindings
13:54             ---|---> Riastradh [~riastradh@jupiter.mumble.net] has joined #xz-backdoor-reversing
14:00  grandpacanary | * On the homebrew attempt, I can't do it from where I at;  but given how the `.o` process is done for Debian with only the dist git holding the m4 and that does the critical Makefile rewrite and it's looking for a deb/rpm folder, how was the homebrew version done?    Or was that just a contributor wanting fresh deplibs because newest=better like so many of the projects doing bindings?
14:03             ---|<<-- wmoh [~wmoh@38.32.73.2] has quit (Ping timeout: 480 seconds)
14:08             ---|---> _discord_264861759607668737[m] [~discord26@2001:470:1af1:101::1:4d2b] has joined #xz-backdoor-reversing
14:13             ---|---> steckie [~oftc-webi@p200300f75f0de800fcb95fdfd68082c7.dip0.t-ipconnect.de] has joined #xz-backdoor-reversing
14:14             ---|---> Robert0004[m] [~discord16@2001:470:1af1:101::1:4d2c] has joined #xz-backdoor-reversing
14:22             ---|---> _discord_1074986753125007390[m [~discor_50@2001:470:1af1:101::1:4d2d] has joined #xz-backdoor-reversing
14:22  _discord_1074 | here's a draft of a sigma rule to detect the unusual child processes spawned by sshd as stated in https://github.com/amlweems/xzbot?tab=readme-ov-file#backdoor-demo
14:22  _discord_1074 | https://github.com/SigmaHQ/sigma/pull/4794
14:22             ---|---> cdr0[m] [~discord14@2001:470:1af1:101::1:4d2e] has joined #xz-backdoor-reversing
14:24             ---|<<-- Mooncairn [~mooncairn@0002c5b1.user.oftc.net] has quit (Quit: Leaving)
14:25             ---|User: *** _discord_770659603452133426[m] is now known as jwt27[m]
14:27       f_[xmpp] | JiaTan[m]: You're not Jia, are you?
14:27  grandpacanary | <grandpacanary[m]> "* On the homebrew attempt, I can..." <- Quick look seems like they build direct, the GOT would be way different anyway for arm64 nevermind the decisions the optimizer and linker would make over there.
14:28 @           js | f_[xmpp]: No, he's Satoshi Nakamoto
14:28             ---|<<-- phishing_pharao [~phishing_@ip-037-201-116-138.um10.pools.vodafone-ip.de] has quit (Remote host closed the connection)
14:29  grandpacanary | Hombrew kinda revealed something that they early adopted so quick, though.  That's useful information to the wrong people.
14:29             ---|---> _discord_582600945087676450[m] [~discord58@2001:470:1af1:101::1:4d31] has joined #xz-backdoor-reversing
14:29             ---|User: *** _discord_582600945087676450[m] is now known as cyberpower678[m]
14:30       nuxi7[m] | grandpacanary[m]: isnt homebrew basically a rolling release distro? I dont think its any more revealing than debian sid, fedora rawhide, or arch picking it up.
14:30             ---|<<-- beber_ [~beber_@2a05:d018:c28:1a00:fd:d0ae:0:5222] has quit (Quit: Gateway shutdown)
14:31  grandpacanary | nuxi7[m]: I don't know what they decide is their cue to pipeline tho.
14:33  grandpacanary | I'll just assume a branch merge does it.
14:33             ---|---> beber_ [~beber_@2a05:d018:c28:1a00:fd:d0ae:0:5222] has joined #xz-backdoor-reversing
14:36             ---|---> _discord_856898354398494770[m] [~discor_50@2001:470:1af1:101::1:4d32] has joined #xz-backdoor-reversing
14:36             ---|User: *** _discord_856898354398494770[m] is now known as vegan_anticucho[m]
14:42       f_[xmpp] | js: oh ok
14:43             ---|---> _discord_894035196121325649[m] [~discor_50@2001:470:1af1:101::1:4d33] has joined #xz-backdoor-reversing
14:53             ---|---> r2rien [~me@abordeaux-653-1-47-108.w90-11.abo.wanadoo.fr] has joined #xz-backdoor-reversing
14:53      _bluss[m] | could the exploit have worked if liblzma was dlopen'ed instead of linked in? could it have hooked a function in a completely different part of the process? The RSA_public_decrypt
14:56        xorAxAx | depends on the dlopen flags
14:56      laanwj[m] | _bluss[m]: it could, but it would have been much less stealthy, the plt/got table is mapped read-only after load (with relro), it could be mprotected to allow writing then back to r+x, but that's kind of suspicious and much more likley to be detected
14:57      laanwj[m] | but yes, a shared library can trample all over your memory space and you can do nothing about it 
14:58      _bluss[m] | we can use systemd's dlopen flags as reference to start with. They seem to use RTLD_LAZY and default which should be (RTLD_LOCAL).
14:58      _bluss[m] | Source link https://github.com/systemd/systemd/blob/8959e17d736fbdbaf7cd912f35d23ced2e261327/src/basic/dlfcn-util.c#L40
15:02    prototux[m] | _bluss[m]: the stage 2 bash explicitely checks for lazy in the ldflags... that's the only "real" check they do actually
15:03    prototux[m] | * in the (liblzma) ldflags... that's
15:06    Phil9999[m] | <laanwj[m]> "it could, but it would have been..." <- I'm not too familiar with linux, but on windows function hooking / detouring is usually done by patching a jump at the beginning of the function, I imagine the same thing would work fine under linux. However, like modifying the GOT after it's remapped as read-only, this requires messing with page permissions
15:06             ---|User: *** Phil9999[m] is now known as sapphyrus[m]
15:09             ---|<--- Conjuro [~Conjuro@pg.conjuro.net] has left #xz-backdoor-reversing (WeeChat 4.0.5)
15:09      laanwj[m] | sapphyrus[m]: ELF has these call tables so you probably wouldn't have to, though that would work too, but yea would be even more dirty and less stealthy
15:10             ---|<<-- midou [~midou@sl.projectsegfau.lt] has quit (Ping timeout: 480 seconds)
15:10      laanwj[m] | as someone said, clearly the authors of this backdoor were very scared of dynamic detection, so they avoid doing anything that seems malware-like
15:10             ---|---> _discord_954402826686201929[m] [~discord95@2001:470:1af1:101::1:4d36] has joined #xz-backdoor-reversing
15:10             ---|User: *** _discord_954402826686201929[m] is now known as trxnn4930[m]
15:12             ---|---> zhli [~zhli@DN2lk437d.stanford.edu] has joined #xz-backdoor-reversing
15:13      laanwj[m] | (imagine it running on hundreds of thousands of computers, someone will catch that behavior... and they weren't wrong, but they didn't expect the kind of dynamic detection that would catch them was a simple benchmark \U0001f604)
15:13   sapphyrus[m] | also seems pretty sketchy to have GOT entries of one library pointing to a different one
15:17             ---|---> mikecmpb1l [~mikecmpbl@179.48.251.105] has joined #xz-backdoor-reversing
15:19             ---|<<-- r2rien [~me@abordeaux-653-1-47-108.w90-11.abo.wanadoo.fr] has quit (Quit: Quit)
15:19             ---|---> kingbeencent[m] [~discord47@2001:470:1af1:101::1:4d37] has joined #xz-backdoor-reversing
15:22             ---|<<-- mikecmpbll [~mikecmpbl@92.40.189.136.threembb.co.uk] has quit (Read error: Connection reset by peer)
15:25             ---|---> js_ [~js_@2a02:418:6a04:c1f8::1] has joined #xz-backdoor-reversing
15:25             ---|---> mphi [~mphi@pd9e15fd7.dip0.t-ipconnect.de] has joined #xz-backdoor-reversing
15:26             ---|---> r2rien [~me@abordeaux-653-1-47-108.w90-11.abo.wanadoo.fr] has joined #xz-backdoor-reversing
15:28             ---|<<-- mikecmpb1l [~mikecmpbl@179.48.251.105] has quit (Ping timeout: 480 seconds)
15:30             ---|<<-- zhli [~zhli@DN2lk437d.stanford.edu] has quit (Quit: zhli)
15:33             ---|<<-- js_ [~js_@2a02:418:6a04:c1f8::1] has quit (Ping timeout: 480 seconds)
15:37   sapphyrus[m] | well wouldn't you agree that the GOT entry for RSA_public_decrypt should always point to an address in libcrypto.so?
15:37             ---|<<-- crawler [~crawler@109.245.201.129] has quit (Ping timeout: 480 seconds)
15:38      JiaTan[m] | I think it should go to libssl.so :)
15:39   sapphyrus[m] | ah shit. well definitely not liblzma.so tho
15:39             ---|<<-- kyub [~kyub@193.32.248.178] has quit (Quit: quitting)
15:40    n0v0cane[m] | Otoh. Good perf improvements are more likely to get looked at and tested
15:45             ---|<<-- steckie [~oftc-webi@p200300f75f0de800fcb95fdfd68082c7.dip0.t-ipconnect.de] has quit (Remote host closed the connection)
15:48             ---|---> mikecmpbll [~mikecmpbl@92.40.189.136.threembb.co.uk] has joined #xz-backdoor-reversing
15:50     Smx2460[m] | Llzma_index_iter_rewind_cold -> check_return_address
15:50     Smx2460[m] |     Checks if the return address has been tampered with. Most of the times, this is at the prologue of the function. If the check fails, the function returns early without doing anything
15:50     Smx2460[m] | just added this note
15:51     Smx2460[m] | the same dasm is used both for hooking and checking the return address
15:54             ---|---> zhli [~zhli@DN2lk437d.stanford.edu] has joined #xz-backdoor-reversing
15:56             ---|<<-- mikecmpbll [~mikecmpbl@92.40.189.136.threembb.co.uk] has quit (Quit: Lost terminal)
16:06    mlkj2141[m] | I'm trying to make it accept either `endbr64` or endbr64 with a breakpoint on the first byte, just because I'm too lazy to move my breakpoints 4 bytes after \U0001f642... (full message at <https://matrix.org/_matrix/media/v3/download/matrix.org/XcXHdMOTSEXOsjkrYXKkfeRS>)
16:06             ---|User: *** mlkj2141[m] is now known as mlkj[m]
16:07        mlkj[m] | * terrible job spilling everything on the stack, even
16:08             ---|<<-- zhli [~zhli@DN2lk437d.stanford.edu] has quit (Quit: zhli)
16:08             ---|---> noisycoil[m] [~noisycoil@2001:470:1af1:101::1:3e0c] has joined #xz-backdoor-reversing
16:09             ---|---> ilmanzo[m] [~ilmanzoma@2001:470:1af1:101::1:4d3d] has joined #xz-backdoor-reversing
16:12             ---|---> trident [~trident@paranoia.trisec.se] has joined #xz-backdoor-reversing
16:13     Smx2460[m] | <mlkj[m]> "* I'm trying to make it accept..." <- it doesn't just check endbr64
16:13     Smx2460[m] | it disassembles the call site
16:13     Smx2460[m] | i am breaking down the x64 disassembler to see exactly what it checks
16:14     Smx2460[m] | it holds a small context with the rex byte, prefixes, opcodes
16:14     Smx2460[m] | and it has several checks
16:14     Smx2460[m] | the reason why it pops up in multiple places is that they reuse this for multiple things
16:14     Smx2460[m] | like
16:14     Smx2460[m] | - checking function patterns for hooking
16:14     Smx2460[m] | - checking for the return address
16:15     Smx2460[m] | * - checking the return address to see if it has been tampered with
16:15             ---|---> _discord_372879766342336512[m] [~discord37@2001:470:1af1:101::1:4d3e] has joined #xz-backdoor-reversing
16:15     Smx2460[m] | many functions are guarded with a call into this system
16:15     Smx2460[m] | if the check fails, the whole function becomes a NOP
16:15     Smx2460[m] | s/NOP/NO-OP/
16:15     Smx2460[m] | which is why it gave me so much hassle in Frida
16:15     Smx2460[m] | Frida re-instruments the code
16:16     Smx2460[m] | making this check fail left and right
16:16     Smx2460[m] | but now that it's clear where the check happens, i could force it to pass
16:16     Smx2460[m] | what i'd like to undersatnd
16:16     Smx2460[m] | is the opcodes it checks
16:16     Smx2460[m] | it stores several bytes of the x64 instruction in a field
16:16        mlkj[m] | I was worried that forcing it to pass might break something, the disasm result struct seems to contain a lot of stuff
16:16     Smx2460[m] | and checks against hthat
16:17     Smx2460[m] | you  cannot modify the core function
16:17     Smx2460[m] | since it's shared
16:17     Smx2460[m] | you need to modify the check itself i think
16:18  scatterflower | they really did not want this thing to show up on dynamic analysis huh
16:21   sapphyrus[m] | Llzma2_decoder_end_1 is used for return address checks too
16:26             ---|---> _discord_537091611323007003[m] [~discord53@2001:470:1af1:101::1:4d40] has joined #xz-backdoor-reversing
16:34     Smx2460[m] | the last argument is an index into the global context
16:34     Smx2460[m] | to avoid checking it twice
16:34     Smx2460[m] | basically
16:34  *   Smx2460[m] sent a c code block: https://matrix.org/_matrix/media/v3/download/matrix.org/wsCNETxeEAkxNlwYeFAKGSij
16:35     Smx2460[m] | so in theory forcing that hook_installed array (which maybe is more like addr_checked)
16:35     Smx2460[m] | could bypass the verification
16:35     Smx2460[m] | but if it's also used for installing hooks, it would break them
16:35     Smx2460[m] | so yeah
16:36     Smx2460[m] | * so yeah needs more investigation
16:38     Smx2460[m] | the other check function also uses it to check if it was tampered
16:38     Smx2460[m] | so actually it's both
16:39     Smx2460[m] | yeah
16:39     Smx2460[m] | * yeah, true
16:39   sapphyrus[m] | ok think its only checked in one place tho, so I guess it would be enough to manually set it to 0x1C8
16:39     Smx2460[m] | you can't break the tamper check without breaking the hooking
16:39     Smx2460[m] | and vice versa
16:41     Smx2460[m] | but this explains why my Frida code was doing nothing
16:41     Smx2460[m] | it was tripping all these checks converting the code into NOP
16:41     Smx2460[m] | * it was tripping all these checks converting most of the calls into no-ops
16:41             ---|---> mikecmpb1l [~mikecmpbl@92.40.189.134.threembb.co.uk] has joined #xz-backdoor-reversing
16:57             ---|<<-- lukka [~lucca@ip-193-53-104-44.changeis.iunxi.net] has quit (Remote host closed the connection)
16:57             ---|---> lukka [~lucca@ip-193-53-104-44.changeis.iunxi.net] has joined #xz-backdoor-reversing
17:03             ---|---> _discord_721925521784701091[m] [~discord72@2001:470:1af1:101::1:4d42] has joined #xz-backdoor-reversing
17:09  * sapphyrus[m] uploaded an image: (11KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/7baff870a2a25f86ccf6063ae77eb184ec2d64db1774952316080750592/zhFuiRBz9U.png >
17:09   sapphyrus[m] | this smells like RIP-relative address resolving to me? so Llzma_optimum_normal_0 disassembles until it finds an instruction with operand = a3
17:21     Smx2460[m] | the import resolution is the most stealth thing ever
17:22     Smx2460[m] | it gets a pointer to `lzma_allocator` by using a variable, which i called "accessor", on the global data
17:22     Smx2460[m] | and negating its GOT offset manually
17:22     Smx2460[m] | then it calls the lzma allocator, which passes the import name as the  size value
17:23     Smx2460[m] | * then it calls the lzma allocator, which passes the import name as the  size value, as the string id/idx
17:23             ---|<<-- Apachez [~Apachez@hatersgonnahate.apachez.net] has quit (Quit: Leaving)
17:25             ---|---> _discord_987408908672962650[m] [~discord98@2001:470:1af1:101::1:4d43] has joined #xz-backdoor-reversing
17:31    rlrevell[m] | one's a pgp key the other an ssh pubkey
17:31    rlrevell[m] | i have no idea what if anything the gpg key was used for
17:32             ---|<<-- mikecmpb1l [~mikecmpbl@92.40.189.134.threembb.co.uk] has quit (Ping timeout: 480 seconds)
17:36             ---|---> ran38277 [~oftc-webi@2600:1700:4480:895f::d] has joined #xz-backdoor-reversing
17:38             ---|---> Apachez [~Apachez@hatersgonnahate.apachez.net] has joined #xz-backdoor-reversing
17:38             ---|---> crawler [~crawler@109.245.201.129] has joined #xz-backdoor-reversing
17:47             ---|---> mikecmpb1l [~mikecmpbl@92.40.189.134.threembb.co.uk] has joined #xz-backdoor-reversing
18:05             ---|<<-- pobrn [~pb@81.16.206.163.nat.pool.zt.hu] has quit (Ping timeout: 480 seconds)
18:26             ---|---> _discord_840814489875251230[m] [~discord84@2001:470:1af1:101::1:4d44] has joined #xz-backdoor-reversing
18:43             ---|<<-- lukka [~lucca@ip-193-53-104-44.changeis.iunxi.net] has quit (Ping timeout: 480 seconds)
18:45             ---|<<-- r2rien [~me@abordeaux-653-1-47-108.w90-11.abo.wanadoo.fr] has quit (Quit: Quit)
18:45             ---|User: *** _discord_518944568302108712[m] is now known as locknessko[m]
18:45  locknessko[m] | Where is the command (passed to `system`) decoded from? If it involves calls to external libraries that would be useful since I'm trying to hook stuff with bpftrace.
18:50             ---|<<-- mikecmpb1l [~mikecmpbl@92.40.189.134.threembb.co.uk] has quit (Ping timeout: 480 seconds)
18:59             ---|<<-- crawler [~crawler@109.245.201.129] has quit (Ping timeout: 480 seconds)
19:22             ---|<<-- ran38277 [~oftc-webi@2600:1700:4480:895f::d] has quit (Remote host closed the connection)
19:42             ---|User: *** _discord_609041026644049945[m] is now known as wtznc[m]
20:02             ---|Channel: mode/#xz-backdoor-reversing [+b *!*@131.255.226.135] by wrc
20:05  grandpacanary | <Smx2460[m]> "* then it calls the lzma..." <- this is like the ppl who build a virtual TTL computer in minecraft
20:08             ---|---> skolliets0[m] [~discord35@2001:470:1af1:101::1:4d47] has joined #xz-backdoor-reversing
20:08  skolliets0[m] | is it possible this was a single person?
20:08  skolliets0[m] | or is that ruled out at this point
20:09 @          wrc | skolliets0[m]: #xz-backdoor-chat <-
20:16             ---|User: *** __rand0m__0[m] is now known as __rand0m__[m]
20:29      JiaTan[m] | <mlkj[m]> "* I'm trying to make it accept..." <- just use hw breakpoint
20:32      JiaTan[m] | <locknessko[m]> "Where is the command (passed to..." <- RSA public modulus
20:34  locknessko[m] | does it use an external library to decode the rsa key?
20:35  locknessko[m] | * rsa key? (is there a function I can hook where one of the arguments is a pointer to the rsa public modulus)
20:39             ---|---> _discord_730515791749054514[m] [~discord73@2001:470:1af1:101::1:4d49] has joined #xz-backdoor-reversing
20:43  _discord_5905 | hello guy, I have source code of xz 5.6.1, what files can I start to reverse
20:43             ---|User: *** _discord_590560372143030272[m] is now known as lu3ibi3n[m]
20:54      JiaTan[m] | <locknessko[m]> "does it use an external library..." <- it uses openssl so BN_bn2bin. you could also hook EVP_DecryptUpdate for the decryption stage. in both cases you'd want to make sure to only log calls coming from liblzma. or you could try the openssh patch <https://github.com/amlweems/xzbot/blob/main/openssh.patch> if you're trying to make a honeypot
20:55  locknessko[m] | Thank you \U0001f60e
21:14     dumpx86[m] | Did anyone share any idb or list of structs/function signatures
21:18  locknessko[m] | https://github.com/hamarituc/xz-backdoor/
21:18  locknessko[m] | dumpx86[m]: https://github.com/hamarituc/xz-backdoor/
21:21  Robert0004[m] | Jia Tan (@_discord_462063727655649290:t2bot.io) are you a jia impersonator of some kind
21:25             ---|<<-- konomi [~konomi@00020287.user.oftc.net] has quit (Quit: konomi)
21:27             ---|---> konomi [~konomi@00020287.user.oftc.net] has joined #xz-backdoor-reversing
21:38             ---|---> steckie [~oftc-webi@p200300f75f0de800fcb95fdfd68082c7.dip0.t-ipconnect.de] has joined #xz-backdoor-reversing
21:39             ---|User: *** _discord_1121266414205030480[m is now known as valeriifj[m]
21:41             ---|---> anlsh[m] [~discord59@2001:470:1af1:101::1:4d4c] has joined #xz-backdoor-reversing
21:59             ---|---> audeuro0[m] [~discor_51@2001:470:1af1:101::1:4d4f] has joined #xz-backdoor-reversing
22:16             ---|<--- szopin[m] [~szopinmat@2001:470:1af1:101::1:4c2a] has left #xz-backdoor-reversing ()
22:18             ---|---> crawler [~crawler@109.245.201.129] has joined #xz-backdoor-reversing
22:24             ---|---> recoup3948[m] [~recoup394@2001:470:1af1:101::1:2f85] has joined #xz-backdoor-reversing
22:25             ---|<<-- offtopic [sid636544@id-636544.helmsley.irccloud.com] has quit (autokilled: This host violated network policy. Mail support@oftc.net if you think this is in error. (2024-04-02 05:25:46))
22:37  cl0pinette[m] | fron what I read here https://twitter.com/bl4sty/status/1774833599260381624
22:37  cl0pinette[m] | the dasm function gather bita fron instruction to recreate the ed448 key
22:37  cl0pinette[m] | s/bita/bits/, s/fron/from/
22:40             ---|<<-- steckie [~oftc-webi@p200300f75f0de800fcb95fdfd68082c7.dip0.t-ipconnect.de] has quit (Remote host closed the connection)
22:43             ---|---> arraybolt3 [~arraybolt@172.59.231.137] has joined #xz-backdoor-reversing
22:43             ---|---> _discord_1224268562139578390[m [~discor_51@2001:470:1af1:101::1:4d50] has joined #xz-backdoor-reversing
22:43  _discord_1224 | It makes me think of https://github.com/woodruffw/steg86
22:47       aciid[m] | But that is just one implementation, its a complete science on its own and theres lots of research behind it for espionage.\u00a0
22:49             ---|<<-- arraybolt3_ [~arraybolt@172.59.224.104] has quit (Ping timeout: 480 seconds)
22:49      laanwj[m] | that was an interesting choice, especially how it could work as a tamper protection mechanism at the same time (no idea if it does)
22:55             ---|---> midou [~midou@sl.projectsegfau.lt] has joined #xz-backdoor-reversing
23:04      laanwj[m] | for this backdoor, a one-bit change in the key is as effective as a kill switch
23:07             ---|<<-- crawler [~crawler@109.245.201.129] has quit (Ping timeout: 480 seconds)
23:07             ---|<<-- monitor456 [~monitor45@4JHAAAMSU.tor-irc.dnsbl.oftc.net] has quit (Ping timeout: 480 seconds)
23:18             ---|---> crawler [~crawler@109.245.201.129] has joined #xz-backdoor-reversing
23:19             ---|<<-- crawler [~crawler@109.245.201.129] has quit (Remote host closed the connection)
23:30      laanwj[m] | hashing or checksumming the code and comparing to a fixed output might be too obvious, hashing and using the output as a key wouldn't work (it has to be the pubkey for a known ed448 private key, and derivation only goes one way), and besides, they already had a x86 disassembler for the hooking...
23:34       anlsh[m] | <_discord_593081254962921473[m]> "Hoped that it also documented..." <- smx2460 (@_discord_310158180728700929:t2bot.io) any reference/analysis/mention of this online that I can get more details from?
23:35      laanwj[m] | they really hate debuggers and dynamic instrumentation with a passion :)
23:39      JiaTan[m] | really, it seems pretty poor to me
23:40      JiaTan[m] | you can just attach gdb and start shoving hw breakpoints into it
23:40      JiaTan[m] | i also ran it under qiling and seemed to get pretty far
23:45             ---|---> crawler [~crawler@109.245.201.129] has joined #xz-backdoor-reversing
23:54     brlintw[m] | Hello, is there any existing step-by-step tutorial to extract the payload from the original upstream tarball?  I would like to write one but it probably already existed and don't want to rebuild the wheel...
23:55     brlintw[m] | * write one (https://hackmd.io/@cve-2024-3094/how-to-extract-the-malware-payload) but it, * existed and I don't want
23:55     brlintw[m] | * Hello, is there any existing step-by-step tutorial to extract the payload from the original upstream tarball?  I am going to write one (https://hackmd.io/@cve-2024-3094/how-to-extract-the-malware-payload) but it probably already existed and I don't want to rebuild the wheel...
23:55     brlintw[m] | * Hello, is there any existing step-by-step tutorial to extract the payload(*.o) from the original upstream tarball?  I am going to write one (https://hackmd.io/@cve-2024-3094/how-to-extract-the-malware-payload) but it probably already existed and I don't want to rebuild the wheel...
23:56             ---|---> _discord_1110431896975974440[m [~discor_52@2001:470:1af1:101::1:4d54] has joined #xz-backdoor-reversing
23:56  _discord_1110 | https://github.com/0xlane/xz-cve-2024-3094
23:58     brlintw[m] | _discord_1110431896975974440[m: Thanks!
--- Day changed Tue Apr 02 2024
00:21             ---|---> Matthew[m]123 [~matthewma@2001:470:1af1:101::5e76] has joined #xz-backdoor-reversing
00:26             ---|---> mikecmpbll [~mikecmpbl@92.40.189.143.threembb.co.uk] has joined #xz-backdoor-reversing
01:10             ---|<--- Stephan[m]12 [~stephanps@2001:470:1af1:101::1:4bd3] has left #xz-backdoor-reversing ()
01:14      foosec[m] | Any new findings?
01:24             ---|---> _discord_1010447247332348014[m [~discor_52@2001:470:1af1:101::1:4d57] has joined #xz-backdoor-reversing
01:24  _discord_1010 | how to exploit this?
01:31             ---|<<-- arraybolt3 [~arraybolt@172.59.231.137] has quit (Remote host closed the connection)
01:37             ---|<<-- mikecmpbll [~mikecmpbl@92.40.189.143.threembb.co.uk] has quit (Quit: leaving)
01:42             ---|---> r2rien [~me@37.166.198.154] has joined #xz-backdoor-reversing
01:48             ---|---> loki_val [~crabbedha@0002b59f.user.oftc.net] has joined #xz-backdoor-reversing
01:52             ---|---> flyingcakes[m] [~flyingcak@2001:470:1af1:101::1:4d59] has joined #xz-backdoor-reversing
01:57  scatterflower | <_discord_1010447247332348014[m> "how to exploit this?" <- simply break ed448
02:09             ---|<<-- bauen1 [~bauen1|@ppp-212-114-180-66.dynamic.mnet-online.de] has quit (Ping timeout: 480 seconds)
02:16             ---|---> _discord_488270546824331284[m] [~discor_52@2001:470:1af1:101::1:4d5d] has joined #xz-backdoor-reversing
02:16             ---|---> _discord_1206623027706728479[m [~discor_52@2001:470:1af1:101::1:4d5e] has joined #xz-backdoor-reversing
02:18       aciid[m] | <_discord_1010447247332348014[m> "how to exploit this?" <- why
02:23      laanwj[m] | ha in the 5.6.0 version of the backdoor it looks like they accidentally were too enthusiastic in stripping sections and stripped the .note.gnu.property section, likely causing the resulting shared object to not have IBT and SHSTK enabled (so a drop in security features), in 5.6.1 that's added
02:25      laanwj[m] | that is something that could have attracted attention
02:48    julianor[m] | <laanwj[m]> "they really hate debuggers and..." <- and they love open source collaboration!. The steganographic technique to hide the pub key is really interesting.
02:54  _discord_2650 | <julianor[m]> "and they love open source..." <- Do you know where the relevant code for this is in the decompiled code?
02:54  _discord_2650 | Does it do smth similar to https://github.com/woodruffw/steg86 ?
02:58             ---|User: *** _discord_1134759629084168253[m is now known as neobyte3096[m]
03:02             ---|---> _discord_705788484475944960[m] [~discord70@2001:470:1af1:101::1:4d60] has joined #xz-backdoor-reversing
03:10             ---|<<-- konomi [~konomi@00020287.user.oftc.net] has quit (Quit: konomi)
03:11             ---|---> bauen1 [~bauen1|@dhcp-138-246-3-245.dynamic.eduroam.mwn.de] has joined #xz-backdoor-reversing
03:12             ---|---> konomi [~konomi@00020287.user.oftc.net] has joined #xz-backdoor-reversing
03:28             ---|---> oles [~oles@188.81-167-68.customer.lyse.net] has joined #xz-backdoor-reversing
03:36 @           js | Slightly OT, but people are using the Fedora RPM for reversing I think. Is it the xz-libs package?
03:37 @           js | Also, I'm wondering if the backdoor is in https://kojipkgs.fedoraproject.org//packages/xz/5.6.0/3.fc40/x86_64/xz-libs-5.6.0-3.fc40.x86_64.rpm or not \U0001f615
03:37 @           js | (that one I had installed! Ugh(
03:37 @           js | s/(/)/
03:41             ---|<<-- r2rien [~me@37.166.198.154] has quit (Ping timeout: 480 seconds)
03:56             ---|---> kailueke[m] [~pothosmat@2001:470:1af1:101::70ee] has joined #xz-backdoor-reversing
04:00  locknessko[m] | <js> "Also, I'm wondering if the..." <- It's in here: https://kojipkgs.fedoraproject.org/packages/xz/5.6.1/1.fc41/x86_64/xz-libs-5.6.1-1.fc41.x86_64.rpm
04:00  locknessko[m] | I'm using it in <https://github.com/lockness-Ko/xz-vulnerable-honeypot>
04:01             ---|---> r2rien [~me@37.166.198.154] has joined #xz-backdoor-reversing
04:04  locknessko[m] | this one's cool btw, it has a poc based off the ed448 key and a honeypot that doesn't run the commands lol: https://github.com/amlweems/xzbot
04:19             ---|---> arraybolt3 [~arraybolt@2607:fb91:1126:8f6b:6faa:c39e:a243:6b40] has joined #xz-backdoor-reversing
04:19             ---|User: *** _discord_846831849807544380[m] is now known as irq0_[m]
04:20 @           js | <locknessko[m]> "It's in here: https://kojipkgs...." <- > <@_discord_518944568302108712:t2bot.io> It's in here: https://kojipkgs.fedoraproject.org/packages/xz/5.6.1/1.fc41/x86_64/xz-libs-5.6.1-1.fc41.x86_64.rpm
04:20 @           js | > I'm using it in <https://github.com/lockness-Ko/xz-vulnerable-honeypot>
04:20 @           js | Would you know of a good way to check if it's also in the RPM I linked? I'm interested because I had that one installed \U0001f615
04:20             ---|---> mattxcloud[m] [~discord13@2001:470:1af1:101::1:4d63] has joined #xz-backdoor-reversing
04:21             ---|---> pandaany[m] [~pandagrey@2001:470:1af1:101::1:4d64] has joined #xz-backdoor-reversing
04:25  * locknessko[m uploaded an image: (54KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/93a5426a0a919bc2bbf0075fdef6c16d4fda78c51775122403014213632/image.png >
04:25  locknessko[m] | maybe not?
04:25  locknessko[m] | I'm probably wrong
04:27             ---|---> heap_groomer[m] [~discor_52@2001:470:1af1:101::1:4d65] has joined #xz-backdoor-reversing
04:27  heap_groomer[ | <js> "> <@_discord_518944568302108712..." <- I would say yes.
04:27  heap_groomer[ | It\u2019s confirmed to be in Fedora 40 Beta, both 5.6.0 and 5.6.1 xz-libraries
04:27  locknessko[m] | what he said ^
04:37             ---|<<-- loki_val [~crabbedha@0002b59f.user.oftc.net] has quit ()
04:39             ---|---> crabbedhaloablut [~crabbedha@0002b59f.user.oftc.net] has joined #xz-backdoor-reversing
04:47             ---|---> lukka [~lucca@ip-193-53-104-44.changeis.iunxi.net] has joined #xz-backdoor-reversing
04:50             ---|<<-- mocatta [~oftc-webi@193.221.134.162] has quit (Remote host closed the connection)
05:03  _cra2yman_[m] | After 1 day reverse
05:03  _cra2yman_[m] | command 0x0 --> maybe hook mm_answer_authpassword
05:04  _cra2yman_[m] | before that it has some check....
05:10             ---|<<-- lukka [~lucca@ip-193-53-104-44.changeis.iunxi.net] has quit (Ping timeout: 480 seconds)
05:36             ---|User: *** _discord_875091663368884284[m] is now known as azedo7314[m]
05:41             ---|---> steckie [~oftc-webi@p200300f75f0de800fcb95fdfd68082c7.dip0.t-ipconnect.de] has joined #xz-backdoor-reversing
05:41             ---|---> wmoh [~wmoh@38.32.73.2] has joined #xz-backdoor-reversing
05:49             ---|---> FLuX[m]12 [~x8x-55740@2001:470:1af1:101::1:4d69] has joined #xz-backdoor-reversing
06:07             ---|---> flyingcakes[m]1 [~discor_52@2001:470:1af1:101::1:4d6b] has joined #xz-backdoor-reversing
06:15             ---|---> lambda314[m] [~discor_52@2001:470:1af1:101::1:4d6c] has joined #xz-backdoor-reversing
06:15   lambda314[m] | Hi everyone, as I usually work with Rust, I could later today look into the wasmtime fork.
06:27             ---|<--- sgm [~sgm@00030768.user.oftc.net] has left #xz-backdoor-reversing ()
06:33             ---|<<-- dutch [~dutchingr@00028048.user.oftc.net] has quit (Quit: WeeChat 4.2.1)
06:38             ---|---> BillOHanlon[m] [~wmohanlon@2001:470:1af1:101::1:4d70] has joined #xz-backdoor-reversing
06:39             ---|<--- wmoh [~wmoh@38.32.73.2] has left #xz-backdoor-reversing ()
06:39             ---|<<-- steckie [~oftc-webi@p200300f75f0de800fcb95fdfd68082c7.dip0.t-ipconnect.de] has quit (Remote host closed the connection)
06:52             ---|<<-- r2rien [~me@37.166.198.154] has quit (Ping timeout: 480 seconds)
07:00             ---|---> dutch [~dutchingr@00028048.user.oftc.net] has joined #xz-backdoor-reversing
07:07             ---|---> pobrn [~pb@81.16.206.163.nat.pool.zt.hu] has joined #xz-backdoor-reversing
07:10     dumpx86[m] | For the dynamic setup / testing, are ya\u2019ll using a specific VM on host? or something on cloud?
07:10     dumpx86[m] | I need some pointers on how would I go on setting up a dynamic testing environment without the risks
07:11             ---|---> r2rien [~me@37.166.198.34] has joined #xz-backdoor-reversing
07:11  cl0pinette[m] | kvm + debian,network bridge to a virtual bridge on my host. and disabling all network leaving from this bridge
07:13     dumpx86[m] | cl0pinette[m]: I\u2019m on mac m1
07:13     dumpx86[m] | Would that work ?
07:14     dumpx86[m] | I do have a windows machine as well.
07:14  cl0pinette[m] | yep could work, try using utm
07:14  cl0pinette[m] | as the app to create the vm
07:22      obfusk[m] | <js> "Also, I'm wondering if the..." <- oddly -3 isn't mentioned here at all (only -1 and -2): https://www.redhat.com/en/blog/urgent-security-alert-fedora-41-and-rawhide-users
07:23             ---|<<-- r2rien [~me@37.166.198.34] has quit (Ping timeout: 480 seconds)
07:25 @           js | obfusk[m]: Not so oddly, -3 was supposed to disable ifunc, I wasn't sure if they actually disabled it correctly so the backdoor didn't trigger
07:27      JiaTan[m] | <dumpx86[m]> "For the dynamic setup / testing,..." <- ubuntu lts on virtualbox
07:47             ---|---> _discord_410707066466861067[m] [~discord41@2001:470:1af1:101::1:4d75] has joined #xz-backdoor-reversing
07:49             ---|---> frgl[m] [~frglmatri@2001:470:1af1:101::1:3930] has joined #xz-backdoor-reversing
07:57  grandpacanary | Jia nuking landlock and forgetting to clean that up and make that option work again... there was no purpose for that other than running out of time and "lets kill it b/c it might be fucking up the offset math", yeah?     He's statically linked into `systemd` and gets initted before anything in Lasse's original `file_io.c` is even used.  I'm guessing that he nuked it because all the difficulty integrating the `.o` he
07:57  grandpacanary | just swatted the sandbox option and forgot to go back and clean that up or ran out of time.
07:57             ---|---> _discord_603157538245967873[m] [~discord60@2001:470:1af1:101::1:4d76] has joined #xz-backdoor-reversing
07:58             ---|User: *** _discord_603157538245967873[m] is now known as marinaa_n[m]
07:59  grandpacanary | * Jia nuking landlock and forgetting to clean that up and make that option work again... there was no purpose for that other than running out of time and "lets kill it b/c it might be fucking up the offset math", yeah?     He's statically linked into `systemd` and gets initted before anything in Lasse's original `file_io.c` is even used.  I'm guessing that he nuked it because all the difficulty integrating the `.o` he
07:59  grandpacanary | just swatted the sandbox option---that would not have impeded him anyway?
08:03             ---|---> Mooncairn [~mooncairn@0002c5b1.user.oftc.net] has joined #xz-backdoor-reversing
08:08      obfusk[m] | <js> "Not so oddly, -3 was supposed to..." <- yeah, I just meant that seems like information they'd want to provide so people with that version aren't left to wonder.
08:09 @           js | <grandpacanary[m]> "Jia nuking landlock and forgetti..." <- I think the Landlock was in xz, not in liblzma
08:13   valeriifj[m] | js: And also he made it not working  by brraking CMake!
08:13   valeriifj[m] | s/brraking/breaking/
08:15             ---|<<-- sam_ [~sam@000228b9.user.oftc.net] has quit (Quit: ZNC - http://znc.in)
08:18             ---|---> sam_ [~sam@000228b9.user.oftc.net] has joined #xz-backdoor-reversing
08:23             ---|---> zhli [~zhli@DN2lk43ab.stanford.edu] has joined #xz-backdoor-reversing
08:25  tyrheimdal[m] | Breaking it with just adding the dot was one of the more clever things.
08:26             ---|---> Ashiudo [Ashiudo@2607:5300:60:2b61::9] has joined #xz-backdoor-reversing
08:34  grandpacanary | <js> "I think the Landlock was in xz..." <- so that tarnishes the beauty of Jia-Genius.   That was sloppy.
08:34             ---|<<-- krushia [~krushia@h134-215-110-193.cntcnh.broadband.dynamic.tds.net] has quit (Quit: Konversation terminated!)
08:41  grandpacanary | <valeriifj[m]> "* And also he made it not..." <- clever in display yes but not in the context of planning/goals
08:52             ---|User: *** _discord_872248967688224768[m] is now known as cottontailfan[m]
08:54             ---|<<-- zhli [~zhli@DN2lk43ab.stanford.edu] has quit (Quit: zhli)
09:01             ---|---> Otterlord3653[m] [~discord71@2001:470:1af1:101::1:4d79] has joined #xz-backdoor-reversing
09:01             ---|User: *** Otterlord3653[m] is now known as otterlorddev[m]
09:08             ---|<<-- bauen1 [~bauen1|@dhcp-138-246-3-245.dynamic.eduroam.mwn.de] has quit (Ping timeout: 480 seconds)
09:11             ---|---> _discord_291145841723441152[m] [~discor_53@2001:470:1af1:101::1:4d7b] has joined #xz-backdoor-reversing
09:12             ---|---> _discord_1168169983919009825[m [~discord11@2001:470:1af1:101::1:4d7c] has joined #xz-backdoor-reversing
09:26 @           js | <grandpacanary[m]> "so that tarnishes the beauty..." <- It wasn't. I think this was very planned. First disable Capsicum, then Landlock. He has 750 commits in XZ, he probably found a 0 day that he wants to use. I would be really careful extract .xz files from now on.
09:27             ---|---> monitor456 [~monitor45@5PUAAANG4.tor-irc.dnsbl.oftc.net] has joined #xz-backdoor-reversing
09:28  ratchetfreak[ | they were creating a zero day
09:28 @           js | I doubt you need to create one.
09:28  _discord_1224 | <_discord_265096437937864705[m]> "Do you know where the relevant..." <- Unlikely , this is a step that needs to be executed post comilation of the binary
09:28  ratchetfreak[ | it's literally what a undiscovered backdoor is, a zero day vulnerability
09:28 @           js | This is compression code. Code like this usually does insane things such as read over the end of the buffer (as long as it doesn't wrap a page) for performance optimizations.
09:29 @           js | I implemented my own DEFLATE without such tricks - and it was 2x slower than zlib
09:29             ---|<<-- Mooncairn [~mooncairn@0002c5b1.user.oftc.net] has quit (Quit: Leaving)
09:29  *           js prefers safe DEFLATE over fast DEFLATE
09:30             ---|---> _discord_1012693876739424298[m [~discor_53@2001:470:1af1:101::1:4d7e] has joined #xz-backdoor-reversing
09:30  ratchetfreak[ | that why you pad the buffer, that way you can read past the end
09:30 @           js | ratchetfreak: that would require copying the buffer first. These things work by providing them a pointer and size to read from.
09:31 @           js | Just read some zlib code if you want to be horrified. And then think that LZMA is several times more complex than DEFLATE.
09:32 @           js | sigh I probably have to implement my own slow LZMA without any dirty hacks to make it faster now\u2026
09:32 @           js | I guess I won't be convincing everybody to switch to zstd
09:33  ratchetfreak[ | you can keep most of the speed by checking the max overread between bounds checks and diminishing the buffer in the fast path by that much then dealing with the tail the slower way
09:33  stan423321[m] | I mean, people who did switch from xz and lzma to zstd in the past did so 'cause it is faster
09:34  stan423321[m] | does that mean looking for a zero-day there is a better idea?
09:34 @           js | ratchetfreak: https://objfw.nil.im/file?ci=trunk&name=src/OFHuffmanTree.h&ln=36-53 how to walk a huffman tree slowly, but in very readable code \U0001f609
09:35  stan423321[m] | I've seen fast and safe huffman tree code before
09:35  stan423321[m] | but there was a price
09:35  stan423321[m] | a terribly huge array
09:35  ratchetfreak[ | at least do it per byte
09:37  ratchetfreak[ | and you can do a bit reader interface that can pad out zeros without reading past the end of the buffer
09:38             ---|---> _discord_335750831146270721[m] [~discord33@2001:470:1af1:101::1:4d7f] has joined #xz-backdoor-reversing
09:38             ---|User: *** _discord_335750831146270721[m] is now known as idkbruhpancakes[m]
09:40 @           js | ratchetfreak[m]: It does so. The bit reader reads more than 1 bit and writes the rest to a variable
09:40  ratchetfreak[ | I meant the tree walk
09:42 @           js | wdym? the bit reader can return up to 16 bits at once (depending on how many are available, as it's streaming)
09:42 @           js | oh, I see what you mean
09:42 @           js | you mean the loop \U0001f642
09:43 @           js | but then I would read more bits than I need - that's exactly the overreading I meant
09:43 @           js | I don't know for how long the current symbol continues
09:43 @           js | might be 1 bit, might be 16
09:43             ---|---> steckie [~oftc-webi@p200300f75f0de800fd2c00bfdd144356.dip0.t-ipconnect.de] has joined #xz-backdoor-reversing
09:43 @           js | I guess I could extend it to have an "unread" function that returns unused bits
09:44 @           js | returns as in "gives back"
09:45             ---|---> _discord_1224393989030154363[m [~discor_53@2001:470:1af1:101::1:4d80] has joined #xz-backdoor-reversing
09:45  _discord_2650 | <_discord_1224268562139578390[m> "Unlikely , this is a step that..." <- How did people figure out that it's reading the instructions to get the public key?
09:46  ratchetfreak[ | have 256 sized array in the tree and add a `int advance`
09:46  ratchetfreak[ | then you construct the tree such that tokens of with remaining size <8 get duplicated pow(2, 8-token size) in the table (that means that token `0b1010101` gets indices `0b10101010` and `0b10101011` in the table) and then in the loop you do a peek bits that will pad out with zeros or garbage when end of stream
09:50  _discord_1224 | <_discord_265096437937864705[m]> "How did people figure out that..." <- No idea but seems like they found that is disassembling code and extracting info from the assembly code
09:52             ---|---> bauen1 [~bauen1|@ppp-212-114-180-66.dynamic.mnet-online.de] has joined #xz-backdoor-reversing
09:54     Smx2460[m] | <anlsh[m]> "smx2460 (@_discord_3101581807287..." <- planned
09:56     Smx2460[m] | <_discord_593081254962921473[m]> "* iiuc there's no AES, chacha..." <- sorry yeah, it's chacha20
09:56             ---|---> Mooncairn [~mooncairn@0002c5b1.user.oftc.net] has joined #xz-backdoor-reversing
09:56     Smx2460[m] | i'm not sure it's generated from x64 code though
09:58        Ashiudo | I noticed beginning in late feb/early march that the package compression for brave/chrome was taking a lot longer than normal while installing from AUR (it would compress it using xz). so much so I changed my package.config to just .tar instead of .tar.xz because I was annoyed. Anyway I'm not sure if it's related at all but hopefully someone with more expertise is looking into this vector
10:03             ---|---> dwaris[m] [~discor_53@2001:470:1af1:101::1:4d81] has joined #xz-backdoor-reversing
10:03  *   Smx2460[m] sent a c code block: https://matrix.org/_matrix/media/v3/download/matrix.org/yhGZTDwEMzyWFqvPexxVQHWK
10:04     Smx2460[m] | about the disassembler
10:04     Smx2460[m] | i'll relink the `.o` file with my own program
10:04     Smx2460[m] | to test it
10:04     Smx2460[m] | basically embedding the backdoor into my own tool \U0001f642
10:04     Smx2460[m] | then calling its own code
10:11  oachkatzloars | smx2460 (@_discord_310158180728700929:t2bot.io) Any idea what kind of error message (if any) an attempt on a non-backdoored sshd would leave?
10:12  stan423321[m] | not smx, but probably something like "wrong key" or "malformed key"
10:13  stan423321[m] | or just "auth failed"
10:35             ---|---> _discord_309149861893373953[m] [~discor_53@2001:470:1af1:101::1:4d83] has joined #xz-backdoor-reversing
10:41        tty6[m] | Apr 02 19:41:03 example.com sshd[307492]: error: userauth_pubkey: parse key: error in libcrypto [preauth]
10:41        tty6[m] | Apr 02 19:41:03 example.com sshd[307492]: Connection closed by authenticating user root 192.168.178.21 port 40766 [preauth]
10:42        tty6[m] | actually interesting, error in libcrypto is untypical in logs
10:43        tty6[m] | s//`/, s/178/0/, s//`/
10:44         sjw[m] | <Ashiudo> "I noticed beginning in late feb..." <- AUR changed its default to include debug symbols earlier this year </ot>
10:46         sjw[m] | <js> "It wasn't. I think this was very..." <- cmake is supposed to replace autotools at some point. I bet they were already preparing for this. We already know from the `grep` pattern that they prepared the repo for future payloads.
10:46      laanwj[m] | that's not the error that i expected, it implies that the key is incorrectly formatted, instead of just unknown
10:48        tty6[m] | that's what https://github.com/amlweems/xzbot produces
10:49      laanwj[m] | good point, it may be that that tool takes some shortcut, its point is making sure that the backdoor parses it,  not making sure it's stealthy enough to look like a real valid key
10:50             ---|---> M0x1S0L33T3151[m] [~discor_53@2001:470:1af1:101::1:4d84] has joined #xz-backdoor-reversing
10:50             ---|User: *** M0x1S0L33T3151[m] is now known as usrunixity[m]
10:51  stan423321[m] | laanwj[m]: the non-symmetric keys apparently tend to have quite complex formatting, so given the command in key, it makes sense to me
10:51  stan423321[m] | well, complex. maybe tigid is a more applicable word
10:52  stan423321[m] | s/tigid/rigid/
10:55        Ashiudo | ok, that would make sense if it had all the debug symbols to compress, hopefully that's all it was. thank you sjw
10:55      laanwj[m] | i would imagine that the author's rce frontend tool does go the extra mile to make it conform to that rigid structure, to avoid a "dirty" error like this, assuming it's avoidable
11:06             ---|---> yau_ [~user@4G4AAHCSF.tor-irc.dnsbl.oftc.net] has joined #xz-backdoor-reversing
11:07             ---|---> _discord_1036351329905418240[m [~discor_54@2001:470:1af1:101::1:4d85] has joined #xz-backdoor-reversing
11:13  stan423321[m] | that's an interesting question
11:14             ---|---> r2rien [~me@abordeaux-653-1-47-108.w90-11.abo.wanadoo.fr] has joined #xz-backdoor-reversing
11:16             ---|<<-- yau_ [~user@4G4AAHCSF.tor-irc.dnsbl.oftc.net] has quit (Remote host closed the connection)
11:22             ---|---> yau_ [~user@9O6AAA8BB.tor-irc.dnsbl.oftc.net] has joined #xz-backdoor-reversing
11:22             ---|<<-- mphi [~mphi@pd9e15fd7.dip0.t-ipconnect.de] has quit (Quit: WeeChat 4.2.1)
11:23             ---|---> falsifiability [~mphi@pd9e15fd7.dip0.t-ipconnect.de] has joined #xz-backdoor-reversing
11:31             ---|<<-- yau_ [~user@9O6AAA8BB.tor-irc.dnsbl.oftc.net] has quit (Remote host closed the connection)
11:43             ---|---> otterlord [~otterlord@2a00:23c6:8a00:7201:3a76:689a:bad:96bc] has joined #xz-backdoor-reversing
11:51             ---|<<-- steckie [~oftc-webi@p200300f75f0de800fd2c00bfdd144356.dip0.t-ipconnect.de] has quit (Remote host closed the connection)
11:51             ---|<<-- otterlord [~otterlord@2a00:23c6:8a00:7201:3a76:689a:bad:96bc] has quit (Quit: WeeChat 4.2.1)
11:51             ---|---> otterlord [~otterlord@2a00:23c6:8a00:7201:3a76:689a:bad:96bc] has joined #xz-backdoor-reversing
11:52             ---|<<-- otterlord [~otterlord@2a00:23c6:8a00:7201:3a76:689a:bad:96bc] has quit ()
11:55     num0005[m] | <stan423321[m]> "not smx, but probably something..." <- I don't think the key would be detected as malformed (or could be even)
11:56  stan423321[m] | well it apparently was!
11:56     num0005[m] | what was the error message?
11:57  stan423321[m] | <tty6[m]> "* Apr 02 19:41:03 example.com..." <- ...
12:03     num0005[m] | <stan423321[m]> "..." <- what sort of key did you use?
12:03     num0005[m] | RSA?
12:03     num0005[m] | I presume RSA
12:03     num0005[m] | I wonder how n can be invalid for an RSA key
12:03  grandpacanary | oh duh... why didn't I think of this.   Jia nuked sandbox because much of the time he's just using `xz` as the launch.   That's only in the C program not the lib, but he needs it turned off when launching it in the IDE
12:04  grandpacanary | he absolutely did forget to clean that up
12:05     num0005[m] | looks like this call would fail?
12:05     num0005[m] | https://github.com/openssh/openssh-portable/blob/43e7c1c07cf6aae7f4394ca8ae91a3efc46514e2/ssh-rsa.c#L197C7-L197C19
12:05     num0005[m] | or maybe sshkey_check_rsa_length
12:05     num0005[m] | are those patched by the exploit?
12:07  grandpacanary | he's got a vm over on the side to confirm the expoit, but day to day he's on another one or even on daily driver launching from `xz`, then a local pull+start script on his eval vm and checking that the dasm looks sufficently crazy looking at it from both.
12:07     num0005[m] | okay I don't see how RSA_set0_key would fail
12:08     num0005[m] | maybe the exploit payload is too small
12:08  *   num0005[m] sent a c code block: https://matrix.org/_matrix/media/v3/download/matrix.org/FGRhnyljqhVoGccFwutohQwd
12:08     num0005[m] | SSH_RSA_MINIMUM_MODULUS_SIZE 1024
12:11     num0005[m] | huh no cause the payload is 2048 bit
12:12  grandpacanary | <grandpacanary[m]> "oh duh... why didn't I think..." <- midar3 (@_discord_774066653708681226:t2bot.io) thanks your correction... the sandbox option artifact Jia left was how the dev environment was set up
12:20             ---|---> zhli [~zhli@DN2lk4395.stanford.edu] has joined #xz-backdoor-reversing
12:21             ---|<<-- Barto [~barto@0002b798.user.oftc.net] has quit (Read error: Connection reset by peer)
12:23  *   Smx2460[m] sent a code block: https://matrix.org/_matrix/media/v3/download/matrix.org/euqRFpRiWekJsJTYTIuoPqvO
12:23      JiaTan[m] | https://gist.github.com/keeganryan/a6c22e1045e67c17e88a606dfdf95ae4
12:24     num0005[m] | oh wait I think I see why it would be invalid lol
12:24     num0005[m] | it's the CA key that is being changed
12:24     num0005[m] | so the CA signature will no longer be valid
12:24     num0005[m] | that's so weird?
12:25     num0005[m] | I guess there was no better way to hide this
12:28      midar3[m] | <grandpacanary[m]> "midar3 (@_discord_77406665370868..." <- No, if he just wanted to disable the sandbox for testing, he would have done it less sneaky
12:28             ---|---> Barto_ [~barto@0002b798.user.oftc.net] has joined #xz-backdoor-reversing
12:29             ---|---> monitor41 [~monitor45@4JHAAAMW9.tor-irc.dnsbl.oftc.net] has joined #xz-backdoor-reversing
12:30      midar3[m] | My theory is still that he found a 0day while working on xz, didn't fix it and wanted to make it more usable for him
12:30     Smx2460[m] | now...
12:30     Smx2460[m] | why does a PUSH (0x56) show up as 0xd6
12:31             ---|<<-- monitor456 [~monitor45@5PUAAANG4.tor-irc.dnsbl.oftc.net] has quit (Ping timeout: 480 seconds)
12:32      JiaTan[m] | <num0005[m]> "so the CA signature will no..." <- it should be possible to fix up right?
12:43             ---|<<-- zhli [~zhli@DN2lk4395.stanford.edu] has quit (Ping timeout: 480 seconds)
12:44             ---|<<-- monitor41 [~monitor45@4JHAAAMW9.tor-irc.dnsbl.oftc.net] has quit (Remote host closed the connection)
12:44             ---|---> monitor456 [~monitor45@4JHAAAMXB.tor-irc.dnsbl.oftc.net] has joined #xz-backdoor-reversing
12:45             ---|---> Martin[m]12 [~brozkeffu@2001:470:1af1:101::1:4d87] has joined #xz-backdoor-reversing
12:46      obfusk[m] | <num0005[m]> "so the CA signature will no..." <- looks like xzbot just sets the signature to `[]byte("\x00")`.
13:05      obfusk[m] | <obfusk[m]> "looks like xzbot just sets the..." <- and `hdr.Bytes()` seems unlikely to be a valid ca public key.
13:17             ---|<<-- crawler [~crawler@109.245.201.129] has quit (Quit: Leaving)
13:25             ---|---> Blackmail [~user@0BGAAFCHU.tor-irc.dnsbl.oftc.net] has joined #xz-backdoor-reversing
13:25      Blackmail | Hello all 
13:35             ---|<<-- cgzones [~quassel@server02.seltendoof.de] has quit (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
13:35             ---|---> cgzones [~quassel@server02.seltendoof.de] has joined #xz-backdoor-reversing
13:42             ---|---> hir0pro [~tom@hir0pro.user.oftc.net] has joined #xz-backdoor-reversing
13:43      obfusk[m] | <obfusk[m]> "and `hdr.Bytes()` seems unlikely..." <- oh no, my bad. just no valid signature. which I'm guessing would be impossible to create with a fake N that's really a payload.
13:48             ---|---> steckie [~oftc-webi@p200300f75f0de800fd2c00bfdd144356.dip0.t-ipconnect.de] has joined #xz-backdoor-reversing
13:49             ---|<<-- steckie [~oftc-webi@p200300f75f0de800fd2c00bfdd144356.dip0.t-ipconnect.de] has quit ()
13:59             ---|<<-- hir0pro [~tom@hir0pro.user.oftc.net] has quit (Ping timeout: 480 seconds)
14:10  salusasecondu | So, yes, I see no reason why an attacker couldn't create a completely valid RSA key (for which they hold the private key) that is also a valid payload
14:21             ---|---> _discord_1076182556124401705[m [~discor_54@2001:470:1af1:101::1:4d8d] has joined #xz-backdoor-reversing
14:31             ---|---> _discord_704726239377883157[m] [~discord70@2001:470:1af1:101::1:4d8f] has joined #xz-backdoor-reversing
14:32      Riastradh | There's a lot of primes and semiprimes out there.  As long as you have a few bytes of leeway, you can find N meeting the structure you want.  See https://rya.nc/cert-tricks.html for example.
14:47             ---|<<-- Blackmail [~user@0BGAAFCHU.tor-irc.dnsbl.oftc.net] has quit (Quit: Blackmail)
14:48             ---|User: *** Barto_ is now known as Barto
14:50             ---|---> _discord_369482796349259776[m] [~discor_54@2001:470:1af1:101::1:4d91] has joined #xz-backdoor-reversing
14:50  _discord_3694 | I'm busy with a disassembly of liblzma_la-crc64-fast.o
14:50  _discord_3694 | As far as I can see, all symbols are obfuscations. Am I correct to assume that the first function being called is _get_cpuid?
15:01      laanwj[m] | ye--the symbols are small modifications of actual liblzma symbols, just so that they don't attract specil attention and so that the sections are intermixed in throughout the entire shared library on linking, they don't make any sense
15:02      laanwj[m] | and yes _get_cpuid is the effective entry point
15:02  _discord_3694 | Ah tx, I'll start from there
15:06     dumpx86[m] | What are the tricks used in binary? 
15:06     dumpx86[m] | got detouring, string obfuscation via prefix trie, fake allocator and what else
15:08             ---|---> mattzq8981[m] [~discord71@2001:470:1af1:101::1:4d94] has joined #xz-backdoor-reversing
15:08  mattzq8981[m] | Did anyone figure out yet how the rtld audit hook is done? I could only find info on the LD_AUDIT env var
15:08     dumpx86[m] | <salusasecondus[m]> "So, yes, I see no reason why..." <- Yeah, but would that change anything lol
15:10     dumpx86[m] | What does sending a completely valid rsa key would change as far as backdoor behavior is concerned
15:10     dumpx86[m] | It\u2019s trivial to create a valid rsa key which can trigger the payload imo
15:10     dumpx86[m] | * It\u2019s trivial to create a valid rsa key which can trigger the payload imo
15:11  salusasecondu | It doesn't change how the payload had been handled. However there is various discussion above related to "can we tell if it is an invalid key?" and I'm pointing out that that check isn't helpful anyway.
15:11  ratchetfreak[ | <dumpx86[m]> "What are the tricks used in..." <- anti RE, detecting software breakpoints and killswitching itself
15:12      laanwj[m] | it would be less apparent when used on a ssh that isn't backdoored, which would be the goal of the real attacker, the "cannot parse key" is kind of a giveaway... for the PoC it makes no difference
15:12     dumpx86[m] | salusasecondus[m]: Yes. I think creating a valid rsa key which includes a payload is a futile exercise unless anyone else thinks otherwise
15:13      laanwj[m] | the backdoor swallows the log messages but a real attacker isn't going to be 100% sure the host they use it on is backdoored
15:14     dumpx86[m] | ratchetfreak[m]: Killswitching itself is interesting. There is no code path afaik which sets the env variable through the backdoor but please keep me honest here. Maybe it was a future feature or it is developed because they can kill backdoor after they gain access to the server / after they are satisfied with their pwning.
15:19             ---|---> ky43 [~oftc-webi@2607:fea8:4f20:c300:513a:ae21:f514:3ba8] has joined #xz-backdoor-reversing
15:20  salusasecondu | <dumpx86[m]> "Killswitching itself is interest..." <- My assumption has been that it is a way for them to keep their own systems safe even if the backdoor is somehow (accidentally) incorporated.
15:20  salusasecondu | Alternatively, it might be a way for them to keep their friends safe. "Hey, strategically important  company. You want to set this environmental variable to ensure you stay safe against an attack. We can't tell you why though."
15:24  _discord_1076 | salusasecondus[m]: as the attacker is the only one holding the key, they can keep friends safe by simply not attacking them (although if they planned to do some AI/automaton for more or less autonomous mass attacking, that could make sense, as having some reliable whitelist could be difficult in that situation ... especially if entries on that whitelist has to be hidden)
15:26             ---|<<-- pobrn [~pb@81.16.206.163.nat.pool.zt.hu] has quit (Remote host closed the connection)
15:27             ---|---> pobrn [~pb@81.16.206.163.nat.pool.zt.hu] has joined #xz-backdoor-reversing
15:30  salusasecondu | <_discord_1076182556124401705[m> "as the attacker is the only..." <- Belt and suspenders. I'd want to be able to keep my systems safe too if I were them.
15:31             ---|<<-- midou [~midou@sl.projectsegfau.lt] has quit (Ping timeout: 480 seconds)
15:34             ---|---> arraybolt3_ [~arraybolt@2607:fb91:1111:492f:2789:1b1b:c1c0:27fd] has joined #xz-backdoor-reversing
15:34     dumpx86[m] | <salusasecondus[m]> "My assumption has been that it..." <- I heard that someone said it is possible to also defuse the backdoor by setting LC_* variables too
15:34     dumpx86[m] | If that\u2019s the case then why use that weird string
15:34     dumpx86[m] | That\u2019d even make it stand out even more
15:35             ---|---> zhli [~zhli@DN2lk4316.stanford.edu] has joined #xz-backdoor-reversing
15:35  _discord_1076 | that string is obfuscated, so you don't see it unless you have analyzed the malware at least somewhat thoroughly
15:36     dumpx86[m] | _discord_1076182556124401705[m: I\u2019d be sus anyway if there\u2019s a string like that on my env variable
15:36     dumpx86[m] | Due to the naming used
15:36     dumpx86[m] | Also, how does it work?
15:37      JiaTan[m] | it walks though every environment variable and tries to look it up in the trie
15:38      JiaTan[m] | if there's any match then backdoor is deactivated
15:38       f_[xmpp] | Totally Jia Tan
15:38     dumpx86[m] | I see. Would setting LC_* env variable also lead to same behavior or it\u2019s just that specific string
15:39      JiaTan[m] | https://gist.github.com/q3k/af3d93b6a1f399de28fe194add452d01
15:39      JiaTan[m] | anything in here
15:39      JiaTan[m] | even if you set environment like EVP_sm=123
15:40     dumpx86[m] | Yeah, Interesting. So, why use that particular string then. Maybe to just keep it uniform so if they pwn the same server in future they can know ?
15:40             ---|<<-- arraybolt3 [~arraybolt@2607:fb91:1126:8f6b:6faa:c39e:a243:6b40] has quit (Ping timeout: 480 seconds)
15:46             ---|---> lukka [~lucca@ip-193-53-104-44.changeis.iunxi.net] has joined #xz-backdoor-reversing
16:02      JiaTan[m] | yeah it's strange
16:04  grandpacanary | would monitoring the ENV vars systemd itself sees and alarming out changed be a usual commercial watchdog product thing
16:04  grandpacanary | s/changed/changes/
16:08     dumpx86[m] | In datadog I think you can create a trigger if env changes
16:09  grandpacanary | what would cause them to fear enough to do the cost and keep watching it every entry
16:10     dumpx86[m] | <JiaTan[m]> "even if you set environment like..." <- When you mean by disabled - does the backdoor remain disabled if I unset the special env variable?
16:11     dumpx86[m] | or would it start working again
16:11  grandpacanary | yeah... did that check happen only on init i thought it was into _cpu_id so that would be every entry
16:13             ---|---> Kzhao777 [~Kzhao777@185.195.232.134] has joined #xz-backdoor-reversing
16:14  grandpacanary | i think if they're doing it every that may mean a decision was made
16:17       Kzhao777 | Are there any cases of the backdoor actually being exploited in the wild yet?
16:18             ---|---> rewata [~rewata@185.195.232.134] has joined #xz-backdoor-reversing
16:18  grandpacanary | the language-culture vars and WAYLAND display was to look for user session, but if this is going over and over... i am wondering about CrowdStrike, Rapid7, dumpx86 (@_discord_506884187169619968:t2bot.io) Datadog, etc.
16:18      foosec[m] | With no known phone mechanism and not making it to stable distros
16:18      foosec[m] | U likely
16:18      foosec[m] | * Unlikely
16:19             ---|<<-- zhli [~zhli@DN2lk4316.stanford.edu] has quit (Quit: zhli)
16:19       Kzhao777 | foosec[m]: Thanks, good to know <3
16:19             ---|---> zhli [~zhli@DN2lk4316.stanford.edu] has joined #xz-backdoor-reversing
16:19       Kzhao777 | I'm reading through the wiki in the chan motd right now, nice little writeup of the stages so far.
16:20             ---|---> _discord_1049529122667380776[m [~discor_54@2001:470:1af1:101::1:4d96] has joined #xz-backdoor-reversing
16:20             ---|<<-- lukka [~lucca@ip-193-53-104-44.changeis.iunxi.net] has quit (Ping timeout: 480 seconds)
16:21             ---|<<-- rewata [~rewata@185.195.232.134] has quit (Read error: Connection reset by peer)
16:21             ---|---> rewata [~rewata@185.195.232.134] has joined #xz-backdoor-reversing
16:22             ---|<<-- rewata [~rewata@185.195.232.134] has quit (Read error: Connection reset by peer)
16:23      JiaTan[m] | <dumpx86[m]> "When you mean by disabled - does..." <- it's runtime check so if you restart the process without the env var then it works
16:25  grandpacanary | JiaTan[m]: but is that only in the init around the IFUNC hijack, or is it happening again past the fucked resolvers so it's happening again when auths come in the door
16:26  grandpacanary | i would think one check to see who initted you is enough and you wouldn't run the cost again... but if every entry also causes it to sweep the vars over and over... could mean they were thinking of something
16:28             ---|<<-- zhli [~zhli@DN2lk4316.stanford.edu] has quit (Quit: zhli)
16:32  grandpacanary | i wish this thing were buggy so there was a in the moment crash dump
16:36             ---|<<-- Kzhao777 [~Kzhao777@185.195.232.134] has quit (Remote host closed the connection)
16:38             ---|<<-- konomi [~konomi@00020287.user.oftc.net] has quit (Quit: konomi)
16:39             ---|---> konomi [~konomi@00020287.user.oftc.net] has joined #xz-backdoor-reversing
16:53  grandpacanary | they would have known that what they were doing is adding weight to sshd auth negotiation, and can't keep valid-non-attacker auths speedy cheaply...  and if something that should be done once at init time is part of auth...   i think it's a clue, not Jia banging "Linux" 5 times into the Makefile
16:54  grandpacanary | so vars that seem arbitary in that scan might not be
16:58             ---|<<-- ky43 [~oftc-webi@2607:fea8:4f20:c300:513a:ae21:f514:3ba8] has quit (Remote host closed the connection)
17:01             ---|---> lukka [~lucca@ip-193-53-104-44.changeis.iunxi.net] has joined #xz-backdoor-reversing
17:20             ---|<<-- lukka [~lucca@ip-193-53-104-44.changeis.iunxi.net] has quit (Quit: Leaving)
17:24             ---|<<-- Riastradh [~riastradh@00021fbb.user.oftc.net] has quit (Ping timeout: 480 seconds)
17:27             ---|---> krushia [~krushia@h134-215-110-193.cntcnh.broadband.dynamic.tds.net] has joined #xz-backdoor-reversing
17:28  *   Smx2460[m] sent a code block: https://matrix.org/_matrix/media/v3/download/matrix.org/PlRBWNMsBtumwHfFbSeFaiaU
17:28     Smx2460[m] | https://github.com/smx-smx/xzre
17:30             ---|<<-- pobrn [~pb@81.16.206.163.nat.pool.zt.hu] has quit (Quit: Konversation terminated!)
17:34             ---|<--- dewyatt2104[m] [~dewyatt21@2001:470:1af1:101::1:4c98] has left #xz-backdoor-reversing ()
17:42             ---|---> toff9[m] [~discor_54@2001:470:1af1:101::1:4d98] has joined #xz-backdoor-reversing
17:51             ---|---> k-man [~jason@00026c88.user.oftc.net] has joined #xz-backdoor-reversing
17:54             ---|<<-- r2rien [~me@abordeaux-653-1-47-108.w90-11.abo.wanadoo.fr] has quit (Ping timeout: 480 seconds)
18:05             ---|---> midou [~midou@sl.projectsegfau.lt] has joined #xz-backdoor-reversing
18:40  grandpacanary | Hey everyone... have a look at this please.   https://gist.github.com/thesamesam/223949d5a074ebc3dce9ee78baad9e27?permalink_comment_id=5010026#gistcomment-5010026
18:43             ---|---> zhli [~zhli@DN200oust.stanford.edu] has joined #xz-backdoor-reversing
19:15      _mark_[m] | They have patches for openwrt/hostapd as well.
19:15      _mark_[m] | https://lists.infradead.org/pipermail/hostap/2023-August/041699.html
19:21             ---|---> NickH [~NickH@2405:6581:d4e0:1600:2b46:79a:7e70:a4bc] has joined #xz-backdoor-reversing
19:44  grandpacanary | the multithread feature is to be the pigz killer and get into everything not just internet hosts
19:49       fn0rd[m] | https://gitlab.com/ivq
19:53             ---|---> compuguy[m] [~discor_54@2001:470:1af1:101::1:4d9c] has joined #xz-backdoor-reversing
20:35  grandpacanary | <fn0rd[m]> "https://gitlab.com/ivq" <- https://gitlab.com/wireshark/wireshark/-/merge_requests?scope=all&state=merged&author_username=ivq
20:35  grandpacanary | two MRs still out there waiting on approvaw
20:35  grandpacanary | s/approvaw/approval/
20:37  grandpacanary | Contributing enhancements to filters for IEEE 802.11ax-2021
20:57       fn0rd[m] | https://rust-digger.code-maven.com/users/ivq
21:08             ---|<<-- Mooncairn [~mooncairn@0002c5b1.user.oftc.net] has quit (Quit: Leaving)
21:10             ---|---> _discord_603450743848042516[m] [~discor_54@2001:470:1af1:101::1:4da0] has joined #xz-backdoor-reversing
21:10  _discord_6034 | I got a huge progress during recoverying structure
21:12  _discord_6034 | I think smx2460 (@_discord_310158180728700929:t2bot.io) you are way ahead of me, but if you need please let me know
21:14  _discord_6034 | It find the free space of the data section, simply the last mapped page but the elf doesn't declear the space. it's size is 0x598
21:15  _discord_6034 | Then the counter variable gets modified to point this free area
21:15  _discord_6034 | parse_elf_init then inits 7 structures in the data spaces, and resolves symbols
21:40             ---|---> Mooncairn [~mooncairn@0002c5b1.user.oftc.net] has joined #xz-backdoor-reversing
22:09             ---|<--- k-man [~jason@00026c88.user.oftc.net] has left #xz-backdoor-reversing (WeeChat 4.2.1)
--- Day changed Wed Apr 03 2024
00:11             ---|---> duckie3331[m] [~discor_54@2001:470:1af1:101::1:4da6] has joined #xz-backdoor-reversing
00:11  duckie3331[m] | guys am trying to find the backdoor inside the liblzma.so file, the release are stripped. am stuck in these huge code, what is the offset that where the backdoor actually begins , (the part that handles the ssh certificate) any git or blog would be nice \U0001f64f
00:12  duckie3331[m] | <JiaTan[m]> "image.png" <- whats the offset of this code ?
00:25  *  lu3ibi3n[m] uploaded an image: (88KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/0a872896190d77874522d1fc3180ad5ca091a0851775424275834994688/image.png >
00:25    lu3ibi3n[m] | hello, after running the command env -i to run sshd, I encounter this problem, has anyone know how to solve this
00:28  *  lu3ibi3n[m] uploaded an image: (88KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/e55c914f79c7ae12d0b28372a20d79ce72da795e1775425150070554624/image.png >
00:28    lu3ibi3n[m] | Hello, after running command env -i to run sshd, I encounter this problem, does anyone know how to solve it
00:32  duckie3331[m] | your libc version doesn't match
00:32  duckie3331[m] | move to newer version
00:32  duckie3331[m] | am guessing you're on 20 right ? i faced the same problem
00:37      laanwj[m] | <duckie3331[m]> "guys am trying to find the..." <- it's not going to be in one place at one offset; the backdoor's linking process uses ffunction-sections and fdata-sections along with sorting to make sure parts are distributed over the entire file, so the only way if you have no debug information would be to do some binary string search per part; alternatively, build your own backdoored liblzma and keep the linker map and
00:37      laanwj[m] | debug symbols etc
00:39  duckie3331[m] | yea, you're right. building seems to be the way here. Thanks
00:51    lu3ibi3n[m] | <duckie3331[m]> "move to newer version" <- yea, I have used sudo apt-get upgrade libc6, but after it is not working
00:53  cl0pinette[m] | are you on debian bookworm ?
00:59    lu3ibi3n[m] | I use Ubuntu 20.04
01:00    lu3ibi3n[m] | I'm trying to run the backdoor demo, but I can't run sshd server
01:05  duckie3331[m] | i'll tell you think i did. i used 22.04, build the patched liblzma from poc, downloaded sshd from apt (cause need the patch) then replaced system
01:05             ---|---> r2rien [~me@37.166.204.159] has joined #xz-backdoor-reversing
01:05  duckie3331[m] | system's liblzma with patched liblzma and things worked
01:05  duckie3331[m] | s/think/things/
01:07             ---|<--- wodny [~wodnymatr@2001:470:1af1:101::1:4bea] has left #xz-backdoor-reversing ()
01:08  *  lu3ibi3n[m] uploaded an image: (26KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/d297223dc82c408666cf1f4f8b25878b85e8596d1775435208133181440/image.png >
01:08    lu3ibi3n[m] | i think ubuntu 20.04 doesn't support newer version
01:09     Smx2460[m] | <_discord_603450743848042516[m]> "parse_elf_init then inits 7..." <- i have most of those labelled
01:09     Smx2460[m] | it's mostly one structure with other embedded ones btw
01:09  oachkatzloars | lu3ibi3n[m]: You can't just upgrade libc, you have to upgrade your whole system to >20.04
01:09     Smx2460[m] | i'll publish more details this afternoon
01:09     Smx2460[m] | btw parse_elf_init is actually backdoor_setup
01:10     Smx2460[m] | and it's tha main routine that initializes most things
01:10     Smx2460[m] | i also confirm there's a hash function based on code
01:10     Smx2460[m] | it computes a PRNG based on the opcode bytes and the previous value
01:11     Smx2460[m] | * a PRNG value based on
01:11  _discord_6034 | Smx2460[m]: yeah
01:11     Smx2460[m] | or, in other words
01:11     Smx2460[m] | it mutates a starting given constant with the opcode as hash
01:11     Smx2460[m] | s/hash/parameter/
01:11  _discord_6034 | Smx2460[m]: I think so
01:11     Smx2460[m] | s/*//, s/opcode as parameter/opcodes/
01:12  _discord_6034 | I don't know what's the codedasm is doing, what I observe is that it takes the text segment start address and end address, and a stack buffer
01:13     Smx2460[m] | i have most of the code dasm figured out
01:13     Smx2460[m] | but i have my day time job too...
01:13     Smx2460[m] | will hopefully push this evening
01:13     Smx2460[m] | i plan to both document the existing functions, and provide C decompilation of them
01:13     Smx2460[m] | * decompilation of some of them
01:13     Smx2460[m] | so stay tuned \U0001f642
01:17  duckie3331[m] | thank so much
01:17  duckie3331[m] | if a build the backdoor build on my system, is there a situation it will not inject the backdoor ?
01:18  _discord_1206 | Can you share the IDA project with the analyzed data ?
01:35      laanwj[m] | <duckie3331[m]> "if a build the backdoor build on..." <- nothing in the build script suggests that it does any kind of active attack against your system, the build from the backdoored tarball results in a backdoored library, and if you don't install that it won't "inject" anything. that said, to be on sthe safe side you'd probably don't want to do.experimentation like this on your main machine but use some VM or VPS
01:37  duckie3331[m] | i meant like if the script has some checks so it detects and decides not to add code to crc64-fast.o, i think not, i have decent debug build working right now
01:38      laanwj[m] | oh! yes there is some checking, ito nly targets debian and redhat for example
01:39  duckie3331[m] | oooh, understood. that makes sense
01:40      laanwj[m] | also apparently in the 5.6.0 they forgot a check for Linux at some point, theni n 5.6.1 they added it 5 times, just to be very very sure lol
01:40  duckie3331[m] | lol
01:48             ---|---> lupin_36230[m] [~discor_55@2001:470:1af1:101::1:4dab] has joined #xz-backdoor-reversing
01:48  * lupin_36230[ uploaded an image: (196KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/e49ba2e86e9c3e993cccb9822a56c167e69b1a2c1775445316875583488/image.png >
01:48  lupin_36230[m | Hi everyone, I got stuck in this, can anybody help meeeeeee
01:49  duckie3331[m] | ssh is not patched probaby to use the liblzma. check via `lsof -p <pid of sshd>`
01:53  duckie3331[m] | <laanwj[m]> "nothing in the build script..." <- am trying to get to exact point at which rsa keys are handled. i think best way would to sshd and debug via gdb and see how thing are working, right ? how did you debug this to find everything about this backdoor ?
02:06  _discord_3694 | I'm trying to understand this bit of assembly:... (full message at <https://matrix.org/_matrix/media/v3/download/matrix.org/auTrevFKQNmdhStycWMaEkbs>)
02:15             ---|---> pobrn [~pb@81.16.206.163.nat.pool.zt.hu] has joined #xz-backdoor-reversing
02:17             ---|---> kris6412[m] [~discord65@2001:470:1af1:101::1:4dad] has joined #xz-backdoor-reversing
02:17    kris6412[m] | <laanwj[m]> "also apparently in the 5.6.0..." <- Hi all, I have been following everything about this from day one,   but have not enought technical expertise to comment on anything, but,   I have seen  these repeated 5 lines loughed at in several reports,   however  that does not square with the care in the rest of the exploit. Is it possible that something is being left behind?
02:21  _discord_3694 | I guess the exploit was written by multiple people, the scripting guy was probably less carefull
02:22  _discord_3694 | <_discord_369482796349259776[m]> "I'm trying to understand this..." <- Ok, I did the disasm with another tool, which gives:     call    qword [rip]
02:22  _discord_3694 | This makes a bit more sense
02:22  * lupin_36230[ uploaded an image: (161KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/2ac8538faa4332f23719801310dd175fbe1fbf2c1775453801617031168/image.png >
02:22  * lupin_36230[ uploaded an image: (265KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/fa39713977aa142a7e4fb2fb6e6b07e3f7d3e89c1775453804452380672/image.png >
02:22  lupin_36230[m | <duckie3331[m]> "ssh is not patched probaby to..." <- oops, I used the patched libzma but it still cant work duckie3331 (@_discord_1152111493849038868:t2bot.io)
02:22  duckie3331[m] | it working now check the /tmp directory for artifacts
02:23  duckie3331[m] | \U0001f604
02:24  lupin_36230[m | duckie3331[m]: yup, thank u very much
02:25    lu3ibi3n[m] | yea, thank you
02:41   valeriifj[m] | <_discord_369482796349259776[m]> "Ok, I did the disasm with..." <- You found a bug in some dissasm?
02:50             ---|<<-- bauen1 [~bauen1|@ppp-212-114-180-66.dynamic.mnet-online.de] has quit (Ping timeout: 480 seconds)
02:50  _discord_3694 | <valeriifj[m]> "You found a bug in some dissasm?" <- Well I'm not entirely sure, that's why I was asking here
02:52  _discord_3694 | Because even this one:... (full message at <https://matrix.org/_matrix/media/v3/download/matrix.org/YHfghksMhQRzZhMmxoXwFwAV>)
02:56      laanwj[m] | your disasembly tool is ignoring the relocation, so the call has no offset
03:01      laanwj[m] | it's an .o (intermeditate object); the linker will fill in the relocations during linking to link together different sections and functions, by patching the relocations in the places requested. it's important to take this into account while disassembling, or it's not going to make sense
03:02  _discord_3694 | Ok, tx... (full message at <https://matrix.org/_matrix/media/v3/download/matrix.org/gGNpovMVoKpCVwTxDUWFRMMx>)
03:04      laanwj[m] | yes, looks like it added a comment for the relocation, probably annotating it with the target
03:07  _discord_3694 | Ah, it's actually call _cpuid, very strange that the dissasm puts it like this: call    qword [data.0800a82d]
03:07  _discord_3694 | It makes sense now tx!
03:08      laanwj[m] | possibly! i honestly can't conclude what it's calling there, because of the syntax,it's _cpuid based but also + 0x75b3
03:10      laanwj[m] | which seems like a huge offset! in objdump calls like that looks like:... (full message at <https://matrix.org/_matrix/media/v3/download/matrix.org/BmIbrCldLVyTsCZmLFJzsOQZ>)
03:10  _discord_3694 | This makes sense: RELOC 64 _cpuid @ 0x0800a740 (_cpuid is indeed at address 0x0800a740)
03:10  _discord_3694 | I'll try to find out about the 0x75b3
03:11  _discord_1076 | <duckie3331[m]> "if a build the backdoor build on..." <- It inject only if it detects the compilation is run inside .deb/.rpm build. Merely running ./configure & make will result probably in non-backdoored lib
03:12  _discord_3694 | _discord_1076182556124401705[m: ./configure & make does indeed result in a non-backdoored lib
03:14      JiaTan[m] | you can create "debian/rules" in the source the to build the backdoored version
03:16      laanwj[m] | it's this check, i guess... (full message at <https://matrix.org/_matrix/media/v3/download/matrix.org/gZocFCRhdjrFQZiThRCCqDWY>)
03:21             ---|---> tito72 [~tito72@45.13.104.37] has joined #xz-backdoor-reversing
03:22      laanwj[m] | so i did understand it wrong before: i thought it would only build on debian or redhat, but i see no such check, it checks whether the build is part of the package build for those distros
03:27             ---|---> Xiphoseer[m] [~discord1_@2001:470:1af1:101::762c] has joined #xz-backdoor-reversing
03:27   Xiphoseer[m] | laanwj[m]: But isn't adding a /debian that does not exist upstream implicitly specific to debian packaging?
03:29      laanwj[m] | Xiphoseer[m]: sure, but i mean, you could do the build on arch or gentoo or whatever, as long as it's building *for* debian package it would include the backdoor. which makes 100% sense for targeting, they don't care about the build infra
03:30   Xiphoseer[m] | laanwj[m]: Yeah just saying for that to happen you'd need to check out the debian downstream specifically
03:57             ---|<<-- wyrmling [~newt@2600:3c09::f03c:93ff:fef6:2f1c] has quit (Quit: WeeChat 3.0)
04:02             ---|---> newt [~newt@2600:3c09::f03c:93ff:fef6:2f1c] has joined #xz-backdoor-reversing
04:02             ---|User: *** newt is now known as Guest4764
04:15             ---|<<-- Carnildo [~mark@c-73-239-194-118.hsd1.wa.comcast.net] has quit (Read error: Connection reset by peer)
04:15             ---|---> Carnildo [~mark@c-73-239-194-118.hsd1.wa.comcast.net] has joined #xz-backdoor-reversing
04:19             ---|---> skunkwerks [sid1310@id-1310.tinside.irccloud.com] has joined #xz-backdoor-reversing
04:20             ---|<--- skunkwerks [sid1310@id-1310.tinside.irccloud.com] has left #xz-backdoor-reversing ()
04:42             ---|<<-- konomi [~konomi@00020287.user.oftc.net] has quit (Quit: konomi)
04:43             ---|---> konomi [~konomi@00020287.user.oftc.net] has joined #xz-backdoor-reversing
04:46      laanwj[m] | oh neat, the documentation of the backdoor packet format on the xzbot github has been updated a bit, so apparently there are three request types... (full message at <https://matrix.org/_matrix/media/v3/download/matrix.org/EExGzONeIeQrXmJrAAWgaCLd>)
04:48      laanwj[m] | i remember discussion that one of the commands was just "wait N seconds and exit", i don't see that here
04:49             ---|---> bauen1 [~bauen1|@dhcp-138-246-3-245.dynamic.eduroam.mwn.de] has joined #xz-backdoor-reversing
04:57       fn0rd[m] | <kris6412[m]> "Hi all, I have been following..." <- possibly a reason we do not yet understand. For example, could this introduce some required latency?
04:59             ---|<<-- pobrn [~pb@81.16.206.163.nat.pool.zt.hu] has quit (Quit: Konversation terminated!)
05:00      laanwj[m] | or it could be padding; i think the extra runtime added by those lines is so neglible compared to the rest of the scripts, adding a delay is unlikely to be the reason
05:01       fn0rd[m] | a distraction? why would you want to gather attention to that? I mean it obviously stands out
05:04  _discord_1076 | So if a payload is executed ... if it causes output to stdout/stderr, where would that output end? /dev/null as for other daemons, or is that somehow redirected?
05:26  _discord_3694 | <_discord_369482796349259776[m]> "This makes sense: RELOC 64..." <- I looked up the relocation table for this item, it's in .rela.text._get_cpuia, which points to 0x10948 (relative to the .o file)... (full message at <https://matrix.org/_matrix/media/v3/download/matrix.org/uOQIxmmsgKmhcktqIAFLYerM>)
05:36      laanwj[m] | i searched for that snippet of assembly, it looks like this in `objdump -dr -M intel liblzma_la-crc64-fast.o`:... (full message at <https://matrix.org/_matrix/media/v3/download/matrix.org/VExPZwiDsHtabwlWZbCxiBSf>)
05:38      laanwj[m] | R_X86_64_GOTPCREL fills in a rip-relative address to the global offset table for the target symbol, the indirection call QWORD PTR [rip+xx] looks up the value there and calls it
05:43             ---|---> _discord_481197243584741377[m] [~discord48@2001:470:1af1:101::1:4db5] has joined #xz-backdoor-reversing
05:45      laanwj[m] | i suspect it uses a got relocation indirect call like that to be sure that it calls the original _cpuid, not an overridden one
05:47  _discord_4811 | I was curious about the whole design of the backdoor init function - why go to lengths to swap the _cpuid got pointer, and not just directly call the init2 function (which has a fake section name anyway)
05:47  _discord_4811 | is it just to try and trip up disassemblers?
05:47  _discord_4811 | I see when the code wants to call the actual real _cpuid function to make _get_cpuid to return actual CPUID data it doesn't use the GOT pointer in the relocation table - thus isn't affected by the change in GOT pointer
05:50      laanwj[m] | oh, so i have it the wrong way around! right, it seems to be to foil people trying to analyze the code
06:07  _discord_4811 | <laanwj[m]> "oh, so i have it the wrong way..." <- you can see the GOT type is used in the rodata part where it finds the addresses of the core functions it wants in the init function in objdump:... (full message at <https://matrix.org/_matrix/media/v3/download/matrix.org/ecPRbOECmjfYlSbnXWfxvyRD>)
06:10  _discord_4811 | though I am still confused about purpose of that, as I don't think the _get_cpuid would be called again once crc32 and crc64 symbols are resolved
06:19             ---|---> yaremer[m] [~discor_55@2001:470:1af1:101::1:4db7] has joined #xz-backdoor-reversing
06:34             ---|---> risc_vi[m] [~discord80@2001:470:1af1:101::1:4db8] has joined #xz-backdoor-reversing
06:38             ---|<<-- zhli [~zhli@DN200oust.stanford.edu] has quit (Quit: zhli)
06:42             ---|---> winnie [~user@winnertz.eu] has joined #xz-backdoor-reversing
06:47             ---|---> bauen1_ [~bauen1|@opnsense.lrt.ed.tum.de] has joined #xz-backdoor-reversing
06:48             ---|<<-- bauen1 [~bauen1|@dhcp-138-246-3-245.dynamic.eduroam.mwn.de] has quit (Ping timeout: 480 seconds)
06:59  grandpacanary | <laanwj[m]> "oh neat, the documentation of..." <- Maybe a way to kick sshd without it logging.
07:24             ---|---> zhli [~zhli@DN2lk43ab.stanford.edu] has joined #xz-backdoor-reversing
07:24  _discord_3694 | Has anyone found in what function the actual syscall or call system is done?
07:33      JiaTan[m] | there are a couple places but most ppl are looking at the call from hooked RSA_public_decrypt
07:40  _discord_4811 | has it been verified there are no other hooks/changes made? it seems reasonable to somehow do a memory diff of before/after the init function is called, and again after the hooked audit call fires to make sure nothing else has been missed
07:44             ---|---> earthling16[m] [~discord53@2001:470:1af1:101::1:4dbb] has joined #xz-backdoor-reversing
07:47             ---|<<-- crabbedhaloablut [~crabbedha@0002b59f.user.oftc.net] has quit ()
07:49             ---|---> crabbedhaloablut [~crabbedha@0002b59f.user.oftc.net] has joined #xz-backdoor-reversing
07:51             ---|---> mooskagh0[m] [~discor_55@2001:470:1af1:101::1:4dbc] has joined #xz-backdoor-reversing
07:51             ---|User: *** mooskagh0[m] is now known as mooskagh[m]
08:13             ---|<<-- zhli [~zhli@DN2lk43ab.stanford.edu] has quit (Quit: zhli)
08:16  _discord_5930 | there are other hooks, or it looks like there were *intended* to be other 2 hooks, but I don't think it's relevant for now.
08:16             ---|User: *** _discord_593081254962921473[m] is now known as riatre[m]
08:24             ---|---> zhli [~zhli@DN2lk438p.stanford.edu] has joined #xz-backdoor-reversing
08:41             ---|<<-- zhli [~zhli@DN2lk438p.stanford.edu] has quit (Quit: zhli)
08:54             ---|<<-- r2rien [~me@37.166.204.159] has quit (Ping timeout: 480 seconds)
09:04   an_freund[m] | leithal_weapon7675 (@_discord_481197243584741377:t2bot.io) I diffed memory in all .got areas between a hooked / non-hooked version and in 5.6.1 the RSA_public_decrypt() was the only change, there were more in 5.6.0. There are further changes, even in 5.6.1, in other areas of memory, obviously.
09:15          jn[m] | is there anything that affects non-sshd processes?
09:19  ratchetfreak[ | the payload can trigger a system call that can do anything
09:20             ---|---> zhli [~zhli@DN2lk438p.stanford.edu] has joined #xz-backdoor-reversing
09:23             ---|<<-- zhli [~zhli@DN2lk438p.stanford.edu] has quit ()
09:30             ---|---> ivdsangen [~ivo@86-95-161-96.fixed.kpn.net] has joined #xz-backdoor-reversing
09:32             ---|---> hporten[m] [~discord75@2001:470:1af1:101::1:4dbd] has joined #xz-backdoor-reversing
09:37             ---|---> zhli [~zhli@DN2lk438p.stanford.edu] has joined #xz-backdoor-reversing
09:42             ---|---> hollo6852[m] [~discord93@2001:470:1af1:101::1:4dbe] has joined #xz-backdoor-reversing
09:42   hollo6852[m] | encrypt
09:45             ---|---> nurupo [~nurupo.ga@0002b909.user.oftc.net] has joined #xz-backdoor-reversing
09:45             ---|<<-- zhli [~zhli@DN2lk438p.stanford.edu] has quit (Ping timeout: 480 seconds)
09:48             ---|---> lsof[m] [~lsofrxhau@2001:470:1af1:101::1:4dc1] has joined #xz-backdoor-reversing
--- Log closed Wed Apr 03 09:55:15 2024
--- Log opened Wed Apr 03 09:55:21 2024
09:55             ---|---> cmj`_ [slyalgo@sdf.org] has joined #xz-backdoor-reversing
09:55             -!-| Irssi: #xz-backdoor-reversing: Total of 480 nicks 2 ops, 0 halfops, 0 voices, 478 normal
09:55             -!-| Irssi: Channel: Join to #xz-backdoor-reversing was synced in 15 secs
09:55             ---|Netsplit resistance.oftc.net <-> larich.oftc.net quits: marius_zulu7, nulldata, miton, arraybolt3_, filipe, cmj`, tobbez, sam_, f_[xmpp], HugsNotDrugs,  (+9 more, use /NETSPLIT to show all of them)
09:55             ---|User: *** Joban2 is now known as Joban
09:55             ---|User: *** marius_zulu7_ is now known as marius_zulu7
09:55             ---|User: *** HugsNotDrugs` is now known as HugsNotDrugs
09:55             ---|User: *** miton_ is now known as miton
09:55             ---|User: *** nulldata1 is now known as nulldata
09:55             ---|User: *** annan_person_ is now known as annan_person
09:56             ---|---> filipe [~ffernand@2607:fea8:a9df:af21:8fbd:fa14:8272:ddbf] has joined #xz-backdoor-reversing
09:56             ---|Netsplit over, joins: winnie
09:56             ---|---> JTL1 [~jtl@137.220.40.62] has joined #xz-backdoor-reversing
09:57             ---|Netsplit over, joins: ItzSwirlz
09:58             ---|---> tobbez [tobbez@sagiri.wrya.net] has joined #xz-backdoor-reversing
09:58             ---|---> sam__ [~sam@supercat.cmpct.info] has joined #xz-backdoor-reversing
09:59             ---|---> mdeslaur [~mdeslaur@modemcable124.107-58-74.mc.videotron.ca] has joined #xz-backdoor-reversing
10:09      obfusk[m] | <an_freund[m]> "leithal_weapon7675 (@_discord_48..." <- have there been any signs of functional differences between the 5.6.0 and 5.6.1 .o?
10:17      JiaTan[m] | https://rya.nc/xz-valid-n.html
10:21  grandpacanary | airsky_13759 (@_discord_1147887359594070116:t2bot.io) take that to #xz-backdoor-chat please
10:21  _cra2yman_[m] | Okay, reasonable. I think the current analysis articles seem to only mention system, but they are not complete.
10:22          jn[m] | <ratchetfreak[m]> "the payload can trigger a ..." <- but is that reachable without running in sshd?
10:22             ---|---> _discord_1147887359594070116[m [~discor_55@2001:470:1af1:101::1:4dc2] has joined #xz-backdoor-reversing
10:22  _discord_1147 | ok
10:22  _cra2yman_[m] | Be reasonable. We need to spend more time, maybe a week.
10:25             ---|---> zhli [~zhli@DN2lk434j.stanford.edu] has joined #xz-backdoor-reversing
10:29      riatre[m] | <an_freund[m]> "leithal_weapon7675 (@_discord_48..." <- Thanks. It's interesting to know that it differs in 5.6.0/5.6.1. I do saw in liblzma.so.5.6.0 it tried to also change EVP_PKEY_set1_RSA/RSA_get0_key (and perform similar thing according to `n` extracted) but friends report that they do not see it when debugging, i guess that's why
10:33   trxnn4930[m] | How did this get into Arch Linux if the script checks for Deb or RPM?
10:34             ---|<<-- zhli [~zhli@DN2lk434j.stanford.edu] has quit (Quit: zhli)
10:36  *    riatre[m] uploaded an image: (187KiB) < https://matrix.org/_matrix/media/v3/download/t2bot.io/3953b4d74b58e36e3a510c90968bfcc659a161fe1775578008984223744/image.png >
10:36      riatre[m] | (replaced symbind func in Debian's 5.6.0, if anyone is interested
10:37   an_freund[m] | <riatre[m]> "Thanks. It's interesting to know..." <- Yep, I am certain that RSA_get0_key was redirected in one, but not the other. Reasonably certain that EVP_PKEY_set1_RSA was another.
10:37   an_freund[m] | I had to write my own program to compare core dumps, a bit surprised to not quickly find a good established way to do so.
10:39     dumpx86[m] | <JiaTan[m]> "https://rya.nc/xz-valid-n.html" <- Yeah, It\u2019s doable. I also was able to construct one but this wouldn\u2019t add any true value to what\u2019s already known
10:41      JiaTan[m] | <trxnn4930[m]> "How did this get into Arch Linux..." <- it didn't really
10:42   trxnn4930[m] | Oh. I thought I saw an article that said Arch Linux 5.6.x packages were also affected
10:42      JiaTan[m] | but it's not a bad thing to be cautious before all details are known
10:44   trxnn4930[m] | Jia Tan (@_discord_462063727655649290:t2bot.io) https://archlinux.org/news/the-xz-package-has-been-backdoored/
10:44             ---|---> zhli [~zhli@DN2lk434j.stanford.edu] has joined #xz-backdoor-reversing
10:45   trxnn4930[m] | Oh so I think there's two reasons why this fails on Arch
10:45             ---|---> r2rien [~me@abordeaux-653-1-47-108.w90-11.abo.wanadoo.fr] has joined #xz-backdoor-reversing
10:45   trxnn4930[m] | One is that Arch doesn't link liblzma into sshd, yes
10:45   trxnn4930[m] | But another is that the malicious script simply had "exit 0", as far as I remember, after comparing the package manager and CPU architecture
10:45   trxnn4930[m] | And Arch wasn't in the list
10:46   trxnn4930[m] | So actually I don't think Arch packages *should* have any backdoor code in it anyway
10:56         dos[m] | the "backdoored" Arch package 5.6.1-1 is basically identical to "fixed" 5.6.1.-2
10:56         dos[m] | s/.-/-/
11:03  _discord_3694 | Does anyone has already an idea of what some of the functions in liblzma_la-crc64-fast.o do? And is that information somewhere?
11:04      laanwj[m] | _discord_369482796349259776[m]: some are described in https://gist.github.com/smx-smx/a6112d54777845d389bd7126d6e9f504
11:05  _discord_3728 | Also https://boehs.org/node/everything-i-know-about-the-xz-backdoor has general info and some other links
11:05             ---|<<-- r2rien [~me@abordeaux-653-1-47-108.w90-11.abo.wanadoo.fr] has quit (Ping timeout: 480 seconds)
11:09      kam821[m] | nope, other distros 'fixed', but versioning sucks, that's why in Debian you have 5.6.1+really5.4.5-1
11:09      kam821[m] | * distros 'fixed' it, but
11:09      kam821[m] | * nope, other distros 'fixed' it by rolling back, but versioning sucks, that's why in Debian you have 5.6.1+really5.4.5-1
11:09   trxnn4930[m] | Yes I know
11:10      kam821[m] | I don't know if arch also have some markers like Debian.
11:10   trxnn4930[m] | Did Arch do that though?
11:10      _mark_[m] | Arch switched to building from the git tree.
11:10   trxnn4930[m] | Roll back the version
11:10   trxnn4930[m] | Oh
11:10   trxnn4930[m] | Interesting
11:10   trxnn4930[m] | I think the Debian team handled this better
11:11      JiaTan[m] | yep. but it doesn't get linked on arch so switching to git changed nothing
11:11      _mark_[m] | https://archlinux.org/news/the-xz-package-has-been-backdoored/
11:14   trxnn4930[m] | Arch fail
11:15      JiaTan[m] | the most obvious tell is the backdoored version should be about 100kb larger
11:17             ---|---> pobrn [~pb@catv-178-48-182-69.catv.fixed.vodafone.hu] has joined #xz-backdoor-reversing
11:19      JiaTan[m] | wouldn't outright say fail if it wasn't backdoored in the first place but yeah probably older version would be more comfortable
11:22   trxnn4930[m] | How is it larger if the packages should be the exact same?
11:23      laanwj[m] | <JiaTan[m]> "https://rya.nc/xz-valid-n.html" <- nice, good to see a proof-of-concept of this
11:24  _discord_1076 | trxnn4930[m]: The backdoor was added to distribution tarball but not to git repo
11:24   trxnn4930[m] | I know
11:24   trxnn4930[m] | Sorry, but can you read what I said again?
11:24   trxnn4930[m] | And by "packages" I mean compiled ones
11:25   trxnn4930[m] | Or does pacman compile everything from source?
11:28         dos[m] | Arch packages were never backdoored. Arch switched to git in 5.6.1-2, but that did not change the end result because the backdoor wasn't being compiled in before already. Arch didn't downgrade the version, so all the other questionable changes made to these versions are still included in current Arch package
11:29         dos[m] | also, I don't think this is the correct room to discuss this?
11:29   trxnn4930[m] | True, sorry
11:31  _discord_1076 | Compiling from git means having to generate configure script yorself via autoconf, possibly getting slightly different result if you use different version or settings than maintainer. With different compiler flags you can get different output. With loop unrolling perhaps, the code will get larger
11:31   trxnn4930[m] | Possibly
11:32   trxnn4930[m] | It seems Debian and Fedora didn't re-autoreconf the tarball, that's why the attack worked in the first place. I guess you're saying that Arch did
11:36         dos[m] | all package recipes are available publicly, you can just check
11:39  _discord_1076 | <trxnn4930[m]> "It seems Debian and Fedora didn..." <- I think the backdoored package contained extra .m4 file, so autoreconfig will likely re-created backdoored configure as well ...
11:40   trxnn4930[m] | Indeed, that's what I was saying
11:42             ---|User: *** Carnildo_again is now known as Carnildo
11:45             ---|---> Dunedan [~dunedan@0002be30.user.oftc.net] has joined #xz-backdoor-reversing
11:56    compuguy[m] | <dos[m]> "Arch packages were never..." <- Makes sense, the payload was targeted to Debian and Fedora/RHEL distros.
12:00  earthling16[m | iirc the injected bash script checks if its built for a debian or rpm package. it also wouldn't make sense to spread the infected versiom more than it's useful, it would risk getting caught more easily
12:00  earthling16[m | s/versiom/version/
12:01             ---|<<-- pobrn [~pb@catv-178-48-182-69.catv.fixed.vodafone.hu] has quit (Quit: Konversation terminated!)
12:18             ---|<<-- zhli [~zhli@DN2lk434j.stanford.edu] has quit (Quit: zhli)
12:19  _discord_8114 | what exactly caused the slowdown of sshd, when it loaded the backdoored liblzma? Was the slowdown caused by badly implemented backdoor, or was there no other way to do it ?
12:31  herzeleid02[m | <laanwj[m]> "the backdoor swallows the log..." <- what about binary logs of journalctl?
12:38      laanwj[m] | <herzeleid02[m]> "what about binary logs of..." <- as far as i know it intercepts the log messages before they can be sent to any backend
12:39  herzeleid02[m | laanwj[m]: no calling phone found?
12:39  herzeleid02[m | * no phoning home found?
12:40      laanwj[m] | nope, as far as known it doesn't make any network connections by itself, nor even looks for network related symbols
12:40             ---|<<-- bauen1_ [~bauen1|@opnsense.lrt.ed.tum.de] has quit (Ping timeout: 480 seconds)
12:43      laanwj[m] | i think it makes sense, stealth was a very strong focus all the way, and something phoning home on the possible scale of this (imagine it really spanning all debian and redhat x86_64) no matter how subtle would always stand out
13:00             ---|<<-- dutch [~dutchingr@00028048.user.oftc.net] has quit (Quit: WeeChat 4.2.1)
13:11             ---|---> _discord_379839049617113090[m] [~discor_56@2001:470:1af1:101::1:4dca] has joined #xz-backdoor-reversing
13:11  _discord_3798 | <laanwj[m]> "nope, as far as known it doesn't..." <- It would be nice, if - once the reverse engineering has been completed - there could be some kind of final statement whether that is actually the case beyond any doubt. I.e.:... (full message at <https://matrix.org/_matrix/media/v3/download/matrix.org/pnNSAlFdEQuBJYeYtHVaDpMT>)
13:11             ---|User: *** _discord_379839049617113090[m] is now known as calestyo[m]
13:17      laanwj[m] | i agree it would be good to have a fully annotated disassembly/decompile so we can be sure what it does and doesn't do, at some point.
13:17      laanwj[m] | as this backdoor is so extensively studied by so many people, we just might
13:19             ---|---> zhli [~zhli@DN2lk43f7.stanford.edu] has joined #xz-backdoor-reversing
13:28             ---|<<-- zhli [~zhli@DN2lk43f7.stanford.edu] has quit (Quit: zhli)
13:28             ---|---> dutch [~dutchingr@00028048.user.oftc.net] has joined #xz-backdoor-reversing
13:32             ---|<<-- konomi [~konomi@00020287.user.oftc.net] has quit (Quit: konomi)
13:35             ---|---> konomi [~konomi@00020287.user.oftc.net] has joined #xz-backdoor-reversing
13:37             ---|<--- konomi [~konomi@00020287.user.oftc.net] has left #xz-backdoor-reversing ()
13:41             ---|---> bauen1 [~bauen1|@ppp-212-114-180-66.dynamic.mnet-online.de] has joined #xz-backdoor-reversing
14:12             ---|---> lucaat[m] [~discord48@2001:470:1af1:101::1:4dce] has joined #xz-backdoor-reversing
14:12             ---|---> r2rien [~me@abordeaux-653-1-47-108.w90-11.abo.wanadoo.fr] has joined #xz-backdoor-reversing
14:58             ---|---> Aquilla0424[m] [~discord14@2001:470:1af1:101::1:4dd2] has joined #xz-backdoor-reversing
14:58             ---|User: *** Aquilla0424[m] is now known as aqui_[m]
15:14             ---|<<-- r2rien [~me@abordeaux-653-1-47-108.w90-11.abo.wanadoo.fr] has quit (Ping timeout: 480 seconds)
15:29             ---|---> r2rien [~me@37.170.19.201] has joined #xz-backdoor-reversing
15:55             ---|<<-- bt_ [~bt@cobalt.ziad87.net] has quit (Quit: Client disconnect)
15:56     Smx2460[m] | ongoing documentation of the backdoor here: https://smx-smx.github.io/xzre/globals.html
15:58     Smx2460[m] | i will probably add fully decompiled code later on
15:58     Smx2460[m] | for now i'm documenting the interface
15:58     Smx2460[m] | * the interface (function prototypes and data structures)
15:58     Smx2460[m] | and the way it works
15:59             ---|---> bt_ [~bt@cobalt.ziad87.net] has joined #xz-backdoor-reversing
16:05             ---|---> armistace[m]1 [~armistace@2001:470:1af1:101::1:4dd7] has joined #xz-backdoor-reversing
16:41             ---|---> zhli [~zhli@DN2lk434m.stanford.edu] has joined #xz-backdoor-reversing
16:46  KonomiSheHer[ | (be nice if there was one central git the information sure is spread out atm)
16:47             ---|---> zhli_ [~zhli@DN2lk435r.stanford.edu] has joined #xz-backdoor-reversing
16:47             ---|<<-- zhli_ [~zhli@DN2lk435r.stanford.edu] has quit ()
16:49             ---|<<-- zhli [~zhli@DN2lk434m.stanford.edu] has quit (Ping timeout: 480 seconds)
--- Log closed Wed Apr 03 17:12:55 2024
--- Log opened Wed Apr 03 17:12:57 2024
17:12             ---|---> cmj` [slyalgo@sdf.org] has joined #xz-backdoor-reversing
17:12             -!-| Irssi: #xz-backdoor-reversing: Total of 474 nicks 2 ops, 0 halfops, 0 voices, 472 normal
17:13             -!-| Irssi: Channel: Join to #xz-backdoor-reversing was synced in 11 secs
17:25  _discord_1655 | As of typical with any RE efforts
17:28  _discord_1655 | s/efforts/projects/
17:30  _discord_1655 | s/of/is/, s/efforts/projects/
17:30             ---|<<-- r2rien [~me@37.170.19.201] has quit (Ping timeout: 480 seconds)
17:33  grandpacanary | i just read Lasse's announcement.  He intends to rebase and re-release to version level   https://tukaani.org/xz-backdoor/
17:33  grandpacanary | * version level 5.8.0   https://tukaani.org/xz-backdoor/
17:54             ---|---> onemeat [~kza@64.23.239.92] has joined #xz-backdoor-reversing
17:54       fn0rd[m] | yeah only part new there is the email part
17:55       fn0rd[m] | he got a lot of emails, thanks for the positive comments and he doesn't have the time to reply to most of them
18:15             ---|<<-- onemeat [~kza@64.23.239.92] has quit (Quit: WeeChat 4.0.5)
18:31             ---|---> Renn5000[m] [~discor_56@2001:470:1af1:101::1:4dde] has joined #xz-backdoor-reversing
18:31             ---|User: *** Renn5000[m] is now known as rennerik[m]
18:33  skolliets0[m] | <Smx2460[m]> "ongoing documentation of the..." <- do not click this. it is backdoored
--- Log closed Wed Apr 03 18:42:34 2024
--- Log opened Wed Apr 03 18:42:35 2024
18:42             ---|---> cmj` [slyalgo@sdf.org] has joined #xz-backdoor-reversing
18:42             -!-| Irssi: #xz-backdoor-reversing: Total of 474 nicks 2 ops, 0 halfops, 0 voices, 472 normal
18:42             -!-| Irssi: Channel: Join to #xz-backdoor-reversing was synced in 10 secs
